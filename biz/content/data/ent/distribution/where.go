// Code generated by ent, DO NOT EDIT.

package distribution

import (
	"ncobase/content/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldID, id))
}

// SpaceID applies equality check predicate on the "space_id" field. It's identical to SpaceIDEQ.
func SpaceID(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldSpaceID, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldUpdatedAt, v))
}

// TopicID applies equality check predicate on the "topic_id" field. It's identical to TopicIDEQ.
func TopicID(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldTopicID, v))
}

// ChannelID applies equality check predicate on the "channel_id" field. It's identical to ChannelIDEQ.
func ChannelID(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldChannelID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldStatus, v))
}

// ScheduledAt applies equality check predicate on the "scheduled_at" field. It's identical to ScheduledAtEQ.
func ScheduledAt(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldScheduledAt, v))
}

// PublishedAt applies equality check predicate on the "published_at" field. It's identical to PublishedAtEQ.
func PublishedAt(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldPublishedAt, v))
}

// ExternalID applies equality check predicate on the "external_id" field. It's identical to ExternalIDEQ.
func ExternalID(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldExternalID, v))
}

// ExternalURL applies equality check predicate on the "external_url" field. It's identical to ExternalURLEQ.
func ExternalURL(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldExternalURL, v))
}

// ErrorDetails applies equality check predicate on the "error_details" field. It's identical to ErrorDetailsEQ.
func ErrorDetails(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldErrorDetails, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldExtras))
}

// SpaceIDEQ applies the EQ predicate on the "space_id" field.
func SpaceIDEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldSpaceID, v))
}

// SpaceIDNEQ applies the NEQ predicate on the "space_id" field.
func SpaceIDNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldSpaceID, v))
}

// SpaceIDIn applies the In predicate on the "space_id" field.
func SpaceIDIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldSpaceID, vs...))
}

// SpaceIDNotIn applies the NotIn predicate on the "space_id" field.
func SpaceIDNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldSpaceID, vs...))
}

// SpaceIDGT applies the GT predicate on the "space_id" field.
func SpaceIDGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldSpaceID, v))
}

// SpaceIDGTE applies the GTE predicate on the "space_id" field.
func SpaceIDGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldSpaceID, v))
}

// SpaceIDLT applies the LT predicate on the "space_id" field.
func SpaceIDLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldSpaceID, v))
}

// SpaceIDLTE applies the LTE predicate on the "space_id" field.
func SpaceIDLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldSpaceID, v))
}

// SpaceIDContains applies the Contains predicate on the "space_id" field.
func SpaceIDContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldSpaceID, v))
}

// SpaceIDHasPrefix applies the HasPrefix predicate on the "space_id" field.
func SpaceIDHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldSpaceID, v))
}

// SpaceIDHasSuffix applies the HasSuffix predicate on the "space_id" field.
func SpaceIDHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldSpaceID, v))
}

// SpaceIDIsNil applies the IsNil predicate on the "space_id" field.
func SpaceIDIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldSpaceID))
}

// SpaceIDNotNil applies the NotNil predicate on the "space_id" field.
func SpaceIDNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldSpaceID))
}

// SpaceIDEqualFold applies the EqualFold predicate on the "space_id" field.
func SpaceIDEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldSpaceID, v))
}

// SpaceIDContainsFold applies the ContainsFold predicate on the "space_id" field.
func SpaceIDContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldSpaceID, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldUpdatedAt))
}

// TopicIDEQ applies the EQ predicate on the "topic_id" field.
func TopicIDEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldTopicID, v))
}

// TopicIDNEQ applies the NEQ predicate on the "topic_id" field.
func TopicIDNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldTopicID, v))
}

// TopicIDIn applies the In predicate on the "topic_id" field.
func TopicIDIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldTopicID, vs...))
}

// TopicIDNotIn applies the NotIn predicate on the "topic_id" field.
func TopicIDNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldTopicID, vs...))
}

// TopicIDGT applies the GT predicate on the "topic_id" field.
func TopicIDGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldTopicID, v))
}

// TopicIDGTE applies the GTE predicate on the "topic_id" field.
func TopicIDGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldTopicID, v))
}

// TopicIDLT applies the LT predicate on the "topic_id" field.
func TopicIDLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldTopicID, v))
}

// TopicIDLTE applies the LTE predicate on the "topic_id" field.
func TopicIDLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldTopicID, v))
}

// TopicIDContains applies the Contains predicate on the "topic_id" field.
func TopicIDContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldTopicID, v))
}

// TopicIDHasPrefix applies the HasPrefix predicate on the "topic_id" field.
func TopicIDHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldTopicID, v))
}

// TopicIDHasSuffix applies the HasSuffix predicate on the "topic_id" field.
func TopicIDHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldTopicID, v))
}

// TopicIDEqualFold applies the EqualFold predicate on the "topic_id" field.
func TopicIDEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldTopicID, v))
}

// TopicIDContainsFold applies the ContainsFold predicate on the "topic_id" field.
func TopicIDContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldTopicID, v))
}

// ChannelIDEQ applies the EQ predicate on the "channel_id" field.
func ChannelIDEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldChannelID, v))
}

// ChannelIDNEQ applies the NEQ predicate on the "channel_id" field.
func ChannelIDNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldChannelID, v))
}

// ChannelIDIn applies the In predicate on the "channel_id" field.
func ChannelIDIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldChannelID, vs...))
}

// ChannelIDNotIn applies the NotIn predicate on the "channel_id" field.
func ChannelIDNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldChannelID, vs...))
}

// ChannelIDGT applies the GT predicate on the "channel_id" field.
func ChannelIDGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldChannelID, v))
}

// ChannelIDGTE applies the GTE predicate on the "channel_id" field.
func ChannelIDGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldChannelID, v))
}

// ChannelIDLT applies the LT predicate on the "channel_id" field.
func ChannelIDLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldChannelID, v))
}

// ChannelIDLTE applies the LTE predicate on the "channel_id" field.
func ChannelIDLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldChannelID, v))
}

// ChannelIDContains applies the Contains predicate on the "channel_id" field.
func ChannelIDContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldChannelID, v))
}

// ChannelIDHasPrefix applies the HasPrefix predicate on the "channel_id" field.
func ChannelIDHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldChannelID, v))
}

// ChannelIDHasSuffix applies the HasSuffix predicate on the "channel_id" field.
func ChannelIDHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldChannelID, v))
}

// ChannelIDEqualFold applies the EqualFold predicate on the "channel_id" field.
func ChannelIDEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldChannelID, v))
}

// ChannelIDContainsFold applies the ContainsFold predicate on the "channel_id" field.
func ChannelIDContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldChannelID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldStatus, v))
}

// ScheduledAtEQ applies the EQ predicate on the "scheduled_at" field.
func ScheduledAtEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldScheduledAt, v))
}

// ScheduledAtNEQ applies the NEQ predicate on the "scheduled_at" field.
func ScheduledAtNEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldScheduledAt, v))
}

// ScheduledAtIn applies the In predicate on the "scheduled_at" field.
func ScheduledAtIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldScheduledAt, vs...))
}

// ScheduledAtNotIn applies the NotIn predicate on the "scheduled_at" field.
func ScheduledAtNotIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldScheduledAt, vs...))
}

// ScheduledAtGT applies the GT predicate on the "scheduled_at" field.
func ScheduledAtGT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldScheduledAt, v))
}

// ScheduledAtGTE applies the GTE predicate on the "scheduled_at" field.
func ScheduledAtGTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldScheduledAt, v))
}

// ScheduledAtLT applies the LT predicate on the "scheduled_at" field.
func ScheduledAtLT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldScheduledAt, v))
}

// ScheduledAtLTE applies the LTE predicate on the "scheduled_at" field.
func ScheduledAtLTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldScheduledAt, v))
}

// ScheduledAtIsNil applies the IsNil predicate on the "scheduled_at" field.
func ScheduledAtIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldScheduledAt))
}

// ScheduledAtNotNil applies the NotNil predicate on the "scheduled_at" field.
func ScheduledAtNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldScheduledAt))
}

// PublishedAtEQ applies the EQ predicate on the "published_at" field.
func PublishedAtEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldPublishedAt, v))
}

// PublishedAtNEQ applies the NEQ predicate on the "published_at" field.
func PublishedAtNEQ(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldPublishedAt, v))
}

// PublishedAtIn applies the In predicate on the "published_at" field.
func PublishedAtIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldPublishedAt, vs...))
}

// PublishedAtNotIn applies the NotIn predicate on the "published_at" field.
func PublishedAtNotIn(vs ...int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldPublishedAt, vs...))
}

// PublishedAtGT applies the GT predicate on the "published_at" field.
func PublishedAtGT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldPublishedAt, v))
}

// PublishedAtGTE applies the GTE predicate on the "published_at" field.
func PublishedAtGTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldPublishedAt, v))
}

// PublishedAtLT applies the LT predicate on the "published_at" field.
func PublishedAtLT(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldPublishedAt, v))
}

// PublishedAtLTE applies the LTE predicate on the "published_at" field.
func PublishedAtLTE(v int64) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldPublishedAt, v))
}

// PublishedAtIsNil applies the IsNil predicate on the "published_at" field.
func PublishedAtIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldPublishedAt))
}

// PublishedAtNotNil applies the NotNil predicate on the "published_at" field.
func PublishedAtNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldPublishedAt))
}

// ExternalIDEQ applies the EQ predicate on the "external_id" field.
func ExternalIDEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldExternalID, v))
}

// ExternalIDNEQ applies the NEQ predicate on the "external_id" field.
func ExternalIDNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldExternalID, v))
}

// ExternalIDIn applies the In predicate on the "external_id" field.
func ExternalIDIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldExternalID, vs...))
}

// ExternalIDNotIn applies the NotIn predicate on the "external_id" field.
func ExternalIDNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldExternalID, vs...))
}

// ExternalIDGT applies the GT predicate on the "external_id" field.
func ExternalIDGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldExternalID, v))
}

// ExternalIDGTE applies the GTE predicate on the "external_id" field.
func ExternalIDGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldExternalID, v))
}

// ExternalIDLT applies the LT predicate on the "external_id" field.
func ExternalIDLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldExternalID, v))
}

// ExternalIDLTE applies the LTE predicate on the "external_id" field.
func ExternalIDLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldExternalID, v))
}

// ExternalIDContains applies the Contains predicate on the "external_id" field.
func ExternalIDContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldExternalID, v))
}

// ExternalIDHasPrefix applies the HasPrefix predicate on the "external_id" field.
func ExternalIDHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldExternalID, v))
}

// ExternalIDHasSuffix applies the HasSuffix predicate on the "external_id" field.
func ExternalIDHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldExternalID, v))
}

// ExternalIDIsNil applies the IsNil predicate on the "external_id" field.
func ExternalIDIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldExternalID))
}

// ExternalIDNotNil applies the NotNil predicate on the "external_id" field.
func ExternalIDNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldExternalID))
}

// ExternalIDEqualFold applies the EqualFold predicate on the "external_id" field.
func ExternalIDEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldExternalID, v))
}

// ExternalIDContainsFold applies the ContainsFold predicate on the "external_id" field.
func ExternalIDContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldExternalID, v))
}

// ExternalURLEQ applies the EQ predicate on the "external_url" field.
func ExternalURLEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldExternalURL, v))
}

// ExternalURLNEQ applies the NEQ predicate on the "external_url" field.
func ExternalURLNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldExternalURL, v))
}

// ExternalURLIn applies the In predicate on the "external_url" field.
func ExternalURLIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldExternalURL, vs...))
}

// ExternalURLNotIn applies the NotIn predicate on the "external_url" field.
func ExternalURLNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldExternalURL, vs...))
}

// ExternalURLGT applies the GT predicate on the "external_url" field.
func ExternalURLGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldExternalURL, v))
}

// ExternalURLGTE applies the GTE predicate on the "external_url" field.
func ExternalURLGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldExternalURL, v))
}

// ExternalURLLT applies the LT predicate on the "external_url" field.
func ExternalURLLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldExternalURL, v))
}

// ExternalURLLTE applies the LTE predicate on the "external_url" field.
func ExternalURLLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldExternalURL, v))
}

// ExternalURLContains applies the Contains predicate on the "external_url" field.
func ExternalURLContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldExternalURL, v))
}

// ExternalURLHasPrefix applies the HasPrefix predicate on the "external_url" field.
func ExternalURLHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldExternalURL, v))
}

// ExternalURLHasSuffix applies the HasSuffix predicate on the "external_url" field.
func ExternalURLHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldExternalURL, v))
}

// ExternalURLIsNil applies the IsNil predicate on the "external_url" field.
func ExternalURLIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldExternalURL))
}

// ExternalURLNotNil applies the NotNil predicate on the "external_url" field.
func ExternalURLNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldExternalURL))
}

// ExternalURLEqualFold applies the EqualFold predicate on the "external_url" field.
func ExternalURLEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldExternalURL, v))
}

// ExternalURLContainsFold applies the ContainsFold predicate on the "external_url" field.
func ExternalURLContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldExternalURL, v))
}

// ErrorDetailsEQ applies the EQ predicate on the "error_details" field.
func ErrorDetailsEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEQ(FieldErrorDetails, v))
}

// ErrorDetailsNEQ applies the NEQ predicate on the "error_details" field.
func ErrorDetailsNEQ(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNEQ(FieldErrorDetails, v))
}

// ErrorDetailsIn applies the In predicate on the "error_details" field.
func ErrorDetailsIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldIn(FieldErrorDetails, vs...))
}

// ErrorDetailsNotIn applies the NotIn predicate on the "error_details" field.
func ErrorDetailsNotIn(vs ...string) predicate.Distribution {
	return predicate.Distribution(sql.FieldNotIn(FieldErrorDetails, vs...))
}

// ErrorDetailsGT applies the GT predicate on the "error_details" field.
func ErrorDetailsGT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGT(FieldErrorDetails, v))
}

// ErrorDetailsGTE applies the GTE predicate on the "error_details" field.
func ErrorDetailsGTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldGTE(FieldErrorDetails, v))
}

// ErrorDetailsLT applies the LT predicate on the "error_details" field.
func ErrorDetailsLT(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLT(FieldErrorDetails, v))
}

// ErrorDetailsLTE applies the LTE predicate on the "error_details" field.
func ErrorDetailsLTE(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldLTE(FieldErrorDetails, v))
}

// ErrorDetailsContains applies the Contains predicate on the "error_details" field.
func ErrorDetailsContains(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContains(FieldErrorDetails, v))
}

// ErrorDetailsHasPrefix applies the HasPrefix predicate on the "error_details" field.
func ErrorDetailsHasPrefix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasPrefix(FieldErrorDetails, v))
}

// ErrorDetailsHasSuffix applies the HasSuffix predicate on the "error_details" field.
func ErrorDetailsHasSuffix(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldHasSuffix(FieldErrorDetails, v))
}

// ErrorDetailsIsNil applies the IsNil predicate on the "error_details" field.
func ErrorDetailsIsNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldIsNull(FieldErrorDetails))
}

// ErrorDetailsNotNil applies the NotNil predicate on the "error_details" field.
func ErrorDetailsNotNil() predicate.Distribution {
	return predicate.Distribution(sql.FieldNotNull(FieldErrorDetails))
}

// ErrorDetailsEqualFold applies the EqualFold predicate on the "error_details" field.
func ErrorDetailsEqualFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldEqualFold(FieldErrorDetails, v))
}

// ErrorDetailsContainsFold applies the ContainsFold predicate on the "error_details" field.
func ErrorDetailsContainsFold(v string) predicate.Distribution {
	return predicate.Distribution(sql.FieldContainsFold(FieldErrorDetails, v))
}

// HasTopic applies the HasEdge predicate on the "topic" edge.
func HasTopic() predicate.Distribution {
	return predicate.Distribution(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TopicTable, TopicColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTopicWith applies the HasEdge predicate on the "topic" edge with a given conditions (other predicates).
func HasTopicWith(preds ...predicate.Topic) predicate.Distribution {
	return predicate.Distribution(func(s *sql.Selector) {
		step := newTopicStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasChannel applies the HasEdge predicate on the "channel" edge.
func HasChannel() predicate.Distribution {
	return predicate.Distribution(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ChannelTable, ChannelColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasChannelWith applies the HasEdge predicate on the "channel" edge with a given conditions (other predicates).
func HasChannelWith(preds ...predicate.CMSChannel) predicate.Distribution {
	return predicate.Distribution(func(s *sql.Selector) {
		step := newChannelStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Distribution) predicate.Distribution {
	return predicate.Distribution(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Distribution) predicate.Distribution {
	return predicate.Distribution(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Distribution) predicate.Distribution {
	return predicate.Distribution(sql.NotPredicates(p))
}
