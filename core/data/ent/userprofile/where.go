// Code generated by ent, DO NOT EDIT.

package userprofile

import (
	"ncobase/core/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContainsFold(FieldID, id))
}

// DisplayName applies equality check predicate on the "display_name" field. It's identical to DisplayNameEQ.
func DisplayName(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldDisplayName, v))
}

// ShortBio applies equality check predicate on the "short_bio" field. It's identical to ShortBioEQ.
func ShortBio(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldShortBio, v))
}

// About applies equality check predicate on the "about" field. It's identical to AboutEQ.
func About(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldAbout, v))
}

// Thumbnail applies equality check predicate on the "thumbnail" field. It's identical to ThumbnailEQ.
func Thumbnail(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldThumbnail, v))
}

// DisplayNameEQ applies the EQ predicate on the "display_name" field.
func DisplayNameEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldDisplayName, v))
}

// DisplayNameNEQ applies the NEQ predicate on the "display_name" field.
func DisplayNameNEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNEQ(FieldDisplayName, v))
}

// DisplayNameIn applies the In predicate on the "display_name" field.
func DisplayNameIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIn(FieldDisplayName, vs...))
}

// DisplayNameNotIn applies the NotIn predicate on the "display_name" field.
func DisplayNameNotIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotIn(FieldDisplayName, vs...))
}

// DisplayNameGT applies the GT predicate on the "display_name" field.
func DisplayNameGT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGT(FieldDisplayName, v))
}

// DisplayNameGTE applies the GTE predicate on the "display_name" field.
func DisplayNameGTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGTE(FieldDisplayName, v))
}

// DisplayNameLT applies the LT predicate on the "display_name" field.
func DisplayNameLT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLT(FieldDisplayName, v))
}

// DisplayNameLTE applies the LTE predicate on the "display_name" field.
func DisplayNameLTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLTE(FieldDisplayName, v))
}

// DisplayNameContains applies the Contains predicate on the "display_name" field.
func DisplayNameContains(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContains(FieldDisplayName, v))
}

// DisplayNameHasPrefix applies the HasPrefix predicate on the "display_name" field.
func DisplayNameHasPrefix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasPrefix(FieldDisplayName, v))
}

// DisplayNameHasSuffix applies the HasSuffix predicate on the "display_name" field.
func DisplayNameHasSuffix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasSuffix(FieldDisplayName, v))
}

// DisplayNameIsNil applies the IsNil predicate on the "display_name" field.
func DisplayNameIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldDisplayName))
}

// DisplayNameNotNil applies the NotNil predicate on the "display_name" field.
func DisplayNameNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldDisplayName))
}

// DisplayNameEqualFold applies the EqualFold predicate on the "display_name" field.
func DisplayNameEqualFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEqualFold(FieldDisplayName, v))
}

// DisplayNameContainsFold applies the ContainsFold predicate on the "display_name" field.
func DisplayNameContainsFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContainsFold(FieldDisplayName, v))
}

// ShortBioEQ applies the EQ predicate on the "short_bio" field.
func ShortBioEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldShortBio, v))
}

// ShortBioNEQ applies the NEQ predicate on the "short_bio" field.
func ShortBioNEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNEQ(FieldShortBio, v))
}

// ShortBioIn applies the In predicate on the "short_bio" field.
func ShortBioIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIn(FieldShortBio, vs...))
}

// ShortBioNotIn applies the NotIn predicate on the "short_bio" field.
func ShortBioNotIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotIn(FieldShortBio, vs...))
}

// ShortBioGT applies the GT predicate on the "short_bio" field.
func ShortBioGT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGT(FieldShortBio, v))
}

// ShortBioGTE applies the GTE predicate on the "short_bio" field.
func ShortBioGTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGTE(FieldShortBio, v))
}

// ShortBioLT applies the LT predicate on the "short_bio" field.
func ShortBioLT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLT(FieldShortBio, v))
}

// ShortBioLTE applies the LTE predicate on the "short_bio" field.
func ShortBioLTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLTE(FieldShortBio, v))
}

// ShortBioContains applies the Contains predicate on the "short_bio" field.
func ShortBioContains(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContains(FieldShortBio, v))
}

// ShortBioHasPrefix applies the HasPrefix predicate on the "short_bio" field.
func ShortBioHasPrefix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasPrefix(FieldShortBio, v))
}

// ShortBioHasSuffix applies the HasSuffix predicate on the "short_bio" field.
func ShortBioHasSuffix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasSuffix(FieldShortBio, v))
}

// ShortBioIsNil applies the IsNil predicate on the "short_bio" field.
func ShortBioIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldShortBio))
}

// ShortBioNotNil applies the NotNil predicate on the "short_bio" field.
func ShortBioNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldShortBio))
}

// ShortBioEqualFold applies the EqualFold predicate on the "short_bio" field.
func ShortBioEqualFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEqualFold(FieldShortBio, v))
}

// ShortBioContainsFold applies the ContainsFold predicate on the "short_bio" field.
func ShortBioContainsFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContainsFold(FieldShortBio, v))
}

// AboutEQ applies the EQ predicate on the "about" field.
func AboutEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldAbout, v))
}

// AboutNEQ applies the NEQ predicate on the "about" field.
func AboutNEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNEQ(FieldAbout, v))
}

// AboutIn applies the In predicate on the "about" field.
func AboutIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIn(FieldAbout, vs...))
}

// AboutNotIn applies the NotIn predicate on the "about" field.
func AboutNotIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotIn(FieldAbout, vs...))
}

// AboutGT applies the GT predicate on the "about" field.
func AboutGT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGT(FieldAbout, v))
}

// AboutGTE applies the GTE predicate on the "about" field.
func AboutGTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGTE(FieldAbout, v))
}

// AboutLT applies the LT predicate on the "about" field.
func AboutLT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLT(FieldAbout, v))
}

// AboutLTE applies the LTE predicate on the "about" field.
func AboutLTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLTE(FieldAbout, v))
}

// AboutContains applies the Contains predicate on the "about" field.
func AboutContains(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContains(FieldAbout, v))
}

// AboutHasPrefix applies the HasPrefix predicate on the "about" field.
func AboutHasPrefix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasPrefix(FieldAbout, v))
}

// AboutHasSuffix applies the HasSuffix predicate on the "about" field.
func AboutHasSuffix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasSuffix(FieldAbout, v))
}

// AboutIsNil applies the IsNil predicate on the "about" field.
func AboutIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldAbout))
}

// AboutNotNil applies the NotNil predicate on the "about" field.
func AboutNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldAbout))
}

// AboutEqualFold applies the EqualFold predicate on the "about" field.
func AboutEqualFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEqualFold(FieldAbout, v))
}

// AboutContainsFold applies the ContainsFold predicate on the "about" field.
func AboutContainsFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContainsFold(FieldAbout, v))
}

// LinksIsNil applies the IsNil predicate on the "links" field.
func LinksIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldLinks))
}

// LinksNotNil applies the NotNil predicate on the "links" field.
func LinksNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldLinks))
}

// ThumbnailEQ applies the EQ predicate on the "thumbnail" field.
func ThumbnailEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEQ(FieldThumbnail, v))
}

// ThumbnailNEQ applies the NEQ predicate on the "thumbnail" field.
func ThumbnailNEQ(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNEQ(FieldThumbnail, v))
}

// ThumbnailIn applies the In predicate on the "thumbnail" field.
func ThumbnailIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIn(FieldThumbnail, vs...))
}

// ThumbnailNotIn applies the NotIn predicate on the "thumbnail" field.
func ThumbnailNotIn(vs ...string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotIn(FieldThumbnail, vs...))
}

// ThumbnailGT applies the GT predicate on the "thumbnail" field.
func ThumbnailGT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGT(FieldThumbnail, v))
}

// ThumbnailGTE applies the GTE predicate on the "thumbnail" field.
func ThumbnailGTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldGTE(FieldThumbnail, v))
}

// ThumbnailLT applies the LT predicate on the "thumbnail" field.
func ThumbnailLT(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLT(FieldThumbnail, v))
}

// ThumbnailLTE applies the LTE predicate on the "thumbnail" field.
func ThumbnailLTE(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldLTE(FieldThumbnail, v))
}

// ThumbnailContains applies the Contains predicate on the "thumbnail" field.
func ThumbnailContains(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContains(FieldThumbnail, v))
}

// ThumbnailHasPrefix applies the HasPrefix predicate on the "thumbnail" field.
func ThumbnailHasPrefix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasPrefix(FieldThumbnail, v))
}

// ThumbnailHasSuffix applies the HasSuffix predicate on the "thumbnail" field.
func ThumbnailHasSuffix(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldHasSuffix(FieldThumbnail, v))
}

// ThumbnailIsNil applies the IsNil predicate on the "thumbnail" field.
func ThumbnailIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldThumbnail))
}

// ThumbnailNotNil applies the NotNil predicate on the "thumbnail" field.
func ThumbnailNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldThumbnail))
}

// ThumbnailEqualFold applies the EqualFold predicate on the "thumbnail" field.
func ThumbnailEqualFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldEqualFold(FieldThumbnail, v))
}

// ThumbnailContainsFold applies the ContainsFold predicate on the "thumbnail" field.
func ThumbnailContainsFold(v string) predicate.UserProfile {
	return predicate.UserProfile(sql.FieldContainsFold(FieldThumbnail, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.UserProfile {
	return predicate.UserProfile(sql.FieldNotNull(FieldExtras))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.UserProfile) predicate.UserProfile {
	return predicate.UserProfile(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.UserProfile) predicate.UserProfile {
	return predicate.UserProfile(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.UserProfile) predicate.UserProfile {
	return predicate.UserProfile(sql.NotPredicates(p))
}
