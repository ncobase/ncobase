// Code generated by ent, DO NOT EDIT.

package spacebilling

import (
	"ncobase/space/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldID, id))
}

// SpaceID applies equality check predicate on the "space_id" field. It's identical to SpaceIDEQ.
func SpaceID(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldSpaceID, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldDescription, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldUpdatedAt, v))
}

// BillingPeriod applies equality check predicate on the "billing_period" field. It's identical to BillingPeriodEQ.
func BillingPeriod(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldBillingPeriod, v))
}

// PeriodStart applies equality check predicate on the "period_start" field. It's identical to PeriodStartEQ.
func PeriodStart(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPeriodStart, v))
}

// PeriodEnd applies equality check predicate on the "period_end" field. It's identical to PeriodEndEQ.
func PeriodEnd(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPeriodEnd, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldAmount, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCurrency, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldStatus, v))
}

// InvoiceNumber applies equality check predicate on the "invoice_number" field. It's identical to InvoiceNumberEQ.
func InvoiceNumber(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldInvoiceNumber, v))
}

// PaymentMethod applies equality check predicate on the "payment_method" field. It's identical to PaymentMethodEQ.
func PaymentMethod(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPaymentMethod, v))
}

// PaidAt applies equality check predicate on the "paid_at" field. It's identical to PaidAtEQ.
func PaidAt(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPaidAt, v))
}

// DueDate applies equality check predicate on the "due_date" field. It's identical to DueDateEQ.
func DueDate(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldDueDate, v))
}

// SpaceIDEQ applies the EQ predicate on the "space_id" field.
func SpaceIDEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldSpaceID, v))
}

// SpaceIDNEQ applies the NEQ predicate on the "space_id" field.
func SpaceIDNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldSpaceID, v))
}

// SpaceIDIn applies the In predicate on the "space_id" field.
func SpaceIDIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldSpaceID, vs...))
}

// SpaceIDNotIn applies the NotIn predicate on the "space_id" field.
func SpaceIDNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldSpaceID, vs...))
}

// SpaceIDGT applies the GT predicate on the "space_id" field.
func SpaceIDGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldSpaceID, v))
}

// SpaceIDGTE applies the GTE predicate on the "space_id" field.
func SpaceIDGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldSpaceID, v))
}

// SpaceIDLT applies the LT predicate on the "space_id" field.
func SpaceIDLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldSpaceID, v))
}

// SpaceIDLTE applies the LTE predicate on the "space_id" field.
func SpaceIDLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldSpaceID, v))
}

// SpaceIDContains applies the Contains predicate on the "space_id" field.
func SpaceIDContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldSpaceID, v))
}

// SpaceIDHasPrefix applies the HasPrefix predicate on the "space_id" field.
func SpaceIDHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldSpaceID, v))
}

// SpaceIDHasSuffix applies the HasSuffix predicate on the "space_id" field.
func SpaceIDHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldSpaceID, v))
}

// SpaceIDIsNil applies the IsNil predicate on the "space_id" field.
func SpaceIDIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldSpaceID))
}

// SpaceIDNotNil applies the NotNil predicate on the "space_id" field.
func SpaceIDNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldSpaceID))
}

// SpaceIDEqualFold applies the EqualFold predicate on the "space_id" field.
func SpaceIDEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldSpaceID, v))
}

// SpaceIDContainsFold applies the ContainsFold predicate on the "space_id" field.
func SpaceIDContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldSpaceID, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldDescription, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldExtras))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldUpdatedAt))
}

// BillingPeriodEQ applies the EQ predicate on the "billing_period" field.
func BillingPeriodEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldBillingPeriod, v))
}

// BillingPeriodNEQ applies the NEQ predicate on the "billing_period" field.
func BillingPeriodNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldBillingPeriod, v))
}

// BillingPeriodIn applies the In predicate on the "billing_period" field.
func BillingPeriodIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldBillingPeriod, vs...))
}

// BillingPeriodNotIn applies the NotIn predicate on the "billing_period" field.
func BillingPeriodNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldBillingPeriod, vs...))
}

// BillingPeriodGT applies the GT predicate on the "billing_period" field.
func BillingPeriodGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldBillingPeriod, v))
}

// BillingPeriodGTE applies the GTE predicate on the "billing_period" field.
func BillingPeriodGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldBillingPeriod, v))
}

// BillingPeriodLT applies the LT predicate on the "billing_period" field.
func BillingPeriodLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldBillingPeriod, v))
}

// BillingPeriodLTE applies the LTE predicate on the "billing_period" field.
func BillingPeriodLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldBillingPeriod, v))
}

// BillingPeriodContains applies the Contains predicate on the "billing_period" field.
func BillingPeriodContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldBillingPeriod, v))
}

// BillingPeriodHasPrefix applies the HasPrefix predicate on the "billing_period" field.
func BillingPeriodHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldBillingPeriod, v))
}

// BillingPeriodHasSuffix applies the HasSuffix predicate on the "billing_period" field.
func BillingPeriodHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldBillingPeriod, v))
}

// BillingPeriodEqualFold applies the EqualFold predicate on the "billing_period" field.
func BillingPeriodEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldBillingPeriod, v))
}

// BillingPeriodContainsFold applies the ContainsFold predicate on the "billing_period" field.
func BillingPeriodContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldBillingPeriod, v))
}

// PeriodStartEQ applies the EQ predicate on the "period_start" field.
func PeriodStartEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPeriodStart, v))
}

// PeriodStartNEQ applies the NEQ predicate on the "period_start" field.
func PeriodStartNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldPeriodStart, v))
}

// PeriodStartIn applies the In predicate on the "period_start" field.
func PeriodStartIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldPeriodStart, vs...))
}

// PeriodStartNotIn applies the NotIn predicate on the "period_start" field.
func PeriodStartNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldPeriodStart, vs...))
}

// PeriodStartGT applies the GT predicate on the "period_start" field.
func PeriodStartGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldPeriodStart, v))
}

// PeriodStartGTE applies the GTE predicate on the "period_start" field.
func PeriodStartGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldPeriodStart, v))
}

// PeriodStartLT applies the LT predicate on the "period_start" field.
func PeriodStartLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldPeriodStart, v))
}

// PeriodStartLTE applies the LTE predicate on the "period_start" field.
func PeriodStartLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldPeriodStart, v))
}

// PeriodStartIsNil applies the IsNil predicate on the "period_start" field.
func PeriodStartIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldPeriodStart))
}

// PeriodStartNotNil applies the NotNil predicate on the "period_start" field.
func PeriodStartNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldPeriodStart))
}

// PeriodEndEQ applies the EQ predicate on the "period_end" field.
func PeriodEndEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPeriodEnd, v))
}

// PeriodEndNEQ applies the NEQ predicate on the "period_end" field.
func PeriodEndNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldPeriodEnd, v))
}

// PeriodEndIn applies the In predicate on the "period_end" field.
func PeriodEndIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldPeriodEnd, vs...))
}

// PeriodEndNotIn applies the NotIn predicate on the "period_end" field.
func PeriodEndNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldPeriodEnd, vs...))
}

// PeriodEndGT applies the GT predicate on the "period_end" field.
func PeriodEndGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldPeriodEnd, v))
}

// PeriodEndGTE applies the GTE predicate on the "period_end" field.
func PeriodEndGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldPeriodEnd, v))
}

// PeriodEndLT applies the LT predicate on the "period_end" field.
func PeriodEndLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldPeriodEnd, v))
}

// PeriodEndLTE applies the LTE predicate on the "period_end" field.
func PeriodEndLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldPeriodEnd, v))
}

// PeriodEndIsNil applies the IsNil predicate on the "period_end" field.
func PeriodEndIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldPeriodEnd))
}

// PeriodEndNotNil applies the NotNil predicate on the "period_end" field.
func PeriodEndNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldPeriodEnd))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v float64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldAmount, v))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldCurrency, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldStatus, v))
}

// InvoiceNumberEQ applies the EQ predicate on the "invoice_number" field.
func InvoiceNumberEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldInvoiceNumber, v))
}

// InvoiceNumberNEQ applies the NEQ predicate on the "invoice_number" field.
func InvoiceNumberNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldInvoiceNumber, v))
}

// InvoiceNumberIn applies the In predicate on the "invoice_number" field.
func InvoiceNumberIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldInvoiceNumber, vs...))
}

// InvoiceNumberNotIn applies the NotIn predicate on the "invoice_number" field.
func InvoiceNumberNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldInvoiceNumber, vs...))
}

// InvoiceNumberGT applies the GT predicate on the "invoice_number" field.
func InvoiceNumberGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldInvoiceNumber, v))
}

// InvoiceNumberGTE applies the GTE predicate on the "invoice_number" field.
func InvoiceNumberGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldInvoiceNumber, v))
}

// InvoiceNumberLT applies the LT predicate on the "invoice_number" field.
func InvoiceNumberLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldInvoiceNumber, v))
}

// InvoiceNumberLTE applies the LTE predicate on the "invoice_number" field.
func InvoiceNumberLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldInvoiceNumber, v))
}

// InvoiceNumberContains applies the Contains predicate on the "invoice_number" field.
func InvoiceNumberContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldInvoiceNumber, v))
}

// InvoiceNumberHasPrefix applies the HasPrefix predicate on the "invoice_number" field.
func InvoiceNumberHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldInvoiceNumber, v))
}

// InvoiceNumberHasSuffix applies the HasSuffix predicate on the "invoice_number" field.
func InvoiceNumberHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldInvoiceNumber, v))
}

// InvoiceNumberIsNil applies the IsNil predicate on the "invoice_number" field.
func InvoiceNumberIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldInvoiceNumber))
}

// InvoiceNumberNotNil applies the NotNil predicate on the "invoice_number" field.
func InvoiceNumberNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldInvoiceNumber))
}

// InvoiceNumberEqualFold applies the EqualFold predicate on the "invoice_number" field.
func InvoiceNumberEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldInvoiceNumber, v))
}

// InvoiceNumberContainsFold applies the ContainsFold predicate on the "invoice_number" field.
func InvoiceNumberContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldInvoiceNumber, v))
}

// PaymentMethodEQ applies the EQ predicate on the "payment_method" field.
func PaymentMethodEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPaymentMethod, v))
}

// PaymentMethodNEQ applies the NEQ predicate on the "payment_method" field.
func PaymentMethodNEQ(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldPaymentMethod, v))
}

// PaymentMethodIn applies the In predicate on the "payment_method" field.
func PaymentMethodIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldPaymentMethod, vs...))
}

// PaymentMethodNotIn applies the NotIn predicate on the "payment_method" field.
func PaymentMethodNotIn(vs ...string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldPaymentMethod, vs...))
}

// PaymentMethodGT applies the GT predicate on the "payment_method" field.
func PaymentMethodGT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldPaymentMethod, v))
}

// PaymentMethodGTE applies the GTE predicate on the "payment_method" field.
func PaymentMethodGTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldPaymentMethod, v))
}

// PaymentMethodLT applies the LT predicate on the "payment_method" field.
func PaymentMethodLT(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldPaymentMethod, v))
}

// PaymentMethodLTE applies the LTE predicate on the "payment_method" field.
func PaymentMethodLTE(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldPaymentMethod, v))
}

// PaymentMethodContains applies the Contains predicate on the "payment_method" field.
func PaymentMethodContains(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContains(FieldPaymentMethod, v))
}

// PaymentMethodHasPrefix applies the HasPrefix predicate on the "payment_method" field.
func PaymentMethodHasPrefix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasPrefix(FieldPaymentMethod, v))
}

// PaymentMethodHasSuffix applies the HasSuffix predicate on the "payment_method" field.
func PaymentMethodHasSuffix(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldHasSuffix(FieldPaymentMethod, v))
}

// PaymentMethodIsNil applies the IsNil predicate on the "payment_method" field.
func PaymentMethodIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldPaymentMethod))
}

// PaymentMethodNotNil applies the NotNil predicate on the "payment_method" field.
func PaymentMethodNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldPaymentMethod))
}

// PaymentMethodEqualFold applies the EqualFold predicate on the "payment_method" field.
func PaymentMethodEqualFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEqualFold(FieldPaymentMethod, v))
}

// PaymentMethodContainsFold applies the ContainsFold predicate on the "payment_method" field.
func PaymentMethodContainsFold(v string) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldContainsFold(FieldPaymentMethod, v))
}

// PaidAtEQ applies the EQ predicate on the "paid_at" field.
func PaidAtEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldPaidAt, v))
}

// PaidAtNEQ applies the NEQ predicate on the "paid_at" field.
func PaidAtNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldPaidAt, v))
}

// PaidAtIn applies the In predicate on the "paid_at" field.
func PaidAtIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldPaidAt, vs...))
}

// PaidAtNotIn applies the NotIn predicate on the "paid_at" field.
func PaidAtNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldPaidAt, vs...))
}

// PaidAtGT applies the GT predicate on the "paid_at" field.
func PaidAtGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldPaidAt, v))
}

// PaidAtGTE applies the GTE predicate on the "paid_at" field.
func PaidAtGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldPaidAt, v))
}

// PaidAtLT applies the LT predicate on the "paid_at" field.
func PaidAtLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldPaidAt, v))
}

// PaidAtLTE applies the LTE predicate on the "paid_at" field.
func PaidAtLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldPaidAt, v))
}

// PaidAtIsNil applies the IsNil predicate on the "paid_at" field.
func PaidAtIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldPaidAt))
}

// PaidAtNotNil applies the NotNil predicate on the "paid_at" field.
func PaidAtNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldPaidAt))
}

// DueDateEQ applies the EQ predicate on the "due_date" field.
func DueDateEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldEQ(FieldDueDate, v))
}

// DueDateNEQ applies the NEQ predicate on the "due_date" field.
func DueDateNEQ(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNEQ(FieldDueDate, v))
}

// DueDateIn applies the In predicate on the "due_date" field.
func DueDateIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIn(FieldDueDate, vs...))
}

// DueDateNotIn applies the NotIn predicate on the "due_date" field.
func DueDateNotIn(vs ...int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotIn(FieldDueDate, vs...))
}

// DueDateGT applies the GT predicate on the "due_date" field.
func DueDateGT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGT(FieldDueDate, v))
}

// DueDateGTE applies the GTE predicate on the "due_date" field.
func DueDateGTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldGTE(FieldDueDate, v))
}

// DueDateLT applies the LT predicate on the "due_date" field.
func DueDateLT(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLT(FieldDueDate, v))
}

// DueDateLTE applies the LTE predicate on the "due_date" field.
func DueDateLTE(v int64) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldLTE(FieldDueDate, v))
}

// DueDateIsNil applies the IsNil predicate on the "due_date" field.
func DueDateIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldDueDate))
}

// DueDateNotNil applies the NotNil predicate on the "due_date" field.
func DueDateNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldDueDate))
}

// UsageDetailsIsNil applies the IsNil predicate on the "usage_details" field.
func UsageDetailsIsNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldIsNull(FieldUsageDetails))
}

// UsageDetailsNotNil applies the NotNil predicate on the "usage_details" field.
func UsageDetailsNotNil() predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.FieldNotNull(FieldUsageDetails))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpaceBilling) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpaceBilling) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpaceBilling) predicate.SpaceBilling {
	return predicate.SpaceBilling(sql.NotPredicates(p))
}
