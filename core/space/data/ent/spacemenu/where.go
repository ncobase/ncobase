// Code generated by ent, DO NOT EDIT.

package spacemenu

import (
	"ncobase/space/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContainsFold(FieldID, id))
}

// SpaceID applies equality check predicate on the "space_id" field. It's identical to SpaceIDEQ.
func SpaceID(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldSpaceID, v))
}

// MenuID applies equality check predicate on the "menu_id" field. It's identical to MenuIDEQ.
func MenuID(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldMenuID, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldUpdatedAt, v))
}

// SpaceIDEQ applies the EQ predicate on the "space_id" field.
func SpaceIDEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldSpaceID, v))
}

// SpaceIDNEQ applies the NEQ predicate on the "space_id" field.
func SpaceIDNEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldSpaceID, v))
}

// SpaceIDIn applies the In predicate on the "space_id" field.
func SpaceIDIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldSpaceID, vs...))
}

// SpaceIDNotIn applies the NotIn predicate on the "space_id" field.
func SpaceIDNotIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldSpaceID, vs...))
}

// SpaceIDGT applies the GT predicate on the "space_id" field.
func SpaceIDGT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldSpaceID, v))
}

// SpaceIDGTE applies the GTE predicate on the "space_id" field.
func SpaceIDGTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldSpaceID, v))
}

// SpaceIDLT applies the LT predicate on the "space_id" field.
func SpaceIDLT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldSpaceID, v))
}

// SpaceIDLTE applies the LTE predicate on the "space_id" field.
func SpaceIDLTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldSpaceID, v))
}

// SpaceIDContains applies the Contains predicate on the "space_id" field.
func SpaceIDContains(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContains(FieldSpaceID, v))
}

// SpaceIDHasPrefix applies the HasPrefix predicate on the "space_id" field.
func SpaceIDHasPrefix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasPrefix(FieldSpaceID, v))
}

// SpaceIDHasSuffix applies the HasSuffix predicate on the "space_id" field.
func SpaceIDHasSuffix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasSuffix(FieldSpaceID, v))
}

// SpaceIDIsNil applies the IsNil predicate on the "space_id" field.
func SpaceIDIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldSpaceID))
}

// SpaceIDNotNil applies the NotNil predicate on the "space_id" field.
func SpaceIDNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldSpaceID))
}

// SpaceIDEqualFold applies the EqualFold predicate on the "space_id" field.
func SpaceIDEqualFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEqualFold(FieldSpaceID, v))
}

// SpaceIDContainsFold applies the ContainsFold predicate on the "space_id" field.
func SpaceIDContainsFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContainsFold(FieldSpaceID, v))
}

// MenuIDEQ applies the EQ predicate on the "menu_id" field.
func MenuIDEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldMenuID, v))
}

// MenuIDNEQ applies the NEQ predicate on the "menu_id" field.
func MenuIDNEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldMenuID, v))
}

// MenuIDIn applies the In predicate on the "menu_id" field.
func MenuIDIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldMenuID, vs...))
}

// MenuIDNotIn applies the NotIn predicate on the "menu_id" field.
func MenuIDNotIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldMenuID, vs...))
}

// MenuIDGT applies the GT predicate on the "menu_id" field.
func MenuIDGT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldMenuID, v))
}

// MenuIDGTE applies the GTE predicate on the "menu_id" field.
func MenuIDGTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldMenuID, v))
}

// MenuIDLT applies the LT predicate on the "menu_id" field.
func MenuIDLT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldMenuID, v))
}

// MenuIDLTE applies the LTE predicate on the "menu_id" field.
func MenuIDLTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldMenuID, v))
}

// MenuIDContains applies the Contains predicate on the "menu_id" field.
func MenuIDContains(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContains(FieldMenuID, v))
}

// MenuIDHasPrefix applies the HasPrefix predicate on the "menu_id" field.
func MenuIDHasPrefix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasPrefix(FieldMenuID, v))
}

// MenuIDHasSuffix applies the HasSuffix predicate on the "menu_id" field.
func MenuIDHasSuffix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasSuffix(FieldMenuID, v))
}

// MenuIDIsNil applies the IsNil predicate on the "menu_id" field.
func MenuIDIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldMenuID))
}

// MenuIDNotNil applies the NotNil predicate on the "menu_id" field.
func MenuIDNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldMenuID))
}

// MenuIDEqualFold applies the EqualFold predicate on the "menu_id" field.
func MenuIDEqualFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEqualFold(FieldMenuID, v))
}

// MenuIDContainsFold applies the ContainsFold predicate on the "menu_id" field.
func MenuIDContainsFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContainsFold(FieldMenuID, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpaceMenu) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpaceMenu) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpaceMenu) predicate.SpaceMenu {
	return predicate.SpaceMenu(sql.NotPredicates(p))
}
