// Code generated by ent, DO NOT EDIT.

package spacesetting

import (
	"ncobase/space/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldID, id))
}

// SpaceID applies equality check predicate on the "space_id" field. It's identical to SpaceIDEQ.
func SpaceID(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSpaceID, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldDescription, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// SettingKey applies equality check predicate on the "setting_key" field. It's identical to SettingKeyEQ.
func SettingKey(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingKey, v))
}

// SettingName applies equality check predicate on the "setting_name" field. It's identical to SettingNameEQ.
func SettingName(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingName, v))
}

// SettingValue applies equality check predicate on the "setting_value" field. It's identical to SettingValueEQ.
func SettingValue(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingValue, v))
}

// DefaultValue applies equality check predicate on the "default_value" field. It's identical to DefaultValueEQ.
func DefaultValue(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldDefaultValue, v))
}

// SettingType applies equality check predicate on the "setting_type" field. It's identical to SettingTypeEQ.
func SettingType(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingType, v))
}

// Scope applies equality check predicate on the "scope" field. It's identical to ScopeEQ.
func Scope(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldScope, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCategory, v))
}

// IsPublic applies equality check predicate on the "is_public" field. It's identical to IsPublicEQ.
func IsPublic(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsPublic, v))
}

// IsRequired applies equality check predicate on the "is_required" field. It's identical to IsRequiredEQ.
func IsRequired(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsRequired, v))
}

// IsReadonly applies equality check predicate on the "is_readonly" field. It's identical to IsReadonlyEQ.
func IsReadonly(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsReadonly, v))
}

// SpaceIDEQ applies the EQ predicate on the "space_id" field.
func SpaceIDEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSpaceID, v))
}

// SpaceIDNEQ applies the NEQ predicate on the "space_id" field.
func SpaceIDNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldSpaceID, v))
}

// SpaceIDIn applies the In predicate on the "space_id" field.
func SpaceIDIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldSpaceID, vs...))
}

// SpaceIDNotIn applies the NotIn predicate on the "space_id" field.
func SpaceIDNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldSpaceID, vs...))
}

// SpaceIDGT applies the GT predicate on the "space_id" field.
func SpaceIDGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldSpaceID, v))
}

// SpaceIDGTE applies the GTE predicate on the "space_id" field.
func SpaceIDGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldSpaceID, v))
}

// SpaceIDLT applies the LT predicate on the "space_id" field.
func SpaceIDLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldSpaceID, v))
}

// SpaceIDLTE applies the LTE predicate on the "space_id" field.
func SpaceIDLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldSpaceID, v))
}

// SpaceIDContains applies the Contains predicate on the "space_id" field.
func SpaceIDContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldSpaceID, v))
}

// SpaceIDHasPrefix applies the HasPrefix predicate on the "space_id" field.
func SpaceIDHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldSpaceID, v))
}

// SpaceIDHasSuffix applies the HasSuffix predicate on the "space_id" field.
func SpaceIDHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldSpaceID, v))
}

// SpaceIDIsNil applies the IsNil predicate on the "space_id" field.
func SpaceIDIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldSpaceID))
}

// SpaceIDNotNil applies the NotNil predicate on the "space_id" field.
func SpaceIDNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldSpaceID))
}

// SpaceIDEqualFold applies the EqualFold predicate on the "space_id" field.
func SpaceIDEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldSpaceID, v))
}

// SpaceIDContainsFold applies the ContainsFold predicate on the "space_id" field.
func SpaceIDContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldSpaceID, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldDescription, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldExtras))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldUpdatedAt))
}

// SettingKeyEQ applies the EQ predicate on the "setting_key" field.
func SettingKeyEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingKey, v))
}

// SettingKeyNEQ applies the NEQ predicate on the "setting_key" field.
func SettingKeyNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldSettingKey, v))
}

// SettingKeyIn applies the In predicate on the "setting_key" field.
func SettingKeyIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldSettingKey, vs...))
}

// SettingKeyNotIn applies the NotIn predicate on the "setting_key" field.
func SettingKeyNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldSettingKey, vs...))
}

// SettingKeyGT applies the GT predicate on the "setting_key" field.
func SettingKeyGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldSettingKey, v))
}

// SettingKeyGTE applies the GTE predicate on the "setting_key" field.
func SettingKeyGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldSettingKey, v))
}

// SettingKeyLT applies the LT predicate on the "setting_key" field.
func SettingKeyLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldSettingKey, v))
}

// SettingKeyLTE applies the LTE predicate on the "setting_key" field.
func SettingKeyLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldSettingKey, v))
}

// SettingKeyContains applies the Contains predicate on the "setting_key" field.
func SettingKeyContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldSettingKey, v))
}

// SettingKeyHasPrefix applies the HasPrefix predicate on the "setting_key" field.
func SettingKeyHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldSettingKey, v))
}

// SettingKeyHasSuffix applies the HasSuffix predicate on the "setting_key" field.
func SettingKeyHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldSettingKey, v))
}

// SettingKeyEqualFold applies the EqualFold predicate on the "setting_key" field.
func SettingKeyEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldSettingKey, v))
}

// SettingKeyContainsFold applies the ContainsFold predicate on the "setting_key" field.
func SettingKeyContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldSettingKey, v))
}

// SettingNameEQ applies the EQ predicate on the "setting_name" field.
func SettingNameEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingName, v))
}

// SettingNameNEQ applies the NEQ predicate on the "setting_name" field.
func SettingNameNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldSettingName, v))
}

// SettingNameIn applies the In predicate on the "setting_name" field.
func SettingNameIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldSettingName, vs...))
}

// SettingNameNotIn applies the NotIn predicate on the "setting_name" field.
func SettingNameNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldSettingName, vs...))
}

// SettingNameGT applies the GT predicate on the "setting_name" field.
func SettingNameGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldSettingName, v))
}

// SettingNameGTE applies the GTE predicate on the "setting_name" field.
func SettingNameGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldSettingName, v))
}

// SettingNameLT applies the LT predicate on the "setting_name" field.
func SettingNameLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldSettingName, v))
}

// SettingNameLTE applies the LTE predicate on the "setting_name" field.
func SettingNameLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldSettingName, v))
}

// SettingNameContains applies the Contains predicate on the "setting_name" field.
func SettingNameContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldSettingName, v))
}

// SettingNameHasPrefix applies the HasPrefix predicate on the "setting_name" field.
func SettingNameHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldSettingName, v))
}

// SettingNameHasSuffix applies the HasSuffix predicate on the "setting_name" field.
func SettingNameHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldSettingName, v))
}

// SettingNameEqualFold applies the EqualFold predicate on the "setting_name" field.
func SettingNameEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldSettingName, v))
}

// SettingNameContainsFold applies the ContainsFold predicate on the "setting_name" field.
func SettingNameContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldSettingName, v))
}

// SettingValueEQ applies the EQ predicate on the "setting_value" field.
func SettingValueEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingValue, v))
}

// SettingValueNEQ applies the NEQ predicate on the "setting_value" field.
func SettingValueNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldSettingValue, v))
}

// SettingValueIn applies the In predicate on the "setting_value" field.
func SettingValueIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldSettingValue, vs...))
}

// SettingValueNotIn applies the NotIn predicate on the "setting_value" field.
func SettingValueNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldSettingValue, vs...))
}

// SettingValueGT applies the GT predicate on the "setting_value" field.
func SettingValueGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldSettingValue, v))
}

// SettingValueGTE applies the GTE predicate on the "setting_value" field.
func SettingValueGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldSettingValue, v))
}

// SettingValueLT applies the LT predicate on the "setting_value" field.
func SettingValueLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldSettingValue, v))
}

// SettingValueLTE applies the LTE predicate on the "setting_value" field.
func SettingValueLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldSettingValue, v))
}

// SettingValueContains applies the Contains predicate on the "setting_value" field.
func SettingValueContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldSettingValue, v))
}

// SettingValueHasPrefix applies the HasPrefix predicate on the "setting_value" field.
func SettingValueHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldSettingValue, v))
}

// SettingValueHasSuffix applies the HasSuffix predicate on the "setting_value" field.
func SettingValueHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldSettingValue, v))
}

// SettingValueIsNil applies the IsNil predicate on the "setting_value" field.
func SettingValueIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldSettingValue))
}

// SettingValueNotNil applies the NotNil predicate on the "setting_value" field.
func SettingValueNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldSettingValue))
}

// SettingValueEqualFold applies the EqualFold predicate on the "setting_value" field.
func SettingValueEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldSettingValue, v))
}

// SettingValueContainsFold applies the ContainsFold predicate on the "setting_value" field.
func SettingValueContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldSettingValue, v))
}

// DefaultValueEQ applies the EQ predicate on the "default_value" field.
func DefaultValueEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldDefaultValue, v))
}

// DefaultValueNEQ applies the NEQ predicate on the "default_value" field.
func DefaultValueNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldDefaultValue, v))
}

// DefaultValueIn applies the In predicate on the "default_value" field.
func DefaultValueIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldDefaultValue, vs...))
}

// DefaultValueNotIn applies the NotIn predicate on the "default_value" field.
func DefaultValueNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldDefaultValue, vs...))
}

// DefaultValueGT applies the GT predicate on the "default_value" field.
func DefaultValueGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldDefaultValue, v))
}

// DefaultValueGTE applies the GTE predicate on the "default_value" field.
func DefaultValueGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldDefaultValue, v))
}

// DefaultValueLT applies the LT predicate on the "default_value" field.
func DefaultValueLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldDefaultValue, v))
}

// DefaultValueLTE applies the LTE predicate on the "default_value" field.
func DefaultValueLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldDefaultValue, v))
}

// DefaultValueContains applies the Contains predicate on the "default_value" field.
func DefaultValueContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldDefaultValue, v))
}

// DefaultValueHasPrefix applies the HasPrefix predicate on the "default_value" field.
func DefaultValueHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldDefaultValue, v))
}

// DefaultValueHasSuffix applies the HasSuffix predicate on the "default_value" field.
func DefaultValueHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldDefaultValue, v))
}

// DefaultValueIsNil applies the IsNil predicate on the "default_value" field.
func DefaultValueIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldDefaultValue))
}

// DefaultValueNotNil applies the NotNil predicate on the "default_value" field.
func DefaultValueNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldDefaultValue))
}

// DefaultValueEqualFold applies the EqualFold predicate on the "default_value" field.
func DefaultValueEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldDefaultValue, v))
}

// DefaultValueContainsFold applies the ContainsFold predicate on the "default_value" field.
func DefaultValueContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldDefaultValue, v))
}

// SettingTypeEQ applies the EQ predicate on the "setting_type" field.
func SettingTypeEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldSettingType, v))
}

// SettingTypeNEQ applies the NEQ predicate on the "setting_type" field.
func SettingTypeNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldSettingType, v))
}

// SettingTypeIn applies the In predicate on the "setting_type" field.
func SettingTypeIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldSettingType, vs...))
}

// SettingTypeNotIn applies the NotIn predicate on the "setting_type" field.
func SettingTypeNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldSettingType, vs...))
}

// SettingTypeGT applies the GT predicate on the "setting_type" field.
func SettingTypeGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldSettingType, v))
}

// SettingTypeGTE applies the GTE predicate on the "setting_type" field.
func SettingTypeGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldSettingType, v))
}

// SettingTypeLT applies the LT predicate on the "setting_type" field.
func SettingTypeLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldSettingType, v))
}

// SettingTypeLTE applies the LTE predicate on the "setting_type" field.
func SettingTypeLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldSettingType, v))
}

// SettingTypeContains applies the Contains predicate on the "setting_type" field.
func SettingTypeContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldSettingType, v))
}

// SettingTypeHasPrefix applies the HasPrefix predicate on the "setting_type" field.
func SettingTypeHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldSettingType, v))
}

// SettingTypeHasSuffix applies the HasSuffix predicate on the "setting_type" field.
func SettingTypeHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldSettingType, v))
}

// SettingTypeEqualFold applies the EqualFold predicate on the "setting_type" field.
func SettingTypeEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldSettingType, v))
}

// SettingTypeContainsFold applies the ContainsFold predicate on the "setting_type" field.
func SettingTypeContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldSettingType, v))
}

// ScopeEQ applies the EQ predicate on the "scope" field.
func ScopeEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldScope, v))
}

// ScopeNEQ applies the NEQ predicate on the "scope" field.
func ScopeNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldScope, v))
}

// ScopeIn applies the In predicate on the "scope" field.
func ScopeIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldScope, vs...))
}

// ScopeNotIn applies the NotIn predicate on the "scope" field.
func ScopeNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldScope, vs...))
}

// ScopeGT applies the GT predicate on the "scope" field.
func ScopeGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldScope, v))
}

// ScopeGTE applies the GTE predicate on the "scope" field.
func ScopeGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldScope, v))
}

// ScopeLT applies the LT predicate on the "scope" field.
func ScopeLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldScope, v))
}

// ScopeLTE applies the LTE predicate on the "scope" field.
func ScopeLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldScope, v))
}

// ScopeContains applies the Contains predicate on the "scope" field.
func ScopeContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldScope, v))
}

// ScopeHasPrefix applies the HasPrefix predicate on the "scope" field.
func ScopeHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldScope, v))
}

// ScopeHasSuffix applies the HasSuffix predicate on the "scope" field.
func ScopeHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldScope, v))
}

// ScopeEqualFold applies the EqualFold predicate on the "scope" field.
func ScopeEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldScope, v))
}

// ScopeContainsFold applies the ContainsFold predicate on the "scope" field.
func ScopeContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldScope, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldContainsFold(FieldCategory, v))
}

// IsPublicEQ applies the EQ predicate on the "is_public" field.
func IsPublicEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsPublic, v))
}

// IsPublicNEQ applies the NEQ predicate on the "is_public" field.
func IsPublicNEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldIsPublic, v))
}

// IsRequiredEQ applies the EQ predicate on the "is_required" field.
func IsRequiredEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsRequired, v))
}

// IsRequiredNEQ applies the NEQ predicate on the "is_required" field.
func IsRequiredNEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldIsRequired, v))
}

// IsReadonlyEQ applies the EQ predicate on the "is_readonly" field.
func IsReadonlyEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldEQ(FieldIsReadonly, v))
}

// IsReadonlyNEQ applies the NEQ predicate on the "is_readonly" field.
func IsReadonlyNEQ(v bool) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNEQ(FieldIsReadonly, v))
}

// ValidationIsNil applies the IsNil predicate on the "validation" field.
func ValidationIsNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldIsNull(FieldValidation))
}

// ValidationNotNil applies the NotNil predicate on the "validation" field.
func ValidationNotNil() predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.FieldNotNull(FieldValidation))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpaceSetting) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpaceSetting) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpaceSetting) predicate.SpaceSetting {
	return predicate.SpaceSetting(sql.NotPredicates(p))
}
