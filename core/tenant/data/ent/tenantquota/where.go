// Code generated by ent, DO NOT EDIT.

package tenantquota

import (
	"ncobase/tenant/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldTenantID, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldDescription, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUpdatedAt, v))
}

// QuotaType applies equality check predicate on the "quota_type" field. It's identical to QuotaTypeEQ.
func QuotaType(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldQuotaType, v))
}

// QuotaName applies equality check predicate on the "quota_name" field. It's identical to QuotaNameEQ.
func QuotaName(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldQuotaName, v))
}

// MaxValue applies equality check predicate on the "max_value" field. It's identical to MaxValueEQ.
func MaxValue(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldMaxValue, v))
}

// CurrentUsed applies equality check predicate on the "current_used" field. It's identical to CurrentUsedEQ.
func CurrentUsed(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCurrentUsed, v))
}

// Unit applies equality check predicate on the "unit" field. It's identical to UnitEQ.
func Unit(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUnit, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldEnabled, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldTenantID))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldTenantID, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldDescription, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldExtras))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotNull(FieldUpdatedAt))
}

// QuotaTypeEQ applies the EQ predicate on the "quota_type" field.
func QuotaTypeEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldQuotaType, v))
}

// QuotaTypeNEQ applies the NEQ predicate on the "quota_type" field.
func QuotaTypeNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldQuotaType, v))
}

// QuotaTypeIn applies the In predicate on the "quota_type" field.
func QuotaTypeIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldQuotaType, vs...))
}

// QuotaTypeNotIn applies the NotIn predicate on the "quota_type" field.
func QuotaTypeNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldQuotaType, vs...))
}

// QuotaTypeGT applies the GT predicate on the "quota_type" field.
func QuotaTypeGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldQuotaType, v))
}

// QuotaTypeGTE applies the GTE predicate on the "quota_type" field.
func QuotaTypeGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldQuotaType, v))
}

// QuotaTypeLT applies the LT predicate on the "quota_type" field.
func QuotaTypeLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldQuotaType, v))
}

// QuotaTypeLTE applies the LTE predicate on the "quota_type" field.
func QuotaTypeLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldQuotaType, v))
}

// QuotaTypeContains applies the Contains predicate on the "quota_type" field.
func QuotaTypeContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldQuotaType, v))
}

// QuotaTypeHasPrefix applies the HasPrefix predicate on the "quota_type" field.
func QuotaTypeHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldQuotaType, v))
}

// QuotaTypeHasSuffix applies the HasSuffix predicate on the "quota_type" field.
func QuotaTypeHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldQuotaType, v))
}

// QuotaTypeEqualFold applies the EqualFold predicate on the "quota_type" field.
func QuotaTypeEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldQuotaType, v))
}

// QuotaTypeContainsFold applies the ContainsFold predicate on the "quota_type" field.
func QuotaTypeContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldQuotaType, v))
}

// QuotaNameEQ applies the EQ predicate on the "quota_name" field.
func QuotaNameEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldQuotaName, v))
}

// QuotaNameNEQ applies the NEQ predicate on the "quota_name" field.
func QuotaNameNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldQuotaName, v))
}

// QuotaNameIn applies the In predicate on the "quota_name" field.
func QuotaNameIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldQuotaName, vs...))
}

// QuotaNameNotIn applies the NotIn predicate on the "quota_name" field.
func QuotaNameNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldQuotaName, vs...))
}

// QuotaNameGT applies the GT predicate on the "quota_name" field.
func QuotaNameGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldQuotaName, v))
}

// QuotaNameGTE applies the GTE predicate on the "quota_name" field.
func QuotaNameGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldQuotaName, v))
}

// QuotaNameLT applies the LT predicate on the "quota_name" field.
func QuotaNameLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldQuotaName, v))
}

// QuotaNameLTE applies the LTE predicate on the "quota_name" field.
func QuotaNameLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldQuotaName, v))
}

// QuotaNameContains applies the Contains predicate on the "quota_name" field.
func QuotaNameContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldQuotaName, v))
}

// QuotaNameHasPrefix applies the HasPrefix predicate on the "quota_name" field.
func QuotaNameHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldQuotaName, v))
}

// QuotaNameHasSuffix applies the HasSuffix predicate on the "quota_name" field.
func QuotaNameHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldQuotaName, v))
}

// QuotaNameEqualFold applies the EqualFold predicate on the "quota_name" field.
func QuotaNameEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldQuotaName, v))
}

// QuotaNameContainsFold applies the ContainsFold predicate on the "quota_name" field.
func QuotaNameContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldQuotaName, v))
}

// MaxValueEQ applies the EQ predicate on the "max_value" field.
func MaxValueEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldMaxValue, v))
}

// MaxValueNEQ applies the NEQ predicate on the "max_value" field.
func MaxValueNEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldMaxValue, v))
}

// MaxValueIn applies the In predicate on the "max_value" field.
func MaxValueIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldMaxValue, vs...))
}

// MaxValueNotIn applies the NotIn predicate on the "max_value" field.
func MaxValueNotIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldMaxValue, vs...))
}

// MaxValueGT applies the GT predicate on the "max_value" field.
func MaxValueGT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldMaxValue, v))
}

// MaxValueGTE applies the GTE predicate on the "max_value" field.
func MaxValueGTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldMaxValue, v))
}

// MaxValueLT applies the LT predicate on the "max_value" field.
func MaxValueLT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldMaxValue, v))
}

// MaxValueLTE applies the LTE predicate on the "max_value" field.
func MaxValueLTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldMaxValue, v))
}

// CurrentUsedEQ applies the EQ predicate on the "current_used" field.
func CurrentUsedEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldCurrentUsed, v))
}

// CurrentUsedNEQ applies the NEQ predicate on the "current_used" field.
func CurrentUsedNEQ(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldCurrentUsed, v))
}

// CurrentUsedIn applies the In predicate on the "current_used" field.
func CurrentUsedIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldCurrentUsed, vs...))
}

// CurrentUsedNotIn applies the NotIn predicate on the "current_used" field.
func CurrentUsedNotIn(vs ...int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldCurrentUsed, vs...))
}

// CurrentUsedGT applies the GT predicate on the "current_used" field.
func CurrentUsedGT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldCurrentUsed, v))
}

// CurrentUsedGTE applies the GTE predicate on the "current_used" field.
func CurrentUsedGTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldCurrentUsed, v))
}

// CurrentUsedLT applies the LT predicate on the "current_used" field.
func CurrentUsedLT(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldCurrentUsed, v))
}

// CurrentUsedLTE applies the LTE predicate on the "current_used" field.
func CurrentUsedLTE(v int64) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldCurrentUsed, v))
}

// UnitEQ applies the EQ predicate on the "unit" field.
func UnitEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldUnit, v))
}

// UnitNEQ applies the NEQ predicate on the "unit" field.
func UnitNEQ(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldUnit, v))
}

// UnitIn applies the In predicate on the "unit" field.
func UnitIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldIn(FieldUnit, vs...))
}

// UnitNotIn applies the NotIn predicate on the "unit" field.
func UnitNotIn(vs ...string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNotIn(FieldUnit, vs...))
}

// UnitGT applies the GT predicate on the "unit" field.
func UnitGT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGT(FieldUnit, v))
}

// UnitGTE applies the GTE predicate on the "unit" field.
func UnitGTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldGTE(FieldUnit, v))
}

// UnitLT applies the LT predicate on the "unit" field.
func UnitLT(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLT(FieldUnit, v))
}

// UnitLTE applies the LTE predicate on the "unit" field.
func UnitLTE(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldLTE(FieldUnit, v))
}

// UnitContains applies the Contains predicate on the "unit" field.
func UnitContains(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContains(FieldUnit, v))
}

// UnitHasPrefix applies the HasPrefix predicate on the "unit" field.
func UnitHasPrefix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasPrefix(FieldUnit, v))
}

// UnitHasSuffix applies the HasSuffix predicate on the "unit" field.
func UnitHasSuffix(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldHasSuffix(FieldUnit, v))
}

// UnitEqualFold applies the EqualFold predicate on the "unit" field.
func UnitEqualFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEqualFold(FieldUnit, v))
}

// UnitContainsFold applies the ContainsFold predicate on the "unit" field.
func UnitContainsFold(v string) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldContainsFold(FieldUnit, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.TenantQuota {
	return predicate.TenantQuota(sql.FieldNEQ(FieldEnabled, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TenantQuota) predicate.TenantQuota {
	return predicate.TenantQuota(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TenantQuota) predicate.TenantQuota {
	return predicate.TenantQuota(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TenantQuota) predicate.TenantQuota {
	return predicate.TenantQuota(sql.NotPredicates(p))
}
