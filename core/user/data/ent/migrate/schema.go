// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NcseSysAPIKeyColumns holds the columns for the "ncse_sys_api_key" table.
	NcseSysAPIKeyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "user id"},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "last_used", Type: field.TypeInt64, Nullable: true},
	}
	// NcseSysAPIKeyTable holds the schema information for the "ncse_sys_api_key" table.
	NcseSysAPIKeyTable = &schema.Table{
		Name:       "ncse_sys_api_key",
		Columns:    NcseSysAPIKeyColumns,
		PrimaryKey: []*schema.Column{NcseSysAPIKeyColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "apikey_id",
				Unique:  true,
				Columns: []*schema.Column{NcseSysAPIKeyColumns[0]},
			},
			{
				Name:    "apikey_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysAPIKeyColumns[4]},
			},
			{
				Name:    "apikey_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseSysAPIKeyColumns[0], NcseSysAPIKeyColumns[2]},
			},
			{
				Name:    "apikey_user_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{NcseSysAPIKeyColumns[4], NcseSysAPIKeyColumns[2]},
			},
			{
				Name:    "apikey_key",
				Unique:  true,
				Columns: []*schema.Column{NcseSysAPIKeyColumns[5]},
			},
		},
	}
	// NcseSysEmployeeColumns holds the columns for the "ncse_sys_employee" table.
	NcseSysEmployeeColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "tenant id"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "employee_id", Type: field.TypeString, Nullable: true, Comment: "Employee ID/Number"},
		{Name: "department", Type: field.TypeString, Nullable: true, Comment: "Primary department"},
		{Name: "position", Type: field.TypeString, Nullable: true, Comment: "Job position/title"},
		{Name: "manager_id", Type: field.TypeString, Nullable: true, Comment: "Direct manager user ID"},
		{Name: "hire_date", Type: field.TypeTime, Nullable: true, Comment: "Hire date"},
		{Name: "termination_date", Type: field.TypeTime, Nullable: true, Comment: "Termination date"},
		{Name: "employment_type", Type: field.TypeEnum, Comment: "Employment type", Enums: []string{"full_time", "part_time", "contract", "intern"}, Default: "full_time"},
		{Name: "status", Type: field.TypeEnum, Comment: "Employee status", Enums: []string{"active", "inactive", "on_leave", "terminated"}, Default: "active"},
		{Name: "salary", Type: field.TypeFloat64, Nullable: true, Comment: "Base salary"},
		{Name: "work_location", Type: field.TypeString, Nullable: true, Comment: "Primary work location"},
		{Name: "contact_info", Type: field.TypeJSON, Nullable: true, Comment: "Emergency contact info"},
		{Name: "skills", Type: field.TypeJSON, Nullable: true, Comment: "Employee skills"},
		{Name: "certifications", Type: field.TypeJSON, Nullable: true, Comment: "Professional certifications"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Additional employee data"},
	}
	// NcseSysEmployeeTable holds the schema information for the "ncse_sys_employee" table.
	NcseSysEmployeeTable = &schema.Table{
		Name:       "ncse_sys_employee",
		Columns:    NcseSysEmployeeColumns,
		PrimaryKey: []*schema.Column{NcseSysEmployeeColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "employee_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[0]},
			},
			{
				Name:    "employee_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[1]},
			},
			{
				Name:    "employee_user_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{NcseSysEmployeeColumns[0], NcseSysEmployeeColumns[1]},
			},
			{
				Name:    "employee_employee_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[4]},
			},
			{
				Name:    "employee_department",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[5]},
			},
			{
				Name:    "employee_manager_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[7]},
			},
			{
				Name:    "employee_status",
				Unique:  false,
				Columns: []*schema.Column{NcseSysEmployeeColumns[11]},
			},
		},
	}
	// NcseSysUserColumns holds the columns for the "ncse_sys_user" table.
	NcseSysUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Size: 50, Comment: "username"},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Comment: "phone"},
		{Name: "is_certified", Type: field.TypeBool, Nullable: true, Comment: "is certified", Default: false},
		{Name: "is_admin", Type: field.TypeBool, Nullable: true, Comment: "is admin", Default: false},
		{Name: "status", Type: field.TypeInt, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
	}
	// NcseSysUserTable holds the schema information for the "ncse_sys_user" table.
	NcseSysUserTable = &schema.Table{
		Name:       "ncse_sys_user",
		Columns:    NcseSysUserColumns,
		PrimaryKey: []*schema.Column{NcseSysUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  true,
				Columns: []*schema.Column{NcseSysUserColumns[0]},
			},
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{NcseSysUserColumns[1]},
			},
			{
				Name:    "user_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseSysUserColumns[0], NcseSysUserColumns[9]},
			},
		},
	}
	// NcseSysUserProfileColumns holds the columns for the "ncse_sys_user_profile" table.
	NcseSysUserProfileColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Comment: "display name"},
		{Name: "first_name", Type: field.TypeString, Nullable: true, Comment: "first name"},
		{Name: "last_name", Type: field.TypeString, Nullable: true, Comment: "last name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "short_bio", Type: field.TypeString, Nullable: true, Comment: "short bio"},
		{Name: "about", Type: field.TypeString, Nullable: true, Comment: "about"},
		{Name: "links", Type: field.TypeJSON, Nullable: true, Comment: "List of social links or profile links"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
	}
	// NcseSysUserProfileTable holds the schema information for the "ncse_sys_user_profile" table.
	NcseSysUserProfileTable = &schema.Table{
		Name:       "ncse_sys_user_profile",
		Columns:    NcseSysUserProfileColumns,
		PrimaryKey: []*schema.Column{NcseSysUserProfileColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userprofile_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcseSysUserProfileColumns[0]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NcseSysAPIKeyTable,
		NcseSysEmployeeTable,
		NcseSysUserTable,
		NcseSysUserProfileTable,
	}
)

func init() {
	NcseSysAPIKeyTable.Annotation = &entsql.Annotation{
		Table: "ncse_sys_api_key",
	}
	NcseSysEmployeeTable.Annotation = &entsql.Annotation{
		Table: "ncse_sys_employee",
	}
	NcseSysUserTable.Annotation = &entsql.Annotation{
		Table: "ncse_sys_user",
	}
	NcseSysUserProfileTable.Annotation = &entsql.Annotation{
		Table: "ncse_sys_user_profile",
	}
}
