// Code generated by ent, DO NOT EDIT.

package template

import (
	"ncobase/core/workflow/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldName, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCode, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldDescription, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldType, v))
}

// Version applies equality check predicate on the "version" field. It's identical to VersionEQ.
func Version(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldVersion, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldStatus, v))
}

// Disabled applies equality check predicate on the "disabled" field. It's identical to DisabledEQ.
func Disabled(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldDisabled, v))
}

// FormCode applies equality check predicate on the "form_code" field. It's identical to FormCodeEQ.
func FormCode(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldFormCode, v))
}

// FormVersion applies equality check predicate on the "form_version" field. It's identical to FormVersionEQ.
func FormVersion(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldFormVersion, v))
}

// NodeKey applies equality check predicate on the "node_key" field. It's identical to NodeKeyEQ.
func NodeKey(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldNodeKey, v))
}

// NodeType applies equality check predicate on the "node_type" field. It's identical to NodeTypeEQ.
func NodeType(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldNodeType, v))
}

// ModuleCode applies equality check predicate on the "module_code" field. It's identical to ModuleCodeEQ.
func ModuleCode(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldModuleCode, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCategory, v))
}

// AllowCancel applies equality check predicate on the "allow_cancel" field. It's identical to AllowCancelEQ.
func AllowCancel(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowCancel, v))
}

// AllowUrge applies equality check predicate on the "allow_urge" field. It's identical to AllowUrgeEQ.
func AllowUrge(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowUrge, v))
}

// AllowDelegate applies equality check predicate on the "allow_delegate" field. It's identical to AllowDelegateEQ.
func AllowDelegate(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowDelegate, v))
}

// AllowTransfer applies equality check predicate on the "allow_transfer" field. It's identical to AllowTransferEQ.
func AllowTransfer(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowTransfer, v))
}

// IsDraftEnabled applies equality check predicate on the "is_draft_enabled" field. It's identical to IsDraftEnabledEQ.
func IsDraftEnabled(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsDraftEnabled, v))
}

// IsAutoStart applies equality check predicate on the "is_auto_start" field. It's identical to IsAutoStartEQ.
func IsAutoStart(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsAutoStart, v))
}

// StrictMode applies equality check predicate on the "strict_mode" field. It's identical to StrictModeEQ.
func StrictMode(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldStrictMode, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldTenantID, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldUpdatedAt, v))
}

// TemplateKey applies equality check predicate on the "template_key" field. It's identical to TemplateKeyEQ.
func TemplateKey(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldTemplateKey, v))
}

// SourceVersion applies equality check predicate on the "source_version" field. It's identical to SourceVersionEQ.
func SourceVersion(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldSourceVersion, v))
}

// IsLatest applies equality check predicate on the "is_latest" field. It's identical to IsLatestEQ.
func IsLatest(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsLatest, v))
}

// EffectiveTime applies equality check predicate on the "effective_time" field. It's identical to EffectiveTimeEQ.
func EffectiveTime(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldEffectiveTime, v))
}

// ExpireTime applies equality check predicate on the "expire_time" field. It's identical to ExpireTimeEQ.
func ExpireTime(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldExpireTime, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldName, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldCode, v))
}

// CodeIsNil applies the IsNil predicate on the "code" field.
func CodeIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldCode))
}

// CodeNotNil applies the NotNil predicate on the "code" field.
func CodeNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldCode))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldCode, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldDescription, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldType, v))
}

// VersionEQ applies the EQ predicate on the "version" field.
func VersionEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldVersion, v))
}

// VersionNEQ applies the NEQ predicate on the "version" field.
func VersionNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldVersion, v))
}

// VersionIn applies the In predicate on the "version" field.
func VersionIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldVersion, vs...))
}

// VersionNotIn applies the NotIn predicate on the "version" field.
func VersionNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldVersion, vs...))
}

// VersionGT applies the GT predicate on the "version" field.
func VersionGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldVersion, v))
}

// VersionGTE applies the GTE predicate on the "version" field.
func VersionGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldVersion, v))
}

// VersionLT applies the LT predicate on the "version" field.
func VersionLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldVersion, v))
}

// VersionLTE applies the LTE predicate on the "version" field.
func VersionLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldVersion, v))
}

// VersionContains applies the Contains predicate on the "version" field.
func VersionContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldVersion, v))
}

// VersionHasPrefix applies the HasPrefix predicate on the "version" field.
func VersionHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldVersion, v))
}

// VersionHasSuffix applies the HasSuffix predicate on the "version" field.
func VersionHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldVersion, v))
}

// VersionIsNil applies the IsNil predicate on the "version" field.
func VersionIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldVersion))
}

// VersionNotNil applies the NotNil predicate on the "version" field.
func VersionNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldVersion))
}

// VersionEqualFold applies the EqualFold predicate on the "version" field.
func VersionEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldVersion, v))
}

// VersionContainsFold applies the ContainsFold predicate on the "version" field.
func VersionContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldVersion, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldStatus, v))
}

// DisabledEQ applies the EQ predicate on the "disabled" field.
func DisabledEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldDisabled, v))
}

// DisabledNEQ applies the NEQ predicate on the "disabled" field.
func DisabledNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldDisabled, v))
}

// DisabledIsNil applies the IsNil predicate on the "disabled" field.
func DisabledIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldDisabled))
}

// DisabledNotNil applies the NotNil predicate on the "disabled" field.
func DisabledNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldDisabled))
}

// FormCodeEQ applies the EQ predicate on the "form_code" field.
func FormCodeEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldFormCode, v))
}

// FormCodeNEQ applies the NEQ predicate on the "form_code" field.
func FormCodeNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldFormCode, v))
}

// FormCodeIn applies the In predicate on the "form_code" field.
func FormCodeIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldFormCode, vs...))
}

// FormCodeNotIn applies the NotIn predicate on the "form_code" field.
func FormCodeNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldFormCode, vs...))
}

// FormCodeGT applies the GT predicate on the "form_code" field.
func FormCodeGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldFormCode, v))
}

// FormCodeGTE applies the GTE predicate on the "form_code" field.
func FormCodeGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldFormCode, v))
}

// FormCodeLT applies the LT predicate on the "form_code" field.
func FormCodeLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldFormCode, v))
}

// FormCodeLTE applies the LTE predicate on the "form_code" field.
func FormCodeLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldFormCode, v))
}

// FormCodeContains applies the Contains predicate on the "form_code" field.
func FormCodeContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldFormCode, v))
}

// FormCodeHasPrefix applies the HasPrefix predicate on the "form_code" field.
func FormCodeHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldFormCode, v))
}

// FormCodeHasSuffix applies the HasSuffix predicate on the "form_code" field.
func FormCodeHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldFormCode, v))
}

// FormCodeEqualFold applies the EqualFold predicate on the "form_code" field.
func FormCodeEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldFormCode, v))
}

// FormCodeContainsFold applies the ContainsFold predicate on the "form_code" field.
func FormCodeContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldFormCode, v))
}

// FormVersionEQ applies the EQ predicate on the "form_version" field.
func FormVersionEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldFormVersion, v))
}

// FormVersionNEQ applies the NEQ predicate on the "form_version" field.
func FormVersionNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldFormVersion, v))
}

// FormVersionIn applies the In predicate on the "form_version" field.
func FormVersionIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldFormVersion, vs...))
}

// FormVersionNotIn applies the NotIn predicate on the "form_version" field.
func FormVersionNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldFormVersion, vs...))
}

// FormVersionGT applies the GT predicate on the "form_version" field.
func FormVersionGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldFormVersion, v))
}

// FormVersionGTE applies the GTE predicate on the "form_version" field.
func FormVersionGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldFormVersion, v))
}

// FormVersionLT applies the LT predicate on the "form_version" field.
func FormVersionLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldFormVersion, v))
}

// FormVersionLTE applies the LTE predicate on the "form_version" field.
func FormVersionLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldFormVersion, v))
}

// FormVersionContains applies the Contains predicate on the "form_version" field.
func FormVersionContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldFormVersion, v))
}

// FormVersionHasPrefix applies the HasPrefix predicate on the "form_version" field.
func FormVersionHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldFormVersion, v))
}

// FormVersionHasSuffix applies the HasSuffix predicate on the "form_version" field.
func FormVersionHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldFormVersion, v))
}

// FormVersionIsNil applies the IsNil predicate on the "form_version" field.
func FormVersionIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldFormVersion))
}

// FormVersionNotNil applies the NotNil predicate on the "form_version" field.
func FormVersionNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldFormVersion))
}

// FormVersionEqualFold applies the EqualFold predicate on the "form_version" field.
func FormVersionEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldFormVersion, v))
}

// FormVersionContainsFold applies the ContainsFold predicate on the "form_version" field.
func FormVersionContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldFormVersion, v))
}

// FormConfigIsNil applies the IsNil predicate on the "form_config" field.
func FormConfigIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldFormConfig))
}

// FormConfigNotNil applies the NotNil predicate on the "form_config" field.
func FormConfigNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldFormConfig))
}

// FormPermissionsIsNil applies the IsNil predicate on the "form_permissions" field.
func FormPermissionsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldFormPermissions))
}

// FormPermissionsNotNil applies the NotNil predicate on the "form_permissions" field.
func FormPermissionsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldFormPermissions))
}

// FieldPermissionsIsNil applies the IsNil predicate on the "field_permissions" field.
func FieldPermissionsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldFieldPermissions))
}

// FieldPermissionsNotNil applies the NotNil predicate on the "field_permissions" field.
func FieldPermissionsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldFieldPermissions))
}

// NodeKeyEQ applies the EQ predicate on the "node_key" field.
func NodeKeyEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldNodeKey, v))
}

// NodeKeyNEQ applies the NEQ predicate on the "node_key" field.
func NodeKeyNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldNodeKey, v))
}

// NodeKeyIn applies the In predicate on the "node_key" field.
func NodeKeyIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldNodeKey, vs...))
}

// NodeKeyNotIn applies the NotIn predicate on the "node_key" field.
func NodeKeyNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldNodeKey, vs...))
}

// NodeKeyGT applies the GT predicate on the "node_key" field.
func NodeKeyGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldNodeKey, v))
}

// NodeKeyGTE applies the GTE predicate on the "node_key" field.
func NodeKeyGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldNodeKey, v))
}

// NodeKeyLT applies the LT predicate on the "node_key" field.
func NodeKeyLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldNodeKey, v))
}

// NodeKeyLTE applies the LTE predicate on the "node_key" field.
func NodeKeyLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldNodeKey, v))
}

// NodeKeyContains applies the Contains predicate on the "node_key" field.
func NodeKeyContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldNodeKey, v))
}

// NodeKeyHasPrefix applies the HasPrefix predicate on the "node_key" field.
func NodeKeyHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldNodeKey, v))
}

// NodeKeyHasSuffix applies the HasSuffix predicate on the "node_key" field.
func NodeKeyHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldNodeKey, v))
}

// NodeKeyEqualFold applies the EqualFold predicate on the "node_key" field.
func NodeKeyEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldNodeKey, v))
}

// NodeKeyContainsFold applies the ContainsFold predicate on the "node_key" field.
func NodeKeyContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldNodeKey, v))
}

// NodeTypeEQ applies the EQ predicate on the "node_type" field.
func NodeTypeEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldNodeType, v))
}

// NodeTypeNEQ applies the NEQ predicate on the "node_type" field.
func NodeTypeNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldNodeType, v))
}

// NodeTypeIn applies the In predicate on the "node_type" field.
func NodeTypeIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldNodeType, vs...))
}

// NodeTypeNotIn applies the NotIn predicate on the "node_type" field.
func NodeTypeNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldNodeType, vs...))
}

// NodeTypeGT applies the GT predicate on the "node_type" field.
func NodeTypeGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldNodeType, v))
}

// NodeTypeGTE applies the GTE predicate on the "node_type" field.
func NodeTypeGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldNodeType, v))
}

// NodeTypeLT applies the LT predicate on the "node_type" field.
func NodeTypeLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldNodeType, v))
}

// NodeTypeLTE applies the LTE predicate on the "node_type" field.
func NodeTypeLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldNodeType, v))
}

// NodeTypeContains applies the Contains predicate on the "node_type" field.
func NodeTypeContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldNodeType, v))
}

// NodeTypeHasPrefix applies the HasPrefix predicate on the "node_type" field.
func NodeTypeHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldNodeType, v))
}

// NodeTypeHasSuffix applies the HasSuffix predicate on the "node_type" field.
func NodeTypeHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldNodeType, v))
}

// NodeTypeEqualFold applies the EqualFold predicate on the "node_type" field.
func NodeTypeEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldNodeType, v))
}

// NodeTypeContainsFold applies the ContainsFold predicate on the "node_type" field.
func NodeTypeContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldNodeType, v))
}

// NodeConfigIsNil applies the IsNil predicate on the "node_config" field.
func NodeConfigIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldNodeConfig))
}

// NodeConfigNotNil applies the NotNil predicate on the "node_config" field.
func NodeConfigNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldNodeConfig))
}

// NodeRulesIsNil applies the IsNil predicate on the "node_rules" field.
func NodeRulesIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldNodeRules))
}

// NodeRulesNotNil applies the NotNil predicate on the "node_rules" field.
func NodeRulesNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldNodeRules))
}

// NodeEventsIsNil applies the IsNil predicate on the "node_events" field.
func NodeEventsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldNodeEvents))
}

// NodeEventsNotNil applies the NotNil predicate on the "node_events" field.
func NodeEventsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldNodeEvents))
}

// BusinessTagsIsNil applies the IsNil predicate on the "business_tags" field.
func BusinessTagsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldBusinessTags))
}

// BusinessTagsNotNil applies the NotNil predicate on the "business_tags" field.
func BusinessTagsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldBusinessTags))
}

// ModuleCodeEQ applies the EQ predicate on the "module_code" field.
func ModuleCodeEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldModuleCode, v))
}

// ModuleCodeNEQ applies the NEQ predicate on the "module_code" field.
func ModuleCodeNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldModuleCode, v))
}

// ModuleCodeIn applies the In predicate on the "module_code" field.
func ModuleCodeIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldModuleCode, vs...))
}

// ModuleCodeNotIn applies the NotIn predicate on the "module_code" field.
func ModuleCodeNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldModuleCode, vs...))
}

// ModuleCodeGT applies the GT predicate on the "module_code" field.
func ModuleCodeGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldModuleCode, v))
}

// ModuleCodeGTE applies the GTE predicate on the "module_code" field.
func ModuleCodeGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldModuleCode, v))
}

// ModuleCodeLT applies the LT predicate on the "module_code" field.
func ModuleCodeLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldModuleCode, v))
}

// ModuleCodeLTE applies the LTE predicate on the "module_code" field.
func ModuleCodeLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldModuleCode, v))
}

// ModuleCodeContains applies the Contains predicate on the "module_code" field.
func ModuleCodeContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldModuleCode, v))
}

// ModuleCodeHasPrefix applies the HasPrefix predicate on the "module_code" field.
func ModuleCodeHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldModuleCode, v))
}

// ModuleCodeHasSuffix applies the HasSuffix predicate on the "module_code" field.
func ModuleCodeHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldModuleCode, v))
}

// ModuleCodeEqualFold applies the EqualFold predicate on the "module_code" field.
func ModuleCodeEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldModuleCode, v))
}

// ModuleCodeContainsFold applies the ContainsFold predicate on the "module_code" field.
func ModuleCodeContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldModuleCode, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryIsNil applies the IsNil predicate on the "category" field.
func CategoryIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldCategory))
}

// CategoryNotNil applies the NotNil predicate on the "category" field.
func CategoryNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldCategory))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldCategory, v))
}

// AllowCancelEQ applies the EQ predicate on the "allow_cancel" field.
func AllowCancelEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowCancel, v))
}

// AllowCancelNEQ applies the NEQ predicate on the "allow_cancel" field.
func AllowCancelNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldAllowCancel, v))
}

// AllowUrgeEQ applies the EQ predicate on the "allow_urge" field.
func AllowUrgeEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowUrge, v))
}

// AllowUrgeNEQ applies the NEQ predicate on the "allow_urge" field.
func AllowUrgeNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldAllowUrge, v))
}

// AllowDelegateEQ applies the EQ predicate on the "allow_delegate" field.
func AllowDelegateEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowDelegate, v))
}

// AllowDelegateNEQ applies the NEQ predicate on the "allow_delegate" field.
func AllowDelegateNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldAllowDelegate, v))
}

// AllowTransferEQ applies the EQ predicate on the "allow_transfer" field.
func AllowTransferEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldAllowTransfer, v))
}

// AllowTransferNEQ applies the NEQ predicate on the "allow_transfer" field.
func AllowTransferNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldAllowTransfer, v))
}

// IsDraftEnabledEQ applies the EQ predicate on the "is_draft_enabled" field.
func IsDraftEnabledEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsDraftEnabled, v))
}

// IsDraftEnabledNEQ applies the NEQ predicate on the "is_draft_enabled" field.
func IsDraftEnabledNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldIsDraftEnabled, v))
}

// IsAutoStartEQ applies the EQ predicate on the "is_auto_start" field.
func IsAutoStartEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsAutoStart, v))
}

// IsAutoStartNEQ applies the NEQ predicate on the "is_auto_start" field.
func IsAutoStartNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldIsAutoStart, v))
}

// StrictModeEQ applies the EQ predicate on the "strict_mode" field.
func StrictModeEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldStrictMode, v))
}

// StrictModeNEQ applies the NEQ predicate on the "strict_mode" field.
func StrictModeNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldStrictMode, v))
}

// ViewersIsNil applies the IsNil predicate on the "viewers" field.
func ViewersIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldViewers))
}

// ViewersNotNil applies the NotNil predicate on the "viewers" field.
func ViewersNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldViewers))
}

// EditorsIsNil applies the IsNil predicate on the "editors" field.
func EditorsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldEditors))
}

// EditorsNotNil applies the NotNil predicate on the "editors" field.
func EditorsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldEditors))
}

// PermissionConfigsIsNil applies the IsNil predicate on the "permission_configs" field.
func PermissionConfigsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldPermissionConfigs))
}

// PermissionConfigsNotNil applies the NotNil predicate on the "permission_configs" field.
func PermissionConfigsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldPermissionConfigs))
}

// RoleConfigsIsNil applies the IsNil predicate on the "role_configs" field.
func RoleConfigsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldRoleConfigs))
}

// RoleConfigsNotNil applies the NotNil predicate on the "role_configs" field.
func RoleConfigsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldRoleConfigs))
}

// VisibleRangeIsNil applies the IsNil predicate on the "visible_range" field.
func VisibleRangeIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldVisibleRange))
}

// VisibleRangeNotNil applies the NotNil predicate on the "visible_range" field.
func VisibleRangeNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldVisibleRange))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldExtras))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldTenantID))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldTenantID, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldUpdatedAt))
}

// TemplateKeyEQ applies the EQ predicate on the "template_key" field.
func TemplateKeyEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldTemplateKey, v))
}

// TemplateKeyNEQ applies the NEQ predicate on the "template_key" field.
func TemplateKeyNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldTemplateKey, v))
}

// TemplateKeyIn applies the In predicate on the "template_key" field.
func TemplateKeyIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldTemplateKey, vs...))
}

// TemplateKeyNotIn applies the NotIn predicate on the "template_key" field.
func TemplateKeyNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldTemplateKey, vs...))
}

// TemplateKeyGT applies the GT predicate on the "template_key" field.
func TemplateKeyGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldTemplateKey, v))
}

// TemplateKeyGTE applies the GTE predicate on the "template_key" field.
func TemplateKeyGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldTemplateKey, v))
}

// TemplateKeyLT applies the LT predicate on the "template_key" field.
func TemplateKeyLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldTemplateKey, v))
}

// TemplateKeyLTE applies the LTE predicate on the "template_key" field.
func TemplateKeyLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldTemplateKey, v))
}

// TemplateKeyContains applies the Contains predicate on the "template_key" field.
func TemplateKeyContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldTemplateKey, v))
}

// TemplateKeyHasPrefix applies the HasPrefix predicate on the "template_key" field.
func TemplateKeyHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldTemplateKey, v))
}

// TemplateKeyHasSuffix applies the HasSuffix predicate on the "template_key" field.
func TemplateKeyHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldTemplateKey, v))
}

// TemplateKeyEqualFold applies the EqualFold predicate on the "template_key" field.
func TemplateKeyEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldTemplateKey, v))
}

// TemplateKeyContainsFold applies the ContainsFold predicate on the "template_key" field.
func TemplateKeyContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldTemplateKey, v))
}

// ProcessRulesIsNil applies the IsNil predicate on the "process_rules" field.
func ProcessRulesIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldProcessRules))
}

// ProcessRulesNotNil applies the NotNil predicate on the "process_rules" field.
func ProcessRulesNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldProcessRules))
}

// TriggerConditionsIsNil applies the IsNil predicate on the "trigger_conditions" field.
func TriggerConditionsIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldTriggerConditions))
}

// TriggerConditionsNotNil applies the NotNil predicate on the "trigger_conditions" field.
func TriggerConditionsNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldTriggerConditions))
}

// TimeoutConfigIsNil applies the IsNil predicate on the "timeout_config" field.
func TimeoutConfigIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldTimeoutConfig))
}

// TimeoutConfigNotNil applies the NotNil predicate on the "timeout_config" field.
func TimeoutConfigNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldTimeoutConfig))
}

// ReminderConfigIsNil applies the IsNil predicate on the "reminder_config" field.
func ReminderConfigIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldReminderConfig))
}

// ReminderConfigNotNil applies the NotNil predicate on the "reminder_config" field.
func ReminderConfigNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldReminderConfig))
}

// SourceVersionEQ applies the EQ predicate on the "source_version" field.
func SourceVersionEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldSourceVersion, v))
}

// SourceVersionNEQ applies the NEQ predicate on the "source_version" field.
func SourceVersionNEQ(v string) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldSourceVersion, v))
}

// SourceVersionIn applies the In predicate on the "source_version" field.
func SourceVersionIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldSourceVersion, vs...))
}

// SourceVersionNotIn applies the NotIn predicate on the "source_version" field.
func SourceVersionNotIn(vs ...string) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldSourceVersion, vs...))
}

// SourceVersionGT applies the GT predicate on the "source_version" field.
func SourceVersionGT(v string) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldSourceVersion, v))
}

// SourceVersionGTE applies the GTE predicate on the "source_version" field.
func SourceVersionGTE(v string) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldSourceVersion, v))
}

// SourceVersionLT applies the LT predicate on the "source_version" field.
func SourceVersionLT(v string) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldSourceVersion, v))
}

// SourceVersionLTE applies the LTE predicate on the "source_version" field.
func SourceVersionLTE(v string) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldSourceVersion, v))
}

// SourceVersionContains applies the Contains predicate on the "source_version" field.
func SourceVersionContains(v string) predicate.Template {
	return predicate.Template(sql.FieldContains(FieldSourceVersion, v))
}

// SourceVersionHasPrefix applies the HasPrefix predicate on the "source_version" field.
func SourceVersionHasPrefix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasPrefix(FieldSourceVersion, v))
}

// SourceVersionHasSuffix applies the HasSuffix predicate on the "source_version" field.
func SourceVersionHasSuffix(v string) predicate.Template {
	return predicate.Template(sql.FieldHasSuffix(FieldSourceVersion, v))
}

// SourceVersionIsNil applies the IsNil predicate on the "source_version" field.
func SourceVersionIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldSourceVersion))
}

// SourceVersionNotNil applies the NotNil predicate on the "source_version" field.
func SourceVersionNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldSourceVersion))
}

// SourceVersionEqualFold applies the EqualFold predicate on the "source_version" field.
func SourceVersionEqualFold(v string) predicate.Template {
	return predicate.Template(sql.FieldEqualFold(FieldSourceVersion, v))
}

// SourceVersionContainsFold applies the ContainsFold predicate on the "source_version" field.
func SourceVersionContainsFold(v string) predicate.Template {
	return predicate.Template(sql.FieldContainsFold(FieldSourceVersion, v))
}

// IsLatestEQ applies the EQ predicate on the "is_latest" field.
func IsLatestEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldIsLatest, v))
}

// IsLatestNEQ applies the NEQ predicate on the "is_latest" field.
func IsLatestNEQ(v bool) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldIsLatest, v))
}

// EffectiveTimeEQ applies the EQ predicate on the "effective_time" field.
func EffectiveTimeEQ(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldEffectiveTime, v))
}

// EffectiveTimeNEQ applies the NEQ predicate on the "effective_time" field.
func EffectiveTimeNEQ(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldEffectiveTime, v))
}

// EffectiveTimeIn applies the In predicate on the "effective_time" field.
func EffectiveTimeIn(vs ...time.Time) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldEffectiveTime, vs...))
}

// EffectiveTimeNotIn applies the NotIn predicate on the "effective_time" field.
func EffectiveTimeNotIn(vs ...time.Time) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldEffectiveTime, vs...))
}

// EffectiveTimeGT applies the GT predicate on the "effective_time" field.
func EffectiveTimeGT(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldEffectiveTime, v))
}

// EffectiveTimeGTE applies the GTE predicate on the "effective_time" field.
func EffectiveTimeGTE(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldEffectiveTime, v))
}

// EffectiveTimeLT applies the LT predicate on the "effective_time" field.
func EffectiveTimeLT(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldEffectiveTime, v))
}

// EffectiveTimeLTE applies the LTE predicate on the "effective_time" field.
func EffectiveTimeLTE(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldEffectiveTime, v))
}

// EffectiveTimeIsNil applies the IsNil predicate on the "effective_time" field.
func EffectiveTimeIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldEffectiveTime))
}

// EffectiveTimeNotNil applies the NotNil predicate on the "effective_time" field.
func EffectiveTimeNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldEffectiveTime))
}

// ExpireTimeEQ applies the EQ predicate on the "expire_time" field.
func ExpireTimeEQ(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldEQ(FieldExpireTime, v))
}

// ExpireTimeNEQ applies the NEQ predicate on the "expire_time" field.
func ExpireTimeNEQ(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldNEQ(FieldExpireTime, v))
}

// ExpireTimeIn applies the In predicate on the "expire_time" field.
func ExpireTimeIn(vs ...time.Time) predicate.Template {
	return predicate.Template(sql.FieldIn(FieldExpireTime, vs...))
}

// ExpireTimeNotIn applies the NotIn predicate on the "expire_time" field.
func ExpireTimeNotIn(vs ...time.Time) predicate.Template {
	return predicate.Template(sql.FieldNotIn(FieldExpireTime, vs...))
}

// ExpireTimeGT applies the GT predicate on the "expire_time" field.
func ExpireTimeGT(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldGT(FieldExpireTime, v))
}

// ExpireTimeGTE applies the GTE predicate on the "expire_time" field.
func ExpireTimeGTE(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldGTE(FieldExpireTime, v))
}

// ExpireTimeLT applies the LT predicate on the "expire_time" field.
func ExpireTimeLT(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldLT(FieldExpireTime, v))
}

// ExpireTimeLTE applies the LTE predicate on the "expire_time" field.
func ExpireTimeLTE(v time.Time) predicate.Template {
	return predicate.Template(sql.FieldLTE(FieldExpireTime, v))
}

// ExpireTimeIsNil applies the IsNil predicate on the "expire_time" field.
func ExpireTimeIsNil() predicate.Template {
	return predicate.Template(sql.FieldIsNull(FieldExpireTime))
}

// ExpireTimeNotNil applies the NotNil predicate on the "expire_time" field.
func ExpireTimeNotNil() predicate.Template {
	return predicate.Template(sql.FieldNotNull(FieldExpireTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Template) predicate.Template {
	return predicate.Template(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Template) predicate.Template {
	return predicate.Template(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Template) predicate.Template {
	return predicate.Template(sql.NotPredicates(p))
}
