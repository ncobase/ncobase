{
    "swagger": "2.0",
    "info": {
        "description": "a modern content management system",
        "title": "stocms",
        "termsOfService": "https://stocms.com",
        "contact": {},
        "version": "0.1.0"
    },
    "paths": {
        "/account": {
            "get": {
                "description": "Retrieve information about the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Read current user",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/account/domain": {
            "get": {
                "description": "Retrieve the domain associated with the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Read current user domain",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/account/password": {
            "put": {
                "description": "Update the password of the current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "UserRequestBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/authorize/send": {
            "post": {
                "description": "Send a verification code to the specified destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorization"
                ],
                "summary": "Send verification code",
                "parameters": [
                    {
                        "description": "SendCodeBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.SendCodeBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/authorize/{code}": {
            "get": {
                "description": "Verify the provided code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorization",
                    "authentication"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/domain": {
            "put": {
                "description": "Update the domain information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Update domain",
                "parameters": [
                    {
                        "description": "UpdateDomainBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateDomainBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/domain/{id}": {
            "get": {
                "description": "Retrieve information about a specific domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Read domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/domain/{id}/menu": {
            "get": {
                "description": "Retrieve the menu associated with a specific domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Read domain menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/domain/{id}/setting": {
            "get": {
                "description": "Retrieve the settings associated with a specific domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Read domain setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Health status",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logout the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/callback": {
            "get": {
                "description": "Handle callback from OAuth provider.",
                "tags": [
                    "OAuth"
                ],
                "summary": "OAuth callback",
                "responses": {
                    "302": {
                        "description": "redirect",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/facebook/callback": {
            "get": {
                "description": "Handle callback from Facebook OAuth provider.",
                "tags": [
                    "OAuth"
                ],
                "summary": "Facebook OAuth callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/github/callback": {
            "get": {
                "description": "Handle callback from GitHub OAuth provider.",
                "tags": [
                    "OAuth"
                ],
                "summary": "GitHub OAuth callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/profile": {
            "get": {
                "description": "Retrieve profile information from OAuth provider.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Get OAuth profile",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/register": {
            "post": {
                "description": "Register a user using OAuth.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "OAuth register",
                "parameters": [
                    {
                        "description": "OAuthRegisterBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.OAuthRegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/oauth/{provider}/redirect": {
            "get": {
                "description": "Redirect to OAuth provider for authentication.",
                "tags": [
                    "OAuth"
                ],
                "summary": "OAuth redirect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Next URL after authentication",
                        "name": "next",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "redirect",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "RegisterBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.RegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "List resources based on specified parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "List resources",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order ('asc' or 'desc')",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "description": "Create one or multiple resources.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Create resources",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object ID associated with the resource",
                        "name": "object_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Domain ID associated with the resource",
                        "name": "domain_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Additional properties associated with the resource (JSON format)",
                        "name": "extras",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/resources/{slug}": {
            "get": {
                "description": "Get details of a specific resource.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the resource to retrieve",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of retrieval ('download' or 'stream')",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing resource.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Update resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the resource to update",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload (optional)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Object ID associated with the resource",
                        "name": "object_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Domain ID associated with the resource",
                        "name": "domain_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Additional properties associated with the resource (JSON format)",
                        "name": "extras",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific resource.",
                "tags": [
                    "resources"
                ],
                "summary": "Delete resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the resource to delete",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/resources/{slug}/download": {
            "get": {
                "description": "Download a specific resource.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Download resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the resource to download",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/resources/{slug}/stream": {
            "get": {
                "description": "Stream a specific resource.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Stream resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the resource to stream",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/taxonomy": {
            "get": {
                "description": "Retrieve a list of taxonomies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxonomy"
                ],
                "summary": "List taxonomies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Result limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Result offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new taxonomy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxonomy"
                ],
                "summary": "Create taxonomy",
                "parameters": [
                    {
                        "description": "CreateTaxonomyBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateTaxonomyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/taxonomy/{slug}": {
            "get": {
                "description": "Retrieve details of a taxonomy.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxonomy"
                ],
                "summary": "Get taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing taxonomy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxonomy"
                ],
                "summary": "Update taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing taxonomy.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxonomy"
                ],
                "summary": "Delete taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/topic": {
            "get": {
                "description": "Retrieve a list of topics.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic"
                ],
                "summary": "List topics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Result limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Result offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new topic.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic"
                ],
                "summary": "Create topic",
                "parameters": [
                    {
                        "description": "CreateTopicBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateTopicBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/topic/{slug}": {
            "get": {
                "description": "Retrieve details of a topic.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic"
                ],
                "summary": "Get topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing topic, either fully or partially.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic"
                ],
                "summary": "Update topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing topic.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic"
                ],
                "summary": "Delete topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "description": "Retrieve information about a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Read user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        },
        "/user/{username}/domain": {
            "get": {
                "description": "Retrieve the domain associated with the specified user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Read user domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Exception"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "resp.Exception": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Business code",
                    "type": "integer"
                },
                "data": {
                    "description": "Response data"
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                },
                "status": {
                    "description": "HTTP status",
                    "type": "integer"
                }
            }
        },
        "structs.CreateTaxonomyBody": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/types.JSON"
                },
                "icon": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "description": "status, 0: enabled, 1: disabled, ...",
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                },
                "type": {
                    "description": "type, default 'node', options: 'node', 'plane', 'event', 'page', 'tag', 'link'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.CreateTopicBody": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "markdown": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "released": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "taxonomy_id": {
                    "type": "string"
                },
                "temp": {
                    "type": "boolean"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.LoginBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.OAuthRegisterBody": {
            "type": "object",
            "required": [
                "display_name",
                "username"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "register_token": {
                    "type": "string"
                },
                "short_bio": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.RegisterBody": {
            "type": "object",
            "required": [
                "display_name",
                "register_token",
                "username"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "register_token": {
                    "type": "string"
                },
                "short_bio": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.SendCodeBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateDomainBody": {
            "type": "object",
            "properties": {
                "copyright": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "logo_alt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.UserRequestBody": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "register_token": {
                    "type": "string"
                },
                "short_bio": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.JSON": {
            "type": "object",
            "additionalProperties": {}
        }
    }
}