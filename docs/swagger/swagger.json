{
    "swagger": "2.0",
    "info": {
        "description": "Base Development Framework",
        "title": "Ncobase",
        "contact": {},
        "version": "0.1.0"
    },
    "paths": {
        "/cms/taxonomies": {
            "get": {
                "description": "Retrieve a list of taxonomies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "List taxonomies",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "children",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadTaxonomy"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new taxonomy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Create taxonomy",
                "parameters": [
                    {
                        "description": "CreateTaxonomyBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateTaxonomyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTaxonomy"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/cms/taxonomies/{slug}": {
            "get": {
                "description": "Retrieve details of a taxonomy.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Get taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTaxonomy"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing taxonomy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Update taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateTaxonomyBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateTaxonomyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTaxonomy"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an existing taxonomy.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Delete taxonomy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Taxonomy slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/cms/topics": {
            "get": {
                "description": "Retrieve a list of topics.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "List topics",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "taxonomy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadTopic"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new topic.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Create topic",
                "parameters": [
                    {
                        "description": "CreateTopicBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateTopicBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTopic"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/cms/topics/{slug}": {
            "get": {
                "description": "Retrieve details of a topic.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Get topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTopic"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing topic, either fully or partially.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Update topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateTopicBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateTopicBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTopic"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an existing topic.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cms"
                ],
                "summary": "Delete topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/account": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve information about the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.AccountMeshes"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/account/password": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the password of the current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "UserPassword object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UserPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/account/tenant": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the tenant associated with the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get current user tenant",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/account/tenants": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the tenant associated with the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get current user tenants",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/authorize/send": {
            "post": {
                "description": "Send a verification code to the specified destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Send verification code",
                "parameters": [
                    {
                        "description": "SendCodeBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.SendCodeBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "registered": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/authorize/{code}": {
            "get": {
                "description": "Verify the provided code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "access_token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "register_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/captcha/generate": {
            "get": {
                "description": "Generate a captcha image.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Generate captcha",
                "parameters": [
                    {
                        "enum": [
                            "png",
                            "wav"
                        ],
                        "type": "string",
                        "description": "Captcha type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/captcha/validate": {
            "post": {
                "description": "Validate a captcha code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Validate captcha",
                "parameters": [
                    {
                        "description": "Captcha object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.Captcha"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/captcha/{captcha_id}": {
            "get": {
                "description": "Stream a captcha image.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Stream captcha",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Captcha ID With Extension (png, wav)",
                        "name": "captcha_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/login": {
            "post": {
                "description": "Log in a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "access_token": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/permissions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of permissions based on the provided query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List all permissions",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadPermission"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new permission with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "Permission data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreatePermissionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadPermission"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/permissions/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a permission by its slug or ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get a permission by slug or ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadPermission"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing permission with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Update an existing permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_types.JSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadPermission"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a permission by its slug or ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Delete a permission by slug or ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadPermission"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/policies": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of Casbin rules.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List Casbin rules",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "p_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v0",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v4",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "v5",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.CasbinRuleBody"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new Casbin rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Create Casbin rule",
                "parameters": [
                    {
                        "description": "CasbinRuleBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CasbinRuleBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCasbinRule"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/policies/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve details of a Casbin rule.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get Casbin rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Casbin rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCasbinRule"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing Casbin rule, either fully or partially.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Update Casbin rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Casbin rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CasbinRuleBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CasbinRuleBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCasbinRule"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an existing Casbin rule.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Delete Casbin rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Casbin rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/register": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "RegisterBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.RegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "access_token": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of roles based on the provided query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List all roles",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadRole"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new role with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateRoleBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadRole"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/roles/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a role by its slug or ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get a role by slug or ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadRole"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing role with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Update an existing role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_types.JSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadRole"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a role by its slug or ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Delete a role by slug or ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role slug or ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadRole"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/roles/{slug}/permissions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of permissions associated with a role by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List permissions for a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadPermission"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of tenants.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenants",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadTenant"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the tenant information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Update tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateTenantBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateTenantBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new tenant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Create tenant",
                "parameters": [
                    {
                        "description": "CreateTenantBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateTenantBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve information about a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Delete tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/attachments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of attachments associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenant attachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/groups": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of groups associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenant groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/menu": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the menu associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get tenant menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of roles associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenant roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/setting": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the settings associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get tenant setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/settings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of settings associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenant settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/tenants/{slug}/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of users associated with a specific tenant.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "List tenant users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/iam/users/{username}/tenant": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the tenant associated with the specified user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iam"
                ],
                "summary": "Get user owned tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadTenant"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/org/groups": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list or tree structure of groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org"
                ],
                "summary": "List groups",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "children",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org"
                ],
                "summary": "Update group",
                "parameters": [
                    {
                        "description": "UpdateGroupBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateGroupBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadGroup"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org"
                ],
                "summary": "Create group",
                "parameters": [
                    {
                        "description": "GroupBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.GroupBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadGroup"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/org/groups/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a group by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org"
                ],
                "summary": "Get group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "children",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadGroup"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a group by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org"
                ],
                "summary": "Delete group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/plug/counters": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list or tree structure of counters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plug"
                ],
                "summary": "List counters",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "disabled",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadCounter"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing counter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plug"
                ],
                "summary": "Update counter",
                "parameters": [
                    {
                        "description": "UpdateCounterBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateCounterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCounter"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new counter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plug"
                ],
                "summary": "Create counter",
                "parameters": [
                    {
                        "description": "CounterBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CounterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCounter"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/plug/counters/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a counter by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plug"
                ],
                "summary": "Get counter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadCounter"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a counter by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plug"
                ],
                "summary": "Delete counter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/res/attachments": {
            "get": {
                "description": "List attachments based on specified parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "res"
                ],
                "summary": "List attachments",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "storage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadAttachment"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create one or multiple attachments.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "res"
                ],
                "summary": "Create attachments",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object ID associated with the attachment",
                        "name": "object_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tenant ID associated with the attachment",
                        "name": "tenant_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Additional properties associated with the attachment (JSON format)",
                        "name": "extras",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadAttachment"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/res/attachments/{slug}": {
            "get": {
                "description": "Get details of a specific attachment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "res"
                ],
                "summary": "Get attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the attachment to retrieve",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of retrieval ('download' or 'stream')",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadAttachment"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing attachment.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "res"
                ],
                "summary": "Update attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the attachment to update",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attachment details",
                        "name": "attachment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateAttachmentBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadAttachment"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a specific attachment.",
                "tags": [
                    "res"
                ],
                "summary": "Delete attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the attachment to delete",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadAttachment"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of channels based on the provided query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "List all channels",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadChannel"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Create a new channel",
                "parameters": [
                    {
                        "description": "Channel data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateChannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadChannel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get channels of a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get channels of a user",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadChannel"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a channel by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get a channel by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadChannel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Update a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Channel data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateChannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadChannel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a channel",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Delete a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadChannel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels/{id}/subscribe": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Subscribe to a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Subscribe to a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadSubscription"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels/{id}/subscribers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get subscribers of a channel",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get subscribers of a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadUser"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/channels/{id}/unsubscribe": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Unsubscribe from a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Unsubscribe from a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/events": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of events based on the provided query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "List all events",
                "parameters": [
                    {
                        "type": "string",
                        "name": "channel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/events/history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get event history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get event history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "channel_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/events/publish": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Publish a new event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Publish a new event",
                "parameters": [
                    {
                        "description": "Event data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadEvent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/events/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an event by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get an event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadEvent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadEvent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of notifications based on the provided query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "List all notifications",
                "parameters": [
                    {
                        "type": "string",
                        "name": "channel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadNotification"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Create a new notification",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.CreateNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications/read-all": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mark all notifications as read",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Mark all notifications as read",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications/unread-all": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mark all notifications as unread",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Mark all notifications as unread",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a notification by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Get a notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Update a notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a notification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Delete a notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications/{id}/read": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mark a notification as read",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Mark a notification as read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/notifications/{id}/unread": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mark a notification as unread",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rt"
                ],
                "summary": "Mark a notification as unread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadNotification"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/rt/ws": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Handles WebSocket connection",
                "tags": [
                    "rt"
                ],
                "summary": "Handle WebSocket connection",
                "responses": {}
            }
        },
        "/sys/dictionarys": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list or tree structure of dictionarys.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "List dictionarys",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadDictionary"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing dictionary.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Update dictionary",
                "parameters": [
                    {
                        "description": "UpdateDictionaryBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateDictionaryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadDictionary"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new dictionary.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Create dictionary",
                "parameters": [
                    {
                        "description": "DictionaryBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.DictionaryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadDictionary"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/dictionarys/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a dictionary by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Get dictionary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dictionary ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "dictionary",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadDictionary"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a dictionary by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Delete dictionary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dictionary ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/menus": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list or tree structure of menus.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "List menus",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "children",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "perms",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadMenu"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing menu.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Update menu",
                "parameters": [
                    {
                        "description": "UpdateMenuBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateMenuBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadMenu"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new menu.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Create menu",
                "parameters": [
                    {
                        "description": "MenuBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.MenuBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadMenu"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/menus/{slug}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a menu by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Get menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "children",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "menu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadMenu"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a menu by ID or slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Delete menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu ID or slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/options": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of options.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "List options",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "autoload",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadOptions"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing option.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Update option",
                "parameters": [
                    {
                        "description": "UpdateOptionsBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateOptionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadOptions"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new option.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Create option",
                "parameters": [
                    {
                        "description": "OptionsBody object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.OptionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadOptions"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/options/initialize": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Initialize the system with default options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Initialize",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/options/{option}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve an option by ID or name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Get option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Option ID or name",
                        "name": "option",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadOptions"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an option by ID or name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Delete option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Option ID or name",
                        "name": "option",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/users": {
            "get": {
                "description": "List all users with pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Direction of pagination (forward or backward)",
                        "name": "direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.ReadUser"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadUser"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/users/{username}": {
            "get": {
                "description": "Retrieve information about a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadUser"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_types.JSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/structs.ReadUser"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        },
        "/sys/users/{username}/password": {
            "put": {
                "description": "Update an existing user's password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password information",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UserPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/ncobase_common_resp.Exception"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ncobase_common_resp.Exception": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Business code",
                    "type": "integer"
                },
                "data": {
                    "description": "Response data"
                },
                "errors": {
                    "description": "Validation errors"
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                },
                "status": {
                    "description": "HTTP status",
                    "type": "integer"
                }
            }
        },
        "ncobase_common_types.JSON": {
            "type": "object",
            "additionalProperties": {}
        },
        "structs.AccountMeshes": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structs.ReadGroup"
                    }
                },
                "profile": {
                    "$ref": "#/definitions/structs.ReadUserProfile"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structs.ReadRole"
                    }
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structs.ReadTenant"
                    }
                },
                "user": {
                    "$ref": "#/definitions/structs.ReadUser"
                }
            }
        },
        "structs.Captcha": {
            "type": "object",
            "required": [
                "id",
                "solution"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "solution": {
                    "type": "string"
                }
            }
        },
        "structs.CasbinRuleBody": {
            "type": "object",
            "required": [
                "p_type",
                "v0",
                "v1",
                "v2"
            ],
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "p_type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "v0": {
                    "type": "string"
                },
                "v1": {
                    "type": "string"
                },
                "v2": {
                    "type": "string"
                },
                "v3": {
                    "type": "string"
                },
                "v4": {
                    "type": "string"
                },
                "v5": {
                    "type": "string"
                }
            }
        },
        "structs.ChannelBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "0: disabled, 1: enabled",
                    "type": "integer"
                },
                "type": {
                    "description": "public/private/direct",
                    "type": "string"
                }
            }
        },
        "structs.CounterBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "current_value": {
                    "type": "integer"
                },
                "date_format": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                },
                "increment_step": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "start_value": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.CreateChannel": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/structs.ChannelBody"
                }
            }
        },
        "structs.CreateEvent": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/structs.EventBody"
                }
            }
        },
        "structs.CreateNotification": {
            "type": "object",
            "properties": {
                "notification": {
                    "$ref": "#/definitions/structs.NotificationBody"
                }
            }
        },
        "structs.CreatePermissionBody": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.CreateRoleBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.CreateSubscription": {
            "type": "object",
            "properties": {
                "subscription": {
                    "$ref": "#/definitions/structs.SubscriptionBody"
                }
            }
        },
        "structs.CreateTaxonomyBody": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "icon": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.CreateTenantBody": {
            "type": "object",
            "properties": {
                "copyright": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "expired_at": {
                    "type": "integer"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "keywords": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "logo_alt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.CreateTopicBody": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "markdown": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "released": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "taxonomy_id": {
                    "type": "string"
                },
                "temp": {
                    "type": "boolean"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.DictionaryBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.EventBody": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.GroupBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "leader": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.LoginBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "captcha": {
                    "$ref": "#/definitions/structs.Captcha"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.MenuBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "hidden": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "perms": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.NotificationBody": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ncobase_common_types.JSON"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.OptionsBody": {
            "type": "object",
            "properties": {
                "autoload": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.ReadAttachment": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "object_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "storage": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadCasbinRule": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "p_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                },
                "v0": {
                    "type": "string"
                },
                "v1": {
                    "type": "string"
                },
                "v2": {
                    "type": "string"
                },
                "v3": {
                    "type": "string"
                },
                "v4": {
                    "type": "string"
                },
                "v5": {
                    "type": "string"
                }
            }
        },
        "structs.ReadChannel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "structs.ReadCounter": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "current_value": {
                    "type": "integer"
                },
                "date_format": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "increment_step": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "start_value": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadDictionary": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.ReadEvent": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.ReadGroup": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {}
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "leader": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadMenu": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {}
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "hidden": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "perms": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadNotification": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ncobase_common_types.JSON"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.ReadOptions": {
            "type": "object",
            "properties": {
                "autoload": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.ReadPermission": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadSubscription": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.ReadTaxonomy": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {}
                },
                "color": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.ReadTenant": {
            "type": "object",
            "properties": {
                "copyright": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "expired_at": {
                    "type": "integer"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "logo_alt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.ReadTopic": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "markdown": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "released": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "taxonomy_id": {
                    "type": "string"
                },
                "temp": {
                    "type": "boolean"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.ReadUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "is_certified": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.ReadUserProfile": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ncobase_common_types.JSON"
                    }
                },
                "short_bio": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "structs.RegisterBody": {
            "type": "object",
            "required": [
                "display_name",
                "register_token",
                "username"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "register_token": {
                    "type": "string"
                },
                "short_bio": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.SendCodeBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "structs.SubscriptionBody": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "status": {
                    "description": "0: disabled, 1: enabled",
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateAttachmentBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "object_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "storage": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateChannel": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/structs.ChannelBody"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateCounterBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "current_value": {
                    "type": "integer"
                },
                "date_format": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "increment_step": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "start_value": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateDictionaryBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateGroupBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "leader": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateMenuBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "hidden": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "perms": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/structs.NotificationBody"
                }
            }
        },
        "structs.UpdateOptionsBody": {
            "type": "object",
            "properties": {
                "autoload": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateTaxonomyBody": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateTenantBody": {
            "type": "object",
            "properties": {
                "copyright": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "expired_at": {
                    "type": "integer"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "logo_alt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateTopicBody": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "markdown": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "released": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "taxonomy_id": {
                    "type": "string"
                },
                "temp": {
                    "type": "boolean"
                },
                "tenant_id": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "structs.UserBody": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/ncobase_common_types.JSON"
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "is_certified": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "structs.UserPassword": {
            "type": "object",
            "required": [
                "confirm",
                "new_password",
                "user"
            ],
            "properties": {
                "confirm": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}