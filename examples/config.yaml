# Application name
app_name: application
# Environment (development / staging / production)
environment: production

consul:
  address: 127.0.0.1:8500
  scheme: http
  discovery:
    default_tags:
      - "t1"
      - "t2"
    default_meta:
      env: development
      region: private-east-1
    health_check: false
    check_interval: "10s"
    timeout: "5s"

observes:
  tracer:
    endpoint: http://localhost:4318/v1/traces # OpenTelemetry collector endpoint
  sentry:
    endpoint: https://xxxxx@sentry.io/xxxxx # Sentry DSN endpoint

server:
  # Protocol type http / https
  protocol: http
  # Running domain
  domain: localhost
  # Application running address (localhost: 127.0.0.1, all addresses: 0.0.0.0)
  host: 127.0.0.1
  # Application running port
  port: 3000

# gRPC server configuration (optional)
grpc:
  enabled: false
  host: 127.0.0.1
  port: 9090

extension:
  # Plugin mode: file (load from files) or c2hlbgo (built-in)
  mode: file
  # Plugin directory path
  path: ./plugins
  # Include specific plugins
  includes:
    - auth # Authentication plugin
    - logger # Logging plugin
    - storage # Storage plugin
    - notification # Notification plugin
  # Exclude specific plugins
  excludes:
    - test # Test plugin
    - mock # Mock plugin
    - deprecated # Deprecated plugins
  # Enable hot reload for plugin changes
  hot_reload: true
  # Maximum number of plugins allowed
  max_plugins: 50

  # Security configuration
  security:
    enable_sandbox: false
    allowed_paths: []
    blocked_extensions: [".exe", ".bat"]
    trusted_sources: []
    require_signature: false
    allow_unsafe: true # Allow in development

  # Performance configuration
  performance:
    max_memory_mb: 512
    max_cpu_percent: 80
    gc_interval: "10m"
    max_concurrent_loads: 5

  # Extension metrics
  metrics:
    enabled: true
    flush_interval: "60s"
    batch_size: 100
    retention: "7d"
    storage:
      type: "auto" # Will use Redis if available
      key_prefix: "ncore_ext"

  # Plugin-specific configuration
  plugin_config:
    auth_plugin:
      oauth_providers: ["google", "github"]
    logger_plugin:
      log_level: "info"
    storage_plugin:
      cache_ttl: "1h"
    notification_plugin:
      batch_size: 50

frontend:
  # Frontend authentication URLs
  sign_in_url: http://localhost:3000/login # URL for user login page
  sign_up_url: http://localhost:3000/register # URL for user registration page

data:
  database:
    # global configuration
    migrate: true # migrate only support master
    strategy: round_robin # slave load balance strategy, round_robin / random / weight
    max_retry: 3 # max retry
    # master configuration
    master:
      driver: postgres
      # mysql: user:password@tcp(127.0.0.1:3306)/db?params
      # postgres: host=127.0.0.1 port=5432 dbname=db user=user password=password sslmode=disable TimeZone=Asia/Shanghai
      # sqlite3: file:./data.db?cache=shared&&_fk=1
      source: postgres://user:password@127.0.0.1:5432/db?sslmode=disable
      max_open_conn: 32 # max open connections
      max_life_time: 7200 # max life time
      max_idle_conn: 8 # max idle connections
      logging: false # logging
      # slave configuration, support multiple
      slaves:
        - driver: postgres
          source: postgres://user:password@127.0.0.1:5433/db?sslmode=disable
          max_open_conn: 64
          max_life_time: 7200
          max_idle_conn: 16
          logging: false
          weight: 1
        - driver: postgres
          source: postgres://user:password@127.0.0.1:5434/db?sslmode=disable
          max_open_conn: 64
          max_life_time: 7200
          max_idle_conn: 16
          logging: false
          weight: 1
        - driver: postgres
          source: postgres://user:password@127.0.0.1:5435/db?sslmode=disable
          max_open_conn: 64
          max_life_time: 7200
          max_idle_conn: 16
          logging: false
          weight: 1
  search:
    index_prefix: "application-production"
    default_engine: "elasticsearch"
    auto_create_index: true
    index_settings:
      shards: 1
      replicas: 0
      refresh_interval: "1s"
      searchable_fields: [ "title", "content" ]
      filterable_fields: [ "id", "type", "status" ]
    elasticsearch:
      addresses:
        - http://localhost:9200
        - http://localhost:9201 # Optional additional nodes
      username: elastic
      password: your_password
    opensearch:
      addresses:
        - http://localhost:9200
        - http://localhost:9201 # Optional additional nodes
      username: user
      password: your_password
      insecure_skip_tls: true
    meilisearch:
      host: http://127.0.0.1:7700
      api_key: masterKey # Your Meilisearch master key
  redis:
    addr: 127.0.0.1:6378
    password: your_redis_password
    db: 0
    read_timeout: 0.4s
    write_timeout: 0.6s
    dial_timeout: 1s
  mongodb:
    strategy: round_robin # slave load balance strategy, round_robin / random / weight
    max_retry: 3 # max retry
    master:
      uri: mongodb://user:pass@localhost:27017/dbname?authSource=admin&maxPoolSize=100&minPoolSize=10
      logging: false
    slaves:
      - uri: mongodb://user:pass@localhost:27018/dbname?authSource=admin&maxPoolSize=200&minPoolSize=20
        logging: false
        weight: 1
      - uri: mongodb://user:pass@localhost:27019/dbname?authSource=admin&maxPoolSize=200&minPoolSize=20
        logging: false
        weight: 1
  neo4j:
    uri: localhost:7687
    username: neo4j
    password: password123
  rabbitmq:
    url: localhost:5672
    username: guest
    password: guest
    vhost: /
    connection_timeout: 10s
    heartbeat_interval: 15s
  kafka:
    brokers:
      - localhost:9092
      - localhost:9093
    client_id: datidy-client
    consumer_group: datidy-group
    topic: datidy-topic
    read_timeout: 10s
    write_timeout: 10s
    connect_timeout: 10s

  # Messaging configuration - Controls all messaging functionality
  messaging:
    enabled: true # Enable/disable all messaging functionality (events, queues)
    publish_timeout: "30s" # Timeout for publishing messages
    cross_region_mode: false # Enable cross-region messaging optimizations
    retry_attempts: 3 # Number of retry attempts for failed operations
    retry_backoff_max: "30s" # Maximum backoff time between retries
    fallback_to_memory: true # Fallback to memory events when queues unavailable

  # Data layer metrics
  metrics:
    enabled: true # Enable data layer metrics collection
    storage_type: "redis" # "memory", "redis", or "auto"
    key_prefix: "ncore_data" # Redis key prefix for metrics
    retention_days: 7 # How long to keep metrics data
    batch_size: 100 # Batch size for metrics operations

auth:
  jwt:
    secret: your-jwt-secret-key # openssl passwd -stdin < <(echo) | base64 | shasum / nanoid(35)
    expiry: 24h # expiration time
  casbin:
    model: |
      [request_definition]
      r = sub, dom, obj, act, v4, v5

      [policy_definition]
      p = sub, dom, obj, act, v4, v5

      [role_definition]
      g = _, _, _

      [policy_effect]
      e = some(where (p.eft == allow))

      [matchers]
      m = (g(r.sub, p.sub, r.dom) && r.dom == p.dom && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)) || (r.sub == "super-admin" && r.dom == p.dom && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act))
  whitelist:
    - /health
    - /login
    - /register
    - /logout
    - /captcha/*
    - /authorize/*
    - /token-status
    - /sys/initialize
    - /sys/initialize/*
    - /static/*
    - "*swagger*"
  max_sessions: 10 # Maximum concurrent sessions per user
  session_cleanup_interval: 3600 # Session cleanup interval in seconds

logger:
  # Log level (1:fatal, 2:error, 3:warn, 4:info, 5:debug, 6:trace)
  level: 6
  # Log format (supported output formats: text/json)
  format: text
  # Log output (supported: stdout/stderr/file)
  output: stdout
  # Specify the file path for log output
  output_file: logs/access.log
  # Log index name, if not set, the default is app_name + environment + -log
  index_name: application-production-log
  meilisearch:
    host: http://127.0.0.1:7700
    api_key: masterKey # Your Meilisearch master key
  elasticsearch:
    addresses:
      - http://localhost:9200
      - http://localhost:9201 # Optional additional nodes
    username: elastic
    password: your_password
  opensearch:
    addresses:
      - http://localhost:9200
      - http://localhost:9201 # Optional additional nodes
    username: user
    password: your_password
    insecure_skip_tls: true

storage:
  # filesystem（need to set the bucket as the storage path）/ minio / aliyun-oss / aws-s3 / azure / tencent-cos
  provider: filesystem
  bucket: uploads
  endpoint:

#  provider: minio
#  id:
#  secret:
#  region:
#  bucket:
#  endpoint:

oauth:
  github:
    id: "github_oauth_app_id" # Your GitHub OAuth App ID
    secret: "github_oauth_app_secret" # Your GitHub OAuth App Secret
    redirect_url: "http://localhost:3000/oauth/github/callback"
  facebook:
    id: "facebook_app_id" # Your Facebook App ID
    secret: "facebook_app_secret" # Your Facebook App Secret
    redirect_url: "http://localhost:3000/oauth/facebook/callback"
  google:
    client_id: "google_oauth_client_id" # Your Google OAuth Client ID
    client_secret: "google_oauth_secret" # Your Google OAuth Client Secret
    redirect_url: "http://localhost:3000/oauth/google/callback"

email:
  # use only one of these, optional: mailgun / aliyun / netease / sendgrid / smtp / tencent_cloud
  provider: smtp
  mailgun:
    key: your-mailgun-api-key
    domain: your-domain.com
    from: no-reply@your-domain.com
  aliyun:
    id: your-aliyun-access-key-id
    secret: your-aliyun-access-key-secret
    account: no-reply@your-domain.com
  netease:
    username: your-163-email@163.com
    password: your-163-email-password
    from: your-163-email@163.com
    smtpHost: smtp.163.com
    smtpPort: 465
  sendgrid:
    key: your-sendgrid-api-key
    from: no-reply@your-domain.com
  smtp:
    smtpHost: smtp.gmail.com
    smtpPort: 587
    username: your-email@gmail.com
    password: your-email-password
    from: your-email@gmail.com
  tencent_cloud:
    id: your-tencent-secret-id
    secret: your-tencent-secret-key
    from: no-reply@your-domain.com
