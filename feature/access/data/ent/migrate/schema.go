// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NbCasbinRuleColumns holds the columns for the "nb_casbin_rule" table.
	NbCasbinRuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "p_type", Type: field.TypeString, Nullable: true, Comment: "permission type"},
		{Name: "v0", Type: field.TypeString, Nullable: true, Comment: "version 0"},
		{Name: "v1", Type: field.TypeString, Nullable: true, Comment: "version 1"},
		{Name: "v2", Type: field.TypeString, Nullable: true, Comment: "version 2"},
		{Name: "v3", Type: field.TypeString, Nullable: true, Comment: "version 3"},
		{Name: "v4", Type: field.TypeString, Nullable: true, Comment: "version 4"},
		{Name: "v5", Type: field.TypeString, Nullable: true, Comment: "version 5"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbCasbinRuleTable holds the schema information for the "nb_casbin_rule" table.
	NbCasbinRuleTable = &schema.Table{
		Name:       "nb_casbin_rule",
		Columns:    NbCasbinRuleColumns,
		PrimaryKey: []*schema.Column{NbCasbinRuleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "casbinrule_id",
				Unique:  true,
				Columns: []*schema.Column{NbCasbinRuleColumns[0]},
			},
		},
	}
	// NbPermissionColumns holds the columns for the "nb_permission" table.
	NbPermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "action", Type: field.TypeString, Nullable: true, Comment: "action"},
		{Name: "subject", Type: field.TypeString, Nullable: true, Comment: "subject"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "default", Type: field.TypeBool, Nullable: true, Comment: "is default", Default: false},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbPermissionTable holds the schema information for the "nb_permission" table.
	NbPermissionTable = &schema.Table{
		Name:       "nb_permission",
		Columns:    NbPermissionColumns,
		PrimaryKey: []*schema.Column{NbPermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "permission_id",
				Unique:  true,
				Columns: []*schema.Column{NbPermissionColumns[0]},
			},
			{
				Name:    "permission_action_subject",
				Unique:  false,
				Columns: []*schema.Column{NbPermissionColumns[2], NbPermissionColumns[3]},
			},
		},
	}
	// NbRoleColumns holds the columns for the "nb_role" table.
	NbRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbRoleTable holds the schema information for the "nb_role" table.
	NbRoleTable = &schema.Table{
		Name:       "nb_role",
		Columns:    NbRoleColumns,
		PrimaryKey: []*schema.Column{NbRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_id",
				Unique:  true,
				Columns: []*schema.Column{NbRoleColumns[0]},
			},
			{
				Name:    "role_slug",
				Unique:  true,
				Columns: []*schema.Column{NbRoleColumns[2]},
			},
		},
	}
	// NbRolePermissionColumns holds the columns for the "nb_role_permission" table.
	NbRolePermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "role id"},
		{Name: "permission_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "permission id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbRolePermissionTable holds the schema information for the "nb_role_permission" table.
	NbRolePermissionTable = &schema.Table{
		Name:       "nb_role_permission",
		Columns:    NbRolePermissionColumns,
		PrimaryKey: []*schema.Column{NbRolePermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_id",
				Unique:  true,
				Columns: []*schema.Column{NbRolePermissionColumns[0]},
			},
			{
				Name:    "rolepermission_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[1]},
			},
			{
				Name:    "rolepermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[2]},
			},
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[1], NbRolePermissionColumns[2]},
			},
		},
	}
	// NbUserRoleColumns holds the columns for the "nb_user_role" table.
	NbUserRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "user id"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "role id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbUserRoleTable holds the schema information for the "nb_user_role" table.
	NbUserRoleTable = &schema.Table{
		Name:       "nb_user_role",
		Columns:    NbUserRoleColumns,
		PrimaryKey: []*schema.Column{NbUserRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_id",
				Unique:  true,
				Columns: []*schema.Column{NbUserRoleColumns[0]},
			},
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[1]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[2]},
			},
			{
				Name:    "userrole_user_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[1], NbUserRoleColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NbCasbinRuleTable,
		NbPermissionTable,
		NbRoleTable,
		NbRolePermissionTable,
		NbUserRoleTable,
	}
)

func init() {
	NbCasbinRuleTable.Annotation = &entsql.Annotation{
		Table: "nb_casbin_rule",
	}
	NbPermissionTable.Annotation = &entsql.Annotation{
		Table: "nb_permission",
	}
	NbRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_role",
	}
	NbRolePermissionTable.Annotation = &entsql.Annotation{
		Table: "nb_role_permission",
	}
	NbUserRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_user_role",
	}
}
