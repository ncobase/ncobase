// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NbAuthTokenColumns holds the columns for the "nb_auth_token" table.
	NbAuthTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "user id"},
	}
	// NbAuthTokenTable holds the schema information for the "nb_auth_token" table.
	NbAuthTokenTable = &schema.Table{
		Name:       "nb_auth_token",
		Columns:    NbAuthTokenColumns,
		PrimaryKey: []*schema.Column{NbAuthTokenColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "authtoken_id",
				Unique:  true,
				Columns: []*schema.Column{NbAuthTokenColumns[0]},
			},
			{
				Name:    "authtoken_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbAuthTokenColumns[4]},
			},
		},
	}
	// NbCodeAuthColumns holds the columns for the "nb_code_auth" table.
	NbCodeAuthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "code", Type: field.TypeString, Nullable: true, Comment: "code"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "logged", Type: field.TypeBool, Nullable: true, Comment: "is logged", Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbCodeAuthTable holds the schema information for the "nb_code_auth" table.
	NbCodeAuthTable = &schema.Table{
		Name:       "nb_code_auth",
		Columns:    NbCodeAuthColumns,
		PrimaryKey: []*schema.Column{NbCodeAuthColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "codeauth_id",
				Unique:  true,
				Columns: []*schema.Column{NbCodeAuthColumns[0]},
			},
			{
				Name:    "codeauth_code",
				Unique:  false,
				Columns: []*schema.Column{NbCodeAuthColumns[1]},
			},
		},
	}
	// NbOauthUserColumns holds the columns for the "nb_oauth_user" table.
	NbOauthUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "oauth_id", Type: field.TypeString, Nullable: true, Comment: "oauth id"},
		{Name: "access_token", Type: field.TypeString, Comment: "access token"},
		{Name: "provider", Type: field.TypeString, Nullable: true, Comment: "provider"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "user id"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbOauthUserTable holds the schema information for the "nb_oauth_user" table.
	NbOauthUserTable = &schema.Table{
		Name:       "nb_oauth_user",
		Columns:    NbOauthUserColumns,
		PrimaryKey: []*schema.Column{NbOauthUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthuser_id",
				Unique:  true,
				Columns: []*schema.Column{NbOauthUserColumns[0]},
			},
			{
				Name:    "oauthuser_oauth_id",
				Unique:  false,
				Columns: []*schema.Column{NbOauthUserColumns[1]},
			},
			{
				Name:    "oauthuser_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbOauthUserColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NbAuthTokenTable,
		NbCodeAuthTable,
		NbOauthUserTable,
	}
)

func init() {
	NbAuthTokenTable.Annotation = &entsql.Annotation{
		Table: "nb_auth_token",
	}
	NbCodeAuthTable.Annotation = &entsql.Annotation{
		Table: "nb_code_auth",
	}
	NbOauthUserTable.Annotation = &entsql.Annotation{
		Table: "nb_oauth_user",
	}
}
