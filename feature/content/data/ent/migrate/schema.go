// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NcseTaxonomyColumns holds the columns for the "ncse_taxonomy" table.
	NcseTaxonomyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "cover", Type: field.TypeString, Nullable: true, Comment: "cover"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "color", Type: field.TypeString, Nullable: true, Comment: "color"},
		{Name: "icon", Type: field.TypeString, Nullable: true, Comment: "icon"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url, website / link..."},
		{Name: "keywords", Type: field.TypeString, Nullable: true, Comment: "keywords"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "status", Type: field.TypeInt, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "parent id"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "tenant id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
	}
	// NcseTaxonomyTable holds the schema information for the "ncse_taxonomy" table.
	NcseTaxonomyTable = &schema.Table{
		Name:       "ncse_taxonomy",
		Columns:    NcseTaxonomyColumns,
		PrimaryKey: []*schema.Column{NcseTaxonomyColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taxonomy_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTaxonomyColumns[0]},
			},
			{
				Name:    "taxonomy_slug",
				Unique:  true,
				Columns: []*schema.Column{NcseTaxonomyColumns[3]},
			},
			{
				Name:    "taxonomy_parent_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTaxonomyColumns[13]},
			},
			{
				Name:    "taxonomy_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTaxonomyColumns[14]},
			},
			{
				Name:    "taxonomy_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseTaxonomyColumns[0], NcseTaxonomyColumns[17]},
			},
		},
	}
	// NcseTaxonomyRelationColumns holds the columns for the "ncse_taxonomy_relation" table.
	NcseTaxonomyRelationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "object_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "object id"},
		{Name: "taxonomy_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "taxonomy id"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "order", Type: field.TypeInt, Comment: "display order", Default: 0},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
	}
	// NcseTaxonomyRelationTable holds the schema information for the "ncse_taxonomy_relation" table.
	NcseTaxonomyRelationTable = &schema.Table{
		Name:       "ncse_taxonomy_relation",
		Columns:    NcseTaxonomyRelationColumns,
		PrimaryKey: []*schema.Column{NcseTaxonomyRelationColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taxonomyrelation_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTaxonomyRelationColumns[0]},
			},
			{
				Name:    "taxonomyrelation_object_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTaxonomyRelationColumns[1]},
			},
			{
				Name:    "taxonomyrelation_taxonomy_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTaxonomyRelationColumns[2]},
			},
			{
				Name:    "taxonomyrelation_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseTaxonomyRelationColumns[0], NcseTaxonomyRelationColumns[6]},
			},
		},
	}
	// NcseTopicColumns holds the columns for the "ncse_topic" table.
	NcseTopicColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "content, big text"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "temp", Type: field.TypeBool, Nullable: true, Comment: "is temp", Default: false},
		{Name: "markdown", Type: field.TypeBool, Nullable: true, Comment: "is markdown", Default: false},
		{Name: "private", Type: field.TypeBool, Nullable: true, Comment: "is private", Default: false},
		{Name: "status", Type: field.TypeInt, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "released", Type: field.TypeInt64, Nullable: true, Comment: "released"},
		{Name: "taxonomy_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "taxonomy id"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "tenant id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
	}
	// NcseTopicTable holds the schema information for the "ncse_topic" table.
	NcseTopicTable = &schema.Table{
		Name:       "ncse_topic",
		Columns:    NcseTopicColumns,
		PrimaryKey: []*schema.Column{NcseTopicColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "topic_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTopicColumns[0]},
			},
			{
				Name:    "topic_slug",
				Unique:  true,
				Columns: []*schema.Column{NcseTopicColumns[3]},
			},
			{
				Name:    "topic_taxonomy_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTopicColumns[11]},
			},
			{
				Name:    "topic_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTopicColumns[12]},
			},
			{
				Name:    "topic_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseTopicColumns[0], NcseTopicColumns[15]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NcseTaxonomyTable,
		NcseTaxonomyRelationTable,
		NcseTopicTable,
	}
)

func init() {
	NcseTaxonomyTable.Annotation = &entsql.Annotation{
		Table: "ncse_taxonomy",
	}
	NcseTaxonomyRelationTable.Annotation = &entsql.Annotation{
		Table: "ncse_taxonomy_relation",
	}
	NcseTopicTable.Annotation = &entsql.Annotation{
		Table: "ncse_topic",
	}
}
