// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NbGroupColumns holds the columns for the "nb_group" table.
	NbGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "leader", Type: field.TypeJSON, Nullable: true, Comment: "Leader information, e.g., {id: '', name: '', avatar: '', url: '', email: '', ip: ''}"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "parent id"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "tenant id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbGroupTable holds the schema information for the "nb_group" table.
	NbGroupTable = &schema.Table{
		Name:       "nb_group",
		Columns:    NbGroupColumns,
		PrimaryKey: []*schema.Column{NbGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "group_id",
				Unique:  true,
				Columns: []*schema.Column{NbGroupColumns[0]},
			},
			{
				Name:    "group_slug",
				Unique:  true,
				Columns: []*schema.Column{NbGroupColumns[2]},
			},
			{
				Name:    "group_parent_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupColumns[7]},
			},
			{
				Name:    "group_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupColumns[8]},
			},
		},
	}
	// NbGroupRoleColumns holds the columns for the "nb_group_role" table.
	NbGroupRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "group_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "group id"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "role id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbGroupRoleTable holds the schema information for the "nb_group_role" table.
	NbGroupRoleTable = &schema.Table{
		Name:       "nb_group_role",
		Columns:    NbGroupRoleColumns,
		PrimaryKey: []*schema.Column{NbGroupRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "grouprole_id",
				Unique:  true,
				Columns: []*schema.Column{NbGroupRoleColumns[0]},
			},
			{
				Name:    "grouprole_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[1]},
			},
			{
				Name:    "grouprole_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[2]},
			},
			{
				Name:    "grouprole_group_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[1], NbGroupRoleColumns[2]},
			},
		},
	}
	// NbUserGroupColumns holds the columns for the "nb_user_group" table.
	NbUserGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "user id"},
		{Name: "group_id", Type: field.TypeString, Nullable: true, Size: 16, Comment: "group id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 16, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbUserGroupTable holds the schema information for the "nb_user_group" table.
	NbUserGroupTable = &schema.Table{
		Name:       "nb_user_group",
		Columns:    NbUserGroupColumns,
		PrimaryKey: []*schema.Column{NbUserGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usergroup_id",
				Unique:  true,
				Columns: []*schema.Column{NbUserGroupColumns[0]},
			},
			{
				Name:    "usergroup_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[1]},
			},
			{
				Name:    "usergroup_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[2]},
			},
			{
				Name:    "usergroup_user_id_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[1], NbUserGroupColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NbGroupTable,
		NbGroupRoleTable,
		NbUserGroupTable,
	}
)

func init() {
	NbGroupTable.Annotation = &entsql.Annotation{
		Table: "nb_group",
	}
	NbGroupRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_group_role",
	}
	NbUserGroupTable.Annotation = &entsql.Annotation{
		Table: "nb_user_group",
	}
}
