// Code generated by ent, DO NOT EDIT.

package asset

import (
	"stocms/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldName, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldPath, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldType, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldSize, v))
}

// Storage applies equality check predicate on the "storage" field. It's identical to StorageEQ.
func Storage(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldStorage, v))
}

// Bucket applies equality check predicate on the "bucket" field. It's identical to BucketEQ.
func Bucket(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldBucket, v))
}

// Endpoint applies equality check predicate on the "endpoint" field. It's identical to EndpointEQ.
func Endpoint(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldEndpoint, v))
}

// ObjectID applies equality check predicate on the "object_id" field. It's identical to ObjectIDEQ.
func ObjectID(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldObjectID, v))
}

// DomainID applies equality check predicate on the "domain_id" field. It's identical to DomainIDEQ.
func DomainID(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldDomainID, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldUpdatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldName, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldPath, v))
}

// PathIsNil applies the IsNil predicate on the "path" field.
func PathIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldPath))
}

// PathNotNil applies the NotNil predicate on the "path" field.
func PathNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldPath))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldPath, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldType, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...int64) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...int64) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v int64) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldSize, v))
}

// StorageEQ applies the EQ predicate on the "storage" field.
func StorageEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldStorage, v))
}

// StorageNEQ applies the NEQ predicate on the "storage" field.
func StorageNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldStorage, v))
}

// StorageIn applies the In predicate on the "storage" field.
func StorageIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldStorage, vs...))
}

// StorageNotIn applies the NotIn predicate on the "storage" field.
func StorageNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldStorage, vs...))
}

// StorageGT applies the GT predicate on the "storage" field.
func StorageGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldStorage, v))
}

// StorageGTE applies the GTE predicate on the "storage" field.
func StorageGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldStorage, v))
}

// StorageLT applies the LT predicate on the "storage" field.
func StorageLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldStorage, v))
}

// StorageLTE applies the LTE predicate on the "storage" field.
func StorageLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldStorage, v))
}

// StorageContains applies the Contains predicate on the "storage" field.
func StorageContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldStorage, v))
}

// StorageHasPrefix applies the HasPrefix predicate on the "storage" field.
func StorageHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldStorage, v))
}

// StorageHasSuffix applies the HasSuffix predicate on the "storage" field.
func StorageHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldStorage, v))
}

// StorageIsNil applies the IsNil predicate on the "storage" field.
func StorageIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldStorage))
}

// StorageNotNil applies the NotNil predicate on the "storage" field.
func StorageNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldStorage))
}

// StorageEqualFold applies the EqualFold predicate on the "storage" field.
func StorageEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldStorage, v))
}

// StorageContainsFold applies the ContainsFold predicate on the "storage" field.
func StorageContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldStorage, v))
}

// BucketEQ applies the EQ predicate on the "bucket" field.
func BucketEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldBucket, v))
}

// BucketNEQ applies the NEQ predicate on the "bucket" field.
func BucketNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldBucket, v))
}

// BucketIn applies the In predicate on the "bucket" field.
func BucketIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldBucket, vs...))
}

// BucketNotIn applies the NotIn predicate on the "bucket" field.
func BucketNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldBucket, vs...))
}

// BucketGT applies the GT predicate on the "bucket" field.
func BucketGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldBucket, v))
}

// BucketGTE applies the GTE predicate on the "bucket" field.
func BucketGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldBucket, v))
}

// BucketLT applies the LT predicate on the "bucket" field.
func BucketLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldBucket, v))
}

// BucketLTE applies the LTE predicate on the "bucket" field.
func BucketLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldBucket, v))
}

// BucketContains applies the Contains predicate on the "bucket" field.
func BucketContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldBucket, v))
}

// BucketHasPrefix applies the HasPrefix predicate on the "bucket" field.
func BucketHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldBucket, v))
}

// BucketHasSuffix applies the HasSuffix predicate on the "bucket" field.
func BucketHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldBucket, v))
}

// BucketIsNil applies the IsNil predicate on the "bucket" field.
func BucketIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldBucket))
}

// BucketNotNil applies the NotNil predicate on the "bucket" field.
func BucketNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldBucket))
}

// BucketEqualFold applies the EqualFold predicate on the "bucket" field.
func BucketEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldBucket, v))
}

// BucketContainsFold applies the ContainsFold predicate on the "bucket" field.
func BucketContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldBucket, v))
}

// EndpointEQ applies the EQ predicate on the "endpoint" field.
func EndpointEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldEndpoint, v))
}

// EndpointNEQ applies the NEQ predicate on the "endpoint" field.
func EndpointNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldEndpoint, v))
}

// EndpointIn applies the In predicate on the "endpoint" field.
func EndpointIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldEndpoint, vs...))
}

// EndpointNotIn applies the NotIn predicate on the "endpoint" field.
func EndpointNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldEndpoint, vs...))
}

// EndpointGT applies the GT predicate on the "endpoint" field.
func EndpointGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldEndpoint, v))
}

// EndpointGTE applies the GTE predicate on the "endpoint" field.
func EndpointGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldEndpoint, v))
}

// EndpointLT applies the LT predicate on the "endpoint" field.
func EndpointLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldEndpoint, v))
}

// EndpointLTE applies the LTE predicate on the "endpoint" field.
func EndpointLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldEndpoint, v))
}

// EndpointContains applies the Contains predicate on the "endpoint" field.
func EndpointContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldEndpoint, v))
}

// EndpointHasPrefix applies the HasPrefix predicate on the "endpoint" field.
func EndpointHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldEndpoint, v))
}

// EndpointHasSuffix applies the HasSuffix predicate on the "endpoint" field.
func EndpointHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldEndpoint, v))
}

// EndpointIsNil applies the IsNil predicate on the "endpoint" field.
func EndpointIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldEndpoint))
}

// EndpointNotNil applies the NotNil predicate on the "endpoint" field.
func EndpointNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldEndpoint))
}

// EndpointEqualFold applies the EqualFold predicate on the "endpoint" field.
func EndpointEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldEndpoint, v))
}

// EndpointContainsFold applies the ContainsFold predicate on the "endpoint" field.
func EndpointContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldEndpoint, v))
}

// ObjectIDEQ applies the EQ predicate on the "object_id" field.
func ObjectIDEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldObjectID, v))
}

// ObjectIDNEQ applies the NEQ predicate on the "object_id" field.
func ObjectIDNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldObjectID, v))
}

// ObjectIDIn applies the In predicate on the "object_id" field.
func ObjectIDIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldObjectID, vs...))
}

// ObjectIDNotIn applies the NotIn predicate on the "object_id" field.
func ObjectIDNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldObjectID, vs...))
}

// ObjectIDGT applies the GT predicate on the "object_id" field.
func ObjectIDGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldObjectID, v))
}

// ObjectIDGTE applies the GTE predicate on the "object_id" field.
func ObjectIDGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldObjectID, v))
}

// ObjectIDLT applies the LT predicate on the "object_id" field.
func ObjectIDLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldObjectID, v))
}

// ObjectIDLTE applies the LTE predicate on the "object_id" field.
func ObjectIDLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldObjectID, v))
}

// ObjectIDContains applies the Contains predicate on the "object_id" field.
func ObjectIDContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldObjectID, v))
}

// ObjectIDHasPrefix applies the HasPrefix predicate on the "object_id" field.
func ObjectIDHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldObjectID, v))
}

// ObjectIDHasSuffix applies the HasSuffix predicate on the "object_id" field.
func ObjectIDHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldObjectID, v))
}

// ObjectIDIsNil applies the IsNil predicate on the "object_id" field.
func ObjectIDIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldObjectID))
}

// ObjectIDNotNil applies the NotNil predicate on the "object_id" field.
func ObjectIDNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldObjectID))
}

// ObjectIDEqualFold applies the EqualFold predicate on the "object_id" field.
func ObjectIDEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldObjectID, v))
}

// ObjectIDContainsFold applies the ContainsFold predicate on the "object_id" field.
func ObjectIDContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldObjectID, v))
}

// DomainIDEQ applies the EQ predicate on the "domain_id" field.
func DomainIDEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldDomainID, v))
}

// DomainIDNEQ applies the NEQ predicate on the "domain_id" field.
func DomainIDNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldDomainID, v))
}

// DomainIDIn applies the In predicate on the "domain_id" field.
func DomainIDIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldDomainID, vs...))
}

// DomainIDNotIn applies the NotIn predicate on the "domain_id" field.
func DomainIDNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldDomainID, vs...))
}

// DomainIDGT applies the GT predicate on the "domain_id" field.
func DomainIDGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldDomainID, v))
}

// DomainIDGTE applies the GTE predicate on the "domain_id" field.
func DomainIDGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldDomainID, v))
}

// DomainIDLT applies the LT predicate on the "domain_id" field.
func DomainIDLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldDomainID, v))
}

// DomainIDLTE applies the LTE predicate on the "domain_id" field.
func DomainIDLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldDomainID, v))
}

// DomainIDContains applies the Contains predicate on the "domain_id" field.
func DomainIDContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldDomainID, v))
}

// DomainIDHasPrefix applies the HasPrefix predicate on the "domain_id" field.
func DomainIDHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldDomainID, v))
}

// DomainIDHasSuffix applies the HasSuffix predicate on the "domain_id" field.
func DomainIDHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldDomainID, v))
}

// DomainIDIsNil applies the IsNil predicate on the "domain_id" field.
func DomainIDIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldDomainID))
}

// DomainIDNotNil applies the NotNil predicate on the "domain_id" field.
func DomainIDNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldDomainID))
}

// DomainIDEqualFold applies the EqualFold predicate on the "domain_id" field.
func DomainIDEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldDomainID, v))
}

// DomainIDContainsFold applies the ContainsFold predicate on the "domain_id" field.
func DomainIDContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldDomainID, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldExtras))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Asset {
	return predicate.Asset(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Asset {
	return predicate.Asset(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Asset {
	return predicate.Asset(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Asset {
	return predicate.Asset(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Asset {
	return predicate.Asset(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Asset) predicate.Asset {
	return predicate.Asset(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Asset) predicate.Asset {
	return predicate.Asset(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Asset) predicate.Asset {
	return predicate.Asset(sql.NotPredicates(p))
}
