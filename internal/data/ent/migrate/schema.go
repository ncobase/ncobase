// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ScAuthTokenColumns holds the columns for the "sc_auth_token" table.
	ScAuthTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "user id"},
	}
	// ScAuthTokenTable holds the schema information for the "sc_auth_token" table.
	ScAuthTokenTable = &schema.Table{
		Name:       "sc_auth_token",
		Columns:    ScAuthTokenColumns,
		PrimaryKey: []*schema.Column{ScAuthTokenColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "authtoken_id",
				Unique:  false,
				Columns: []*schema.Column{ScAuthTokenColumns[0]},
			},
			{
				Name:    "authtoken_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScAuthTokenColumns[4]},
			},
		},
	}
	// ScCasbinRuleColumns holds the columns for the "sc_casbin_rule" table.
	ScCasbinRuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "p_type", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v0", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v1", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v2", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v3", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v4", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "v5", Type: field.TypeString, Nullable: true, Size: 255},
	}
	// ScCasbinRuleTable holds the schema information for the "sc_casbin_rule" table.
	ScCasbinRuleTable = &schema.Table{
		Name:       "sc_casbin_rule",
		Columns:    ScCasbinRuleColumns,
		PrimaryKey: []*schema.Column{ScCasbinRuleColumns[0]},
	}
	// ScCodeAuthColumns holds the columns for the "sc_code_auth" table.
	ScCodeAuthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "code", Type: field.TypeString, Nullable: true, Comment: "code"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "logged", Type: field.TypeBool, Nullable: true, Comment: "is logged"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScCodeAuthTable holds the schema information for the "sc_code_auth" table.
	ScCodeAuthTable = &schema.Table{
		Name:       "sc_code_auth",
		Columns:    ScCodeAuthColumns,
		PrimaryKey: []*schema.Column{ScCodeAuthColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "codeauth_id",
				Unique:  false,
				Columns: []*schema.Column{ScCodeAuthColumns[0]},
			},
			{
				Name:    "codeauth_code",
				Unique:  false,
				Columns: []*schema.Column{ScCodeAuthColumns[1]},
			},
		},
	}
	// ScDomainColumns holds the columns for the "sc_domain" table.
	ScDomainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url, website / link..."},
		{Name: "logo", Type: field.TypeString, Nullable: true, Comment: "logo"},
		{Name: "logo_alt", Type: field.TypeString, Nullable: true, Comment: "logo alt"},
		{Name: "keywords", Type: field.TypeString, Nullable: true, Comment: "keywords"},
		{Name: "copyright", Type: field.TypeString, Nullable: true, Comment: "copyright"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "order", Type: field.TypeInt32, Comment: "display order", Default: 99},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScDomainTable holds the schema information for the "sc_domain" table.
	ScDomainTable = &schema.Table{
		Name:       "sc_domain",
		Columns:    ScDomainColumns,
		PrimaryKey: []*schema.Column{ScDomainColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScDomainColumns[0]},
			},
		},
	}
	// ScGroupColumns holds the columns for the "sc_group" table.
	ScGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "leader", Type: field.TypeJSON, Nullable: true, Comment: "Leader information, e.g., {id: '', name: '', avatar: '', url: '', email: '', ip: ''}"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "parent id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScGroupTable holds the schema information for the "sc_group" table.
	ScGroupTable = &schema.Table{
		Name:       "sc_group",
		Columns:    ScGroupColumns,
		PrimaryKey: []*schema.Column{ScGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "group_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupColumns[0]},
			},
			{
				Name:    "group_slug",
				Unique:  false,
				Columns: []*schema.Column{ScGroupColumns[2]},
			},
			{
				Name:    "group_parent_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupColumns[7]},
			},
			{
				Name:    "group_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupColumns[8]},
			},
		},
	}
	// ScGroupRoleColumns holds the columns for the "sc_group_role" table.
	ScGroupRoleColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeString, Unique: true, Comment: "group primary key alias"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// ScGroupRoleTable holds the schema information for the "sc_group_role" table.
	ScGroupRoleTable = &schema.Table{
		Name:       "sc_group_role",
		Columns:    ScGroupRoleColumns,
		PrimaryKey: []*schema.Column{ScGroupRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "grouprole_group_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupRoleColumns[0]},
			},
			{
				Name:    "grouprole_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupRoleColumns[1]},
			},
			{
				Name:    "grouprole_group_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScGroupRoleColumns[0], ScGroupRoleColumns[1]},
			},
		},
	}
	// ScModuleColumns holds the columns for the "sc_module" table.
	ScModuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content, big text"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "temp", Type: field.TypeBool, Nullable: true, Comment: "is temp"},
		{Name: "markdown", Type: field.TypeBool, Nullable: true, Comment: "is markdown"},
		{Name: "private", Type: field.TypeBool, Nullable: true, Comment: "is private"},
		{Name: "status", Type: field.TypeInt32, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "released", Type: field.TypeTime, Nullable: true, Comment: "released"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScModuleTable holds the schema information for the "sc_module" table.
	ScModuleTable = &schema.Table{
		Name:       "sc_module",
		Columns:    ScModuleColumns,
		PrimaryKey: []*schema.Column{ScModuleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "module_id",
				Unique:  false,
				Columns: []*schema.Column{ScModuleColumns[0]},
			},
			{
				Name:    "module_slug",
				Unique:  false,
				Columns: []*schema.Column{ScModuleColumns[3]},
			},
		},
	}
	// ScOauthUserColumns holds the columns for the "sc_oauth_user" table.
	ScOauthUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "oauth_id", Type: field.TypeString, Nullable: true, Comment: "oauth id"},
		{Name: "access_token", Type: field.TypeString, Comment: "access token"},
		{Name: "provider", Type: field.TypeString, Nullable: true, Comment: "provider"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "user id"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScOauthUserTable holds the schema information for the "sc_oauth_user" table.
	ScOauthUserTable = &schema.Table{
		Name:       "sc_oauth_user",
		Columns:    ScOauthUserColumns,
		PrimaryKey: []*schema.Column{ScOauthUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthuser_id",
				Unique:  false,
				Columns: []*schema.Column{ScOauthUserColumns[0]},
			},
			{
				Name:    "oauthuser_oauth_id",
				Unique:  false,
				Columns: []*schema.Column{ScOauthUserColumns[1]},
			},
			{
				Name:    "oauthuser_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScOauthUserColumns[4]},
			},
		},
	}
	// ScPermissionColumns holds the columns for the "sc_permission" table.
	ScPermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "action", Type: field.TypeString, Nullable: true, Comment: "action"},
		{Name: "subject", Type: field.TypeString, Nullable: true, Comment: "subject"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "default", Type: field.TypeBool, Nullable: true, Comment: "is default"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScPermissionTable holds the schema information for the "sc_permission" table.
	ScPermissionTable = &schema.Table{
		Name:       "sc_permission",
		Columns:    ScPermissionColumns,
		PrimaryKey: []*schema.Column{ScPermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "permission_id",
				Unique:  false,
				Columns: []*schema.Column{ScPermissionColumns[0]},
			},
			{
				Name:    "permission_action_subject",
				Unique:  false,
				Columns: []*schema.Column{ScPermissionColumns[2], ScPermissionColumns[3]},
			},
		},
	}
	// ScResourceColumns holds the columns for the "sc_resource" table.
	ScResourceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Unique: true, Nullable: true, Comment: "name"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "path"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "size", Type: field.TypeInt64, Comment: "size in bytes", Default: 0},
		{Name: "storage", Type: field.TypeString, Nullable: true, Comment: "storage type"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url, website / link..."},
		{Name: "object_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "object id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScResourceTable holds the schema information for the "sc_resource" table.
	ScResourceTable = &schema.Table{
		Name:       "sc_resource",
		Columns:    ScResourceColumns,
		PrimaryKey: []*schema.Column{ScResourceColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "resource_id",
				Unique:  false,
				Columns: []*schema.Column{ScResourceColumns[0]},
			},
			{
				Name:    "resource_name",
				Unique:  true,
				Columns: []*schema.Column{ScResourceColumns[1]},
			},
			{
				Name:    "resource_object_id",
				Unique:  false,
				Columns: []*schema.Column{ScResourceColumns[7]},
			},
			{
				Name:    "resource_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScResourceColumns[8]},
			},
		},
	}
	// ScRoleColumns holds the columns for the "sc_role" table.
	ScRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScRoleTable holds the schema information for the "sc_role" table.
	ScRoleTable = &schema.Table{
		Name:       "sc_role",
		Columns:    ScRoleColumns,
		PrimaryKey: []*schema.Column{ScRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_id",
				Unique:  false,
				Columns: []*schema.Column{ScRoleColumns[0]},
			},
			{
				Name:    "role_slug",
				Unique:  false,
				Columns: []*schema.Column{ScRoleColumns[2]},
			},
		},
	}
	// ScRolePermissionColumns holds the columns for the "sc_role_permission" table.
	ScRolePermissionColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeString, Unique: true, Comment: "role primary key alias"},
		{Name: "permission_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "permission id"},
	}
	// ScRolePermissionTable holds the schema information for the "sc_role_permission" table.
	ScRolePermissionTable = &schema.Table{
		Name:       "sc_role_permission",
		Columns:    ScRolePermissionColumns,
		PrimaryKey: []*schema.Column{ScRolePermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScRolePermissionColumns[0]},
			},
			{
				Name:    "rolepermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{ScRolePermissionColumns[1]},
			},
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  false,
				Columns: []*schema.Column{ScRolePermissionColumns[0], ScRolePermissionColumns[1]},
			},
		},
	}
	// ScTaxonomyColumns holds the columns for the "sc_taxonomy" table.
	ScTaxonomyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "cover", Type: field.TypeString, Nullable: true, Comment: "cover"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "color", Type: field.TypeString, Nullable: true, Comment: "color"},
		{Name: "icon", Type: field.TypeString, Nullable: true, Comment: "icon"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url, website / link..."},
		{Name: "keywords", Type: field.TypeString, Nullable: true, Comment: "keywords"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "status", Type: field.TypeInt32, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "parent id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScTaxonomyTable holds the schema information for the "sc_taxonomy" table.
	ScTaxonomyTable = &schema.Table{
		Name:       "sc_taxonomy",
		Columns:    ScTaxonomyColumns,
		PrimaryKey: []*schema.Column{ScTaxonomyColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taxonomy_id",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyColumns[0]},
			},
			{
				Name:    "taxonomy_slug",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyColumns[3]},
			},
			{
				Name:    "taxonomy_parent_id",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyColumns[13]},
			},
			{
				Name:    "taxonomy_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyColumns[14]},
			},
		},
	}
	// ScTaxonomyRelationColumns holds the columns for the "sc_taxonomy_relation" table.
	ScTaxonomyRelationColumns = []*schema.Column{
		{Name: "object_id", Type: field.TypeString, Unique: true, Comment: "object primary key alias"},
		{Name: "taxonomy_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "taxonomy id"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "order", Type: field.TypeInt32, Comment: "display order", Default: 99},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
	}
	// ScTaxonomyRelationTable holds the schema information for the "sc_taxonomy_relation" table.
	ScTaxonomyRelationTable = &schema.Table{
		Name:       "sc_taxonomy_relation",
		Columns:    ScTaxonomyRelationColumns,
		PrimaryKey: []*schema.Column{ScTaxonomyRelationColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taxonomyrelation_object_id",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyRelationColumns[0]},
			},
			{
				Name:    "taxonomyrelation_taxonomy_id",
				Unique:  false,
				Columns: []*schema.Column{ScTaxonomyRelationColumns[1]},
			},
		},
	}
	// ScTopicColumns holds the columns for the "sc_topic" table.
	ScTopicColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content, big text"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "temp", Type: field.TypeBool, Nullable: true, Comment: "is temp"},
		{Name: "markdown", Type: field.TypeBool, Nullable: true, Comment: "is markdown"},
		{Name: "private", Type: field.TypeBool, Nullable: true, Comment: "is private"},
		{Name: "status", Type: field.TypeInt32, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "released", Type: field.TypeTime, Nullable: true, Comment: "released"},
		{Name: "taxonomy_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "taxonomy id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "ID of the person who last updated the entity"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScTopicTable holds the schema information for the "sc_topic" table.
	ScTopicTable = &schema.Table{
		Name:       "sc_topic",
		Columns:    ScTopicColumns,
		PrimaryKey: []*schema.Column{ScTopicColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "topic_id",
				Unique:  false,
				Columns: []*schema.Column{ScTopicColumns[0]},
			},
			{
				Name:    "topic_slug",
				Unique:  false,
				Columns: []*schema.Column{ScTopicColumns[3]},
			},
			{
				Name:    "topic_taxonomy_id",
				Unique:  false,
				Columns: []*schema.Column{ScTopicColumns[11]},
			},
			{
				Name:    "topic_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScTopicColumns[12]},
			},
		},
	}
	// ScUserColumns holds the columns for the "sc_user" table.
	ScUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "primary key"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Size: 50, Comment: "username"},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Comment: "phone"},
		{Name: "is_certified", Type: field.TypeBool, Nullable: true, Comment: "is certified"},
		{Name: "is_admin", Type: field.TypeBool, Nullable: true, Comment: "is a superuser"},
		{Name: "status", Type: field.TypeInt32, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// ScUserTable holds the schema information for the "sc_user" table.
	ScUserTable = &schema.Table{
		Name:       "sc_user",
		Columns:    ScUserColumns,
		PrimaryKey: []*schema.Column{ScUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserColumns[0]},
			},
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{ScUserColumns[1]},
			},
		},
	}
	// ScUserDomainColumns holds the columns for the "sc_user_domain" table.
	ScUserDomainColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
	}
	// ScUserDomainTable holds the schema information for the "sc_user_domain" table.
	ScUserDomainTable = &schema.Table{
		Name:       "sc_user_domain",
		Columns:    ScUserDomainColumns,
		PrimaryKey: []*schema.Column{ScUserDomainColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userdomain_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainColumns[0]},
			},
			{
				Name:    "userdomain_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainColumns[1]},
			},
			{
				Name:    "userdomain_user_id_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainColumns[0], ScUserDomainColumns[1]},
			},
		},
	}
	// ScUserDomainRoleColumns holds the columns for the "sc_user_domain_role" table.
	ScUserDomainRoleColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// ScUserDomainRoleTable holds the schema information for the "sc_user_domain_role" table.
	ScUserDomainRoleTable = &schema.Table{
		Name:       "sc_user_domain_role",
		Columns:    ScUserDomainRoleColumns,
		PrimaryKey: []*schema.Column{ScUserDomainRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userdomainrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainRoleColumns[0]},
			},
			{
				Name:    "userdomainrole_domain_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainRoleColumns[1]},
			},
			{
				Name:    "userdomainrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainRoleColumns[2]},
			},
			{
				Name:    "userdomainrole_user_id_domain_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserDomainRoleColumns[0], ScUserDomainRoleColumns[1], ScUserDomainRoleColumns[2]},
			},
		},
	}
	// ScUserGroupColumns holds the columns for the "sc_user_group" table.
	ScUserGroupColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "group_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "group id"},
	}
	// ScUserGroupTable holds the schema information for the "sc_user_group" table.
	ScUserGroupTable = &schema.Table{
		Name:       "sc_user_group",
		Columns:    ScUserGroupColumns,
		PrimaryKey: []*schema.Column{ScUserGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usergroup_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserGroupColumns[0]},
			},
			{
				Name:    "usergroup_group_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserGroupColumns[1]},
			},
			{
				Name:    "usergroup_user_id_group_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserGroupColumns[0], ScUserGroupColumns[1]},
			},
		},
	}
	// ScUserProfileColumns holds the columns for the "sc_user_profile" table.
	ScUserProfileColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Comment: "display name"},
		{Name: "short_bio", Type: field.TypeString, Nullable: true, Comment: "short bio"},
		{Name: "about", Type: field.TypeString, Nullable: true, Comment: "about"},
		{Name: "links", Type: field.TypeJSON, Nullable: true, Comment: "List of social links or profile links"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
	}
	// ScUserProfileTable holds the schema information for the "sc_user_profile" table.
	ScUserProfileTable = &schema.Table{
		Name:       "sc_user_profile",
		Columns:    ScUserProfileColumns,
		PrimaryKey: []*schema.Column{ScUserProfileColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userprofile_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserProfileColumns[0]},
			},
		},
	}
	// ScUserRoleColumns holds the columns for the "sc_user_role" table.
	ScUserRoleColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// ScUserRoleTable holds the schema information for the "sc_user_role" table.
	ScUserRoleTable = &schema.Table{
		Name:       "sc_user_role",
		Columns:    ScUserRoleColumns,
		PrimaryKey: []*schema.Column{ScUserRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserRoleColumns[0]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserRoleColumns[1]},
			},
			{
				Name:    "userrole_user_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{ScUserRoleColumns[0], ScUserRoleColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ScAuthTokenTable,
		ScCasbinRuleTable,
		ScCodeAuthTable,
		ScDomainTable,
		ScGroupTable,
		ScGroupRoleTable,
		ScModuleTable,
		ScOauthUserTable,
		ScPermissionTable,
		ScResourceTable,
		ScRoleTable,
		ScRolePermissionTable,
		ScTaxonomyTable,
		ScTaxonomyRelationTable,
		ScTopicTable,
		ScUserTable,
		ScUserDomainTable,
		ScUserDomainRoleTable,
		ScUserGroupTable,
		ScUserProfileTable,
		ScUserRoleTable,
	}
)

func init() {
	ScAuthTokenTable.Annotation = &entsql.Annotation{
		Table: "sc_auth_token",
	}
	ScCasbinRuleTable.Annotation = &entsql.Annotation{
		Table: "sc_casbin_rule",
	}
	ScCodeAuthTable.Annotation = &entsql.Annotation{
		Table: "sc_code_auth",
	}
	ScDomainTable.Annotation = &entsql.Annotation{
		Table: "sc_domain",
	}
	ScGroupTable.Annotation = &entsql.Annotation{
		Table: "sc_group",
	}
	ScGroupRoleTable.Annotation = &entsql.Annotation{
		Table: "sc_group_role",
	}
	ScModuleTable.Annotation = &entsql.Annotation{
		Table: "sc_module",
	}
	ScOauthUserTable.Annotation = &entsql.Annotation{
		Table: "sc_oauth_user",
	}
	ScPermissionTable.Annotation = &entsql.Annotation{
		Table: "sc_permission",
	}
	ScResourceTable.Annotation = &entsql.Annotation{
		Table: "sc_resource",
	}
	ScRoleTable.Annotation = &entsql.Annotation{
		Table: "sc_role",
	}
	ScRolePermissionTable.Annotation = &entsql.Annotation{
		Table: "sc_role_permission",
	}
	ScTaxonomyTable.Annotation = &entsql.Annotation{
		Table: "sc_taxonomy",
	}
	ScTaxonomyRelationTable.Annotation = &entsql.Annotation{
		Table: "sc_taxonomy_relation",
	}
	ScTopicTable.Annotation = &entsql.Annotation{
		Table: "sc_topic",
	}
	ScUserTable.Annotation = &entsql.Annotation{
		Table: "sc_user",
	}
	ScUserDomainTable.Annotation = &entsql.Annotation{
		Table: "sc_user_domain",
	}
	ScUserDomainRoleTable.Annotation = &entsql.Annotation{
		Table: "sc_user_domain_role",
	}
	ScUserGroupTable.Annotation = &entsql.Annotation{
		Table: "sc_user_group",
	}
	ScUserProfileTable.Annotation = &entsql.Annotation{
		Table: "sc_user_profile",
	}
	ScUserRoleTable.Annotation = &entsql.Annotation{
		Table: "sc_user_role",
	}
}
