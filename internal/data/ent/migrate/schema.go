// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NbAssetColumns holds the columns for the "nb_asset" table.
	NbAssetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Unique: true, Nullable: true, Comment: "name"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "path"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "size", Type: field.TypeInt, Comment: "size in bytes", Default: 0},
		{Name: "storage", Type: field.TypeString, Nullable: true, Comment: "storage type"},
		{Name: "bucket", Type: field.TypeString, Nullable: true, Comment: "bucket"},
		{Name: "endpoint", Type: field.TypeString, Nullable: true, Comment: "endpoint"},
		{Name: "object_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "object id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbAssetTable holds the schema information for the "nb_asset" table.
	NbAssetTable = &schema.Table{
		Name:       "nb_asset",
		Columns:    NbAssetColumns,
		PrimaryKey: []*schema.Column{NbAssetColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "asset_id",
				Unique:  true,
				Columns: []*schema.Column{NbAssetColumns[0]},
			},
			{
				Name:    "asset_name",
				Unique:  true,
				Columns: []*schema.Column{NbAssetColumns[1]},
			},
			{
				Name:    "asset_object_id",
				Unique:  false,
				Columns: []*schema.Column{NbAssetColumns[8]},
			},
			{
				Name:    "asset_domain_id",
				Unique:  false,
				Columns: []*schema.Column{NbAssetColumns[9]},
			},
		},
	}
	// NbAuthTokenColumns holds the columns for the "nb_auth_token" table.
	NbAuthTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "user id"},
	}
	// NbAuthTokenTable holds the schema information for the "nb_auth_token" table.
	NbAuthTokenTable = &schema.Table{
		Name:       "nb_auth_token",
		Columns:    NbAuthTokenColumns,
		PrimaryKey: []*schema.Column{NbAuthTokenColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "authtoken_id",
				Unique:  true,
				Columns: []*schema.Column{NbAuthTokenColumns[0]},
			},
			{
				Name:    "authtoken_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbAuthTokenColumns[4]},
			},
		},
	}
	// NbCasbinRuleColumns holds the columns for the "nb_casbin_rule" table.
	NbCasbinRuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "p_type", Type: field.TypeString, Nullable: true, Comment: "permission type"},
		{Name: "v0", Type: field.TypeString, Nullable: true, Comment: "version 0"},
		{Name: "v1", Type: field.TypeString, Nullable: true, Comment: "version 1"},
		{Name: "v2", Type: field.TypeString, Nullable: true, Comment: "version 2"},
		{Name: "v3", Type: field.TypeString, Nullable: true, Comment: "version 3"},
		{Name: "v4", Type: field.TypeString, Nullable: true, Comment: "version 4"},
		{Name: "v5", Type: field.TypeString, Nullable: true, Comment: "version 5"},
	}
	// NbCasbinRuleTable holds the schema information for the "nb_casbin_rule" table.
	NbCasbinRuleTable = &schema.Table{
		Name:       "nb_casbin_rule",
		Columns:    NbCasbinRuleColumns,
		PrimaryKey: []*schema.Column{NbCasbinRuleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "casbinrule_id",
				Unique:  true,
				Columns: []*schema.Column{NbCasbinRuleColumns[0]},
			},
		},
	}
	// NbCodeAuthColumns holds the columns for the "nb_code_auth" table.
	NbCodeAuthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "code", Type: field.TypeString, Nullable: true, Comment: "code"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "logged", Type: field.TypeBool, Nullable: true, Comment: "is logged", Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbCodeAuthTable holds the schema information for the "nb_code_auth" table.
	NbCodeAuthTable = &schema.Table{
		Name:       "nb_code_auth",
		Columns:    NbCodeAuthColumns,
		PrimaryKey: []*schema.Column{NbCodeAuthColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "codeauth_id",
				Unique:  true,
				Columns: []*schema.Column{NbCodeAuthColumns[0]},
			},
			{
				Name:    "codeauth_code",
				Unique:  false,
				Columns: []*schema.Column{NbCodeAuthColumns[1]},
			},
		},
	}
	// NbDomainColumns holds the columns for the "nb_domain" table.
	NbDomainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url, website / link..."},
		{Name: "logo", Type: field.TypeString, Nullable: true, Comment: "logo"},
		{Name: "logo_alt", Type: field.TypeString, Nullable: true, Comment: "logo alt"},
		{Name: "keywords", Type: field.TypeString, Nullable: true, Comment: "keywords"},
		{Name: "copyright", Type: field.TypeString, Nullable: true, Comment: "copyright"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "order", Type: field.TypeInt, Comment: "display order", Default: 0},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the creator"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbDomainTable holds the schema information for the "nb_domain" table.
	NbDomainTable = &schema.Table{
		Name:       "nb_domain",
		Columns:    NbDomainColumns,
		PrimaryKey: []*schema.Column{NbDomainColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "domain_id",
				Unique:  true,
				Columns: []*schema.Column{NbDomainColumns[0]},
			},
		},
	}
	// NbGroupColumns holds the columns for the "nb_group" table.
	NbGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "leader", Type: field.TypeJSON, Nullable: true, Comment: "Leader information, e.g., {id: '', name: '', avatar: '', url: '', email: '', ip: ''}"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "parent id"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbGroupTable holds the schema information for the "nb_group" table.
	NbGroupTable = &schema.Table{
		Name:       "nb_group",
		Columns:    NbGroupColumns,
		PrimaryKey: []*schema.Column{NbGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "group_id",
				Unique:  true,
				Columns: []*schema.Column{NbGroupColumns[0]},
			},
			{
				Name:    "group_slug",
				Unique:  true,
				Columns: []*schema.Column{NbGroupColumns[2]},
			},
			{
				Name:    "group_parent_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupColumns[7]},
			},
			{
				Name:    "group_domain_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupColumns[8]},
			},
		},
	}
	// NbGroupRoleColumns holds the columns for the "nb_group_role" table.
	NbGroupRoleColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeString, Unique: true, Comment: "group primary key alias"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// NbGroupRoleTable holds the schema information for the "nb_group_role" table.
	NbGroupRoleTable = &schema.Table{
		Name:       "nb_group_role",
		Columns:    NbGroupRoleColumns,
		PrimaryKey: []*schema.Column{NbGroupRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "grouprole_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[0]},
			},
			{
				Name:    "grouprole_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[1]},
			},
			{
				Name:    "grouprole_group_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbGroupRoleColumns[0], NbGroupRoleColumns[1]},
			},
		},
	}
	// NbOauthUserColumns holds the columns for the "nb_oauth_user" table.
	NbOauthUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "oauth_id", Type: field.TypeString, Nullable: true, Comment: "oauth id"},
		{Name: "access_token", Type: field.TypeString, Comment: "access token"},
		{Name: "provider", Type: field.TypeString, Nullable: true, Comment: "provider"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "user id"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbOauthUserTable holds the schema information for the "nb_oauth_user" table.
	NbOauthUserTable = &schema.Table{
		Name:       "nb_oauth_user",
		Columns:    NbOauthUserColumns,
		PrimaryKey: []*schema.Column{NbOauthUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthuser_id",
				Unique:  true,
				Columns: []*schema.Column{NbOauthUserColumns[0]},
			},
			{
				Name:    "oauthuser_oauth_id",
				Unique:  false,
				Columns: []*schema.Column{NbOauthUserColumns[1]},
			},
			{
				Name:    "oauthuser_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbOauthUserColumns[4]},
			},
		},
	}
	// NbPermissionColumns holds the columns for the "nb_permission" table.
	NbPermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "action", Type: field.TypeString, Nullable: true, Comment: "action"},
		{Name: "subject", Type: field.TypeString, Nullable: true, Comment: "subject"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "default", Type: field.TypeBool, Nullable: true, Comment: "is default", Default: false},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbPermissionTable holds the schema information for the "nb_permission" table.
	NbPermissionTable = &schema.Table{
		Name:       "nb_permission",
		Columns:    NbPermissionColumns,
		PrimaryKey: []*schema.Column{NbPermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "permission_id",
				Unique:  true,
				Columns: []*schema.Column{NbPermissionColumns[0]},
			},
			{
				Name:    "permission_action_subject",
				Unique:  false,
				Columns: []*schema.Column{NbPermissionColumns[2], NbPermissionColumns[3]},
			},
		},
	}
	// NbRoleColumns holds the columns for the "nb_role" table.
	NbRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "slug", Type: field.TypeString, Unique: true, Nullable: true, Comment: "slug / alias"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "description"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Size: 11, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbRoleTable holds the schema information for the "nb_role" table.
	NbRoleTable = &schema.Table{
		Name:       "nb_role",
		Columns:    NbRoleColumns,
		PrimaryKey: []*schema.Column{NbRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_id",
				Unique:  true,
				Columns: []*schema.Column{NbRoleColumns[0]},
			},
			{
				Name:    "role_slug",
				Unique:  true,
				Columns: []*schema.Column{NbRoleColumns[2]},
			},
		},
	}
	// NbRolePermissionColumns holds the columns for the "nb_role_permission" table.
	NbRolePermissionColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeString, Unique: true, Comment: "role primary key alias"},
		{Name: "permission_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "permission id"},
	}
	// NbRolePermissionTable holds the schema information for the "nb_role_permission" table.
	NbRolePermissionTable = &schema.Table{
		Name:       "nb_role_permission",
		Columns:    NbRolePermissionColumns,
		PrimaryKey: []*schema.Column{NbRolePermissionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[0]},
			},
			{
				Name:    "rolepermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[1]},
			},
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  false,
				Columns: []*schema.Column{NbRolePermissionColumns[0], NbRolePermissionColumns[1]},
			},
		},
	}
	// NbUserColumns holds the columns for the "nb_user" table.
	NbUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 11, Comment: "primary key"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Size: 50, Comment: "username"},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Comment: "phone"},
		{Name: "is_certified", Type: field.TypeBool, Nullable: true, Comment: "is certified", Default: false},
		{Name: "is_admin", Type: field.TypeBool, Nullable: true, Comment: "is admin", Default: false},
		{Name: "status", Type: field.TypeInt, Comment: "status: 0 activated, 1 unactivated, 2 disabled", Default: 0},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "updated at"},
	}
	// NbUserTable holds the schema information for the "nb_user" table.
	NbUserTable = &schema.Table{
		Name:       "nb_user",
		Columns:    NbUserColumns,
		PrimaryKey: []*schema.Column{NbUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  true,
				Columns: []*schema.Column{NbUserColumns[0]},
			},
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{NbUserColumns[1]},
			},
		},
	}
	// NbUserDomainColumns holds the columns for the "nb_user_domain" table.
	NbUserDomainColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
	}
	// NbUserDomainTable holds the schema information for the "nb_user_domain" table.
	NbUserDomainTable = &schema.Table{
		Name:       "nb_user_domain",
		Columns:    NbUserDomainColumns,
		PrimaryKey: []*schema.Column{NbUserDomainColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userdomain_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainColumns[0]},
			},
			{
				Name:    "userdomain_domain_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainColumns[1]},
			},
			{
				Name:    "userdomain_user_id_domain_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainColumns[0], NbUserDomainColumns[1]},
			},
		},
	}
	// NbUserDomainRoleColumns holds the columns for the "nb_user_domain_role" table.
	NbUserDomainRoleColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "domain_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "domain id"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// NbUserDomainRoleTable holds the schema information for the "nb_user_domain_role" table.
	NbUserDomainRoleTable = &schema.Table{
		Name:       "nb_user_domain_role",
		Columns:    NbUserDomainRoleColumns,
		PrimaryKey: []*schema.Column{NbUserDomainRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userdomainrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainRoleColumns[0]},
			},
			{
				Name:    "userdomainrole_domain_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainRoleColumns[1]},
			},
			{
				Name:    "userdomainrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainRoleColumns[2]},
			},
			{
				Name:    "userdomainrole_user_id_domain_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserDomainRoleColumns[0], NbUserDomainRoleColumns[1], NbUserDomainRoleColumns[2]},
			},
		},
	}
	// NbUserGroupColumns holds the columns for the "nb_user_group" table.
	NbUserGroupColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "group_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "group id"},
	}
	// NbUserGroupTable holds the schema information for the "nb_user_group" table.
	NbUserGroupTable = &schema.Table{
		Name:       "nb_user_group",
		Columns:    NbUserGroupColumns,
		PrimaryKey: []*schema.Column{NbUserGroupColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usergroup_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[0]},
			},
			{
				Name:    "usergroup_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[1]},
			},
			{
				Name:    "usergroup_user_id_group_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserGroupColumns[0], NbUserGroupColumns[1]},
			},
		},
	}
	// NbUserProfileColumns holds the columns for the "nb_user_profile" table.
	NbUserProfileColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Comment: "display name"},
		{Name: "short_bio", Type: field.TypeString, Nullable: true, Comment: "short bio"},
		{Name: "about", Type: field.TypeString, Nullable: true, Comment: "about"},
		{Name: "links", Type: field.TypeJSON, Nullable: true, Comment: "List of social links or profile links"},
		{Name: "thumbnail", Type: field.TypeString, Nullable: true, Comment: "thumbnail"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
	}
	// NbUserProfileTable holds the schema information for the "nb_user_profile" table.
	NbUserProfileTable = &schema.Table{
		Name:       "nb_user_profile",
		Columns:    NbUserProfileColumns,
		PrimaryKey: []*schema.Column{NbUserProfileColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userprofile_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserProfileColumns[0]},
			},
		},
	}
	// NbUserRoleColumns holds the columns for the "nb_user_role" table.
	NbUserRoleColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Unique: true, Comment: "user primary key alias"},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Size: 11, Comment: "role id"},
	}
	// NbUserRoleTable holds the schema information for the "nb_user_role" table.
	NbUserRoleTable = &schema.Table{
		Name:       "nb_user_role",
		Columns:    NbUserRoleColumns,
		PrimaryKey: []*schema.Column{NbUserRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[0]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[1]},
			},
			{
				Name:    "userrole_user_id_role_id",
				Unique:  false,
				Columns: []*schema.Column{NbUserRoleColumns[0], NbUserRoleColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NbAssetTable,
		NbAuthTokenTable,
		NbCasbinRuleTable,
		NbCodeAuthTable,
		NbDomainTable,
		NbGroupTable,
		NbGroupRoleTable,
		NbOauthUserTable,
		NbPermissionTable,
		NbRoleTable,
		NbRolePermissionTable,
		NbUserTable,
		NbUserDomainTable,
		NbUserDomainRoleTable,
		NbUserGroupTable,
		NbUserProfileTable,
		NbUserRoleTable,
	}
)

func init() {
	NbAssetTable.Annotation = &entsql.Annotation{
		Table: "nb_asset",
	}
	NbAuthTokenTable.Annotation = &entsql.Annotation{
		Table: "nb_auth_token",
	}
	NbCasbinRuleTable.Annotation = &entsql.Annotation{
		Table: "nb_casbin_rule",
	}
	NbCodeAuthTable.Annotation = &entsql.Annotation{
		Table: "nb_code_auth",
	}
	NbDomainTable.Annotation = &entsql.Annotation{
		Table: "nb_domain",
	}
	NbGroupTable.Annotation = &entsql.Annotation{
		Table: "nb_group",
	}
	NbGroupRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_group_role",
	}
	NbOauthUserTable.Annotation = &entsql.Annotation{
		Table: "nb_oauth_user",
	}
	NbPermissionTable.Annotation = &entsql.Annotation{
		Table: "nb_permission",
	}
	NbRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_role",
	}
	NbRolePermissionTable.Annotation = &entsql.Annotation{
		Table: "nb_role_permission",
	}
	NbUserTable.Annotation = &entsql.Annotation{
		Table: "nb_user",
	}
	NbUserDomainTable.Annotation = &entsql.Annotation{
		Table: "nb_user_domain",
	}
	NbUserDomainRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_user_domain_role",
	}
	NbUserGroupTable.Annotation = &entsql.Annotation{
		Table: "nb_user_group",
	}
	NbUserProfileTable.Annotation = &entsql.Annotation{
		Table: "nb_user_profile",
	}
	NbUserRoleTable.Annotation = &entsql.Annotation{
		Table: "nb_user_role",
	}
}
