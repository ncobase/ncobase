// Code generated by ent, DO NOT EDIT.

package userdomain

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the userdomain type in the database.
	Label = "user_domain"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "user_id"
	// FieldDomainID holds the string denoting the domain_id field in the database.
	FieldDomainID = "domain_id"
	// Table holds the table name of the userdomain in the database.
	Table = "nb_user_domain"
)

// Columns holds all SQL columns for userdomain fields.
var Columns = []string{
	FieldID,
	FieldDomainID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DomainIDValidator is a validator for the "domain_id" field. It is called by the builders before save.
	DomainIDValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// OrderOption defines the ordering options for the UserDomain queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDomainID orders the results by the domain_id field.
func ByDomainID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDomainID, opts...).ToFunc()
}
