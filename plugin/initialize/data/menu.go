package data

import (
	"fmt"
	"ncobase/system/structs"

	"github.com/ncobase/ncore/utils/convert"
)

// SystemDefaultMenus defines the system default menu structure
var SystemDefaultMenus = struct {
	Headers  []structs.MenuBody
	Sidebars []structs.MenuBody
	Submenus []structs.MenuBody
	Accounts []structs.MenuBody
	Tenants  []structs.MenuBody
}{
	Headers: []structs.MenuBody{
		{
			Name:     "Dashboard",
			Label:    "dashboard.navigation",
			Slug:     "dashboard",
			Type:     "header",
			Path:     "/dash",
			Icon:     "IconGauge",
			Perms:    "read:dashboard",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "System",
			Label:    "system.navigation",
			Slug:     "system",
			Type:     "header",
			Path:     "/system/group",
			Perms:    "read:system",
			Order:    convert.ToPointer(10),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "Content",
			Label:    "content.navigation",
			Slug:     "content",
			Type:     "header",
			Path:     "/content/topic",
			Perms:    "read:content",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		// // TBP (Transform, Bridge, Proxy) module
		// {
		// 	Name:     "TBP",
		// 	Label:    "tbp.navigation",
		// 	Slug:     "tbp",
		// 	Type:     "header",
		// 	Path:     "/tbp/endpoints",
		// 	Icon:     "IconRoute",
		// 	Perms:    "manage:tbp",
		// 	Order:    convert.ToPointer(85),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Real-time module
		// {
		// 	Name:     "Realtime",
		// 	Label:    "realtime.navigation",
		// 	Slug:     "realtime",
		// 	Type:     "header",
		// 	Path:     "/rt/notifications",
		// 	Icon:     "IconBell",
		// 	Perms:    "read:realtime",
		// 	Order:    convert.ToPointer(84),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Resources module
		// {
		// 	Name:     "Resources",
		// 	Label:    "resources.navigation",
		// 	Slug:     "resources",
		// 	Type:     "header",
		// 	Path:     "/res",
		// 	Icon:     "IconFiles",
		// 	Perms:    "read:resource",
		// 	Order:    convert.ToPointer(83),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Payment module
		// {
		// 	Name:     "Payment",
		// 	Label:    "payment.navigation",
		// 	Slug:     "payment",
		// 	Type:     "header",
		// 	Path:     "/pay/orders",
		// 	Icon:     "IconCreditCard",
		// 	Perms:    "read:payment",
		// 	Order:    convert.ToPointer(82),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Flow/Workflow module
		// {
		// 	Name:     "Workflow",
		// 	Label:    "workflow.navigation",
		// 	Slug:     "workflow",
		// 	Type:     "header",
		// 	Path:     "/flow/processes",
		// 	Icon:     "IconGitBranch",
		// 	Perms:    "read:workflow",
		// 	Order:    convert.ToPointer(81),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // System module
		// {
		// 	Name:     "System",
		// 	Label:    "system.navigation",
		// 	Slug:     "system",
		// 	Type:     "header",
		// 	Path:     "/system/tenants",
		// 	Icon:     "IconShield",
		// 	Perms:    "manage:system",
		// 	Order:    convert.ToPointer(80),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Organization module
		// {
		// 	Name:     "Organization",
		// 	Label:    "organization.navigation",
		// 	Slug:     "organization",
		// 	Type:     "header",
		// 	Path:     "/system/groups",
		// 	Icon:     "IconBuilding",
		// 	Perms:    "read:organization",
		// 	Order:    convert.ToPointer(79),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		// // Counter/Plugins module
		// {
		// 	Name:     "Plugins",
		// 	Label:    "plugins.navigation",
		// 	Slug:     "plugins",
		// 	Type:     "header",
		// 	Path:     "/plugin/counters",
		// 	Icon:     "IconPuzzle",
		// 	Perms:    "manage:plugins",
		// 	Order:    convert.ToPointer(77),
		// 	Hidden:   convert.ToPointer(false),
		// 	Disabled: convert.ToPointer(false),
		// },
		{
			Name:     "Builder",
			Label:    "builder.navigation",
			Slug:     "builder",
			Type:     "header",
			Path:     "/builder/form",
			Icon:     "IconAtom",
			Perms:    "manage:builder",
			Order:    convert.ToPointer(1),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "Example",
			Label:    "example.navigation",
			Slug:     "example",
			Type:     "header",
			Path:     "/example/card",
			Order:    convert.ToPointer(0),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
	},
	Sidebars: []structs.MenuBody{
		// System module sidebars
		{
			Name:     "Tenant",
			Label:    "system.tenant.navigation",
			Slug:     "system-tenant",
			Type:     "sidebar",
			Path:     "/system/tenant",
			Icon:     "IconBuildingCommunity",
			Perms:    "manage:tenant",
			Order:    convert.ToPointer(999),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Group",
			Label:    "system.group.navigation",
			Slug:     "system-group",
			Type:     "sidebar",
			Path:     "/system/group",
			Icon:     "IconBinaryTree2",
			Perms:    "read:group",
			Order:    convert.ToPointer(990),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "User",
			Label:    "system.user.navigation",
			Slug:     "system-user",
			Type:     "sidebar",
			Path:     "/system/user",
			Icon:     "IconUsers",
			Perms:    "read:user",
			Order:    convert.ToPointer(980),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Role",
			Label:    "system.role.navigation",
			Slug:     "system-role",
			Type:     "sidebar",
			Path:     "/system/role",
			Icon:     "IconUsersGroup",
			Perms:    "manage:role",
			Order:    convert.ToPointer(970),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Permission",
			Label:    "system.permission.navigation",
			Slug:     "system-permission",
			Type:     "sidebar",
			Path:     "/system/permission",
			Icon:     "IconLockAccess",
			Perms:    "manage:permission",
			Order:    convert.ToPointer(930),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Menu",
			Label:    "system.menu.navigation",
			Slug:     "system-menus",
			Type:     "sidebar",
			Path:     "/system/menu",
			Icon:     "IconMenu",
			Perms:    "manage:menu",
			Order:    convert.ToPointer(940),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Dictionary",
			Label:    "system.dictionary.navigation",
			Slug:     "system-dictionary",
			Type:     "sidebar",
			Path:     "/system/dictionary",
			Icon:     "IconVocabulary",
			Perms:    "read:dictionary",
			Order:    convert.ToPointer(910),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Basic",
			Label:    "system.basic.navigation",
			Slug:     "system-basic",
			Type:     "sidebar",
			Path:     "/system/basic",
			Icon:     "IconSettings2",
			Target:   "_self",
			Perms:    "manage:system",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "divide",
			Type:     "sidebar",
			Path:     "-",
			Order:    convert.ToPointer(920),
			Hidden:   convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "divide",
			Type:     "sidebar",
			Path:     "-",
			Order:    convert.ToPointer(950),
			Hidden:   convert.ToPointer(false),
			ParentID: "system",
		},

		// TBP module sidebars
		{
			Name:     "Endpoints",
			Label:    "tbp.endpoints.navigation",
			Slug:     "tbp-endpoints",
			Type:     "sidebar",
			Path:     "/tbp/endpoints",
			Icon:     "IconRoute",
			Perms:    "manage:tbp",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "tbp",
		},
		{
			Name:     "Routes",
			Label:    "tbp.routes.navigation",
			Slug:     "tbp-routes",
			Type:     "sidebar",
			Path:     "/tbp/routes",
			Icon:     "IconRoad",
			Perms:    "manage:tbp",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "tbp",
		},
		{
			Name:     "Transformers",
			Label:    "tbp.transformers.navigation",
			Slug:     "tbp-transformers",
			Type:     "sidebar",
			Path:     "/tbp/transformers",
			Icon:     "IconTransform",
			Perms:    "manage:tbp",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "tbp",
		},

		// Realtime module sidebars
		{
			Name:     "Notifications",
			Label:    "realtime.notifications.navigation",
			Slug:     "rt-notifications",
			Type:     "sidebar",
			Path:     "/rt/notifications",
			Icon:     "IconBell",
			Perms:    "read:realtime",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "realtime",
		},
		{
			Name:     "Channels",
			Label:    "realtime.channels.navigation",
			Slug:     "rt-channels",
			Type:     "sidebar",
			Path:     "/rt/channels",
			Icon:     "IconHash",
			Perms:    "manage:realtime",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "realtime",
		},
		{
			Name:     "Events",
			Label:    "realtime.events.navigation",
			Slug:     "rt-events",
			Type:     "sidebar",
			Path:     "/rt/events",
			Icon:     "IconFlash",
			Perms:    "read:realtime",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "realtime",
		},
		{
			Name:     "WebSocket",
			Label:    "realtime.websocket.navigation",
			Slug:     "rt-websocket",
			Type:     "sidebar",
			Path:     "/rt/ws",
			Icon:     "IconWifi",
			Perms:    "manage:realtime",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "realtime",
		},

		// Resources module sidebars
		{
			Name:     "Files",
			Label:    "resources.files.navigation",
			Slug:     "res-files",
			Type:     "sidebar",
			Path:     "/res",
			Icon:     "IconFiles",
			Perms:    "read:resource",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "resources",
		},
		{
			Name:     "Search",
			Label:    "resources.search.navigation",
			Slug:     "res-search",
			Type:     "sidebar",
			Path:     "/res/search",
			Icon:     "IconSearch",
			Perms:    "read:resource",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "resources",
		},
		{
			Name:     "Categories",
			Label:    "resources.categories.navigation",
			Slug:     "res-categories",
			Type:     "sidebar",
			Path:     "/res/categories",
			Icon:     "IconCategory",
			Perms:    "manage:resource",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "resources",
		},
		{
			Name:     "Quotas",
			Label:    "resources.quotas.navigation",
			Slug:     "res-quotas",
			Type:     "sidebar",
			Path:     "/res/quotas",
			Icon:     "IconGauge",
			Perms:    "manage:resource",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "resources",
		},

		// Payment module sidebars
		{
			Name:     "Orders",
			Label:    "payment.orders.navigation",
			Slug:     "pay-orders",
			Type:     "sidebar",
			Path:     "/pay/orders",
			Icon:     "IconReceipt",
			Perms:    "read:payment",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "payment",
		},
		{
			Name:     "Products",
			Label:    "payment.products.navigation",
			Slug:     "pay-products",
			Type:     "sidebar",
			Path:     "/pay/products",
			Icon:     "IconPackage",
			Perms:    "manage:payment",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "payment",
		},
		{
			Name:     "Subscriptions",
			Label:    "payment.subscriptions.navigation",
			Slug:     "pay-subscriptions",
			Type:     "sidebar",
			Path:     "/pay/subscriptions",
			Icon:     "IconRepeat",
			Perms:    "manage:payment",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "payment",
		},
		{
			Name:     "Channels",
			Label:    "payment.channels.navigation",
			Slug:     "pay-channels",
			Type:     "sidebar",
			Path:     "/pay/channels",
			Icon:     "IconCreditCard",
			Perms:    "manage:payment",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "payment",
		},
		{
			Name:     "Logs",
			Label:    "payment.logs.navigation",
			Slug:     "pay-logs",
			Type:     "sidebar",
			Path:     "/pay/logs",
			Icon:     "IconFileText",
			Perms:    "read:payment",
			Order:    convert.ToPointer(95),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "payment",
		},

		// Workflow module sidebars
		{
			Name:     "Processes",
			Label:    "workflow.processes.navigation",
			Slug:     "flow-processes",
			Type:     "sidebar",
			Path:     "/flow/processes",
			Icon:     "IconGitBranch",
			Perms:    "read:workflow",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},
		{
			Name:     "Tasks",
			Label:    "workflow.tasks.navigation",
			Slug:     "flow-tasks",
			Type:     "sidebar",
			Path:     "/flow/tasks",
			Icon:     "IconChecklist",
			Perms:    "read:workflow",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},
		{
			Name:     "Templates",
			Label:    "workflow.templates.navigation",
			Slug:     "flow-templates",
			Type:     "sidebar",
			Path:     "/flow/templates",
			Icon:     "IconTemplate",
			Perms:    "manage:workflow",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},
		{
			Name:     "Rules",
			Label:    "workflow.rules.navigation",
			Slug:     "flow-rules",
			Type:     "sidebar",
			Path:     "/flow/rules",
			Icon:     "IconRules",
			Perms:    "manage:workflow",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},
		{
			Name:     "Delegations",
			Label:    "workflow.delegations.navigation",
			Slug:     "flow-delegations",
			Type:     "sidebar",
			Path:     "/flow/delegations",
			Icon:     "IconUserShare",
			Perms:    "manage:workflow",
			Order:    convert.ToPointer(95),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},
		{
			Name:     "Histories",
			Label:    "workflow.histories.navigation",
			Slug:     "flow-histories",
			Type:     "sidebar",
			Path:     "/flow/histories",
			Icon:     "IconHistory",
			Perms:    "read:workflow",
			Order:    convert.ToPointer(94),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "workflow",
		},

		// System module sidebars
		{
			Name:     "Tenants",
			Label:    "system.tenants.navigation",
			Slug:     "system-tenants",
			Type:     "sidebar",
			Path:     "/system/tenants",
			Icon:     "IconBuildingCommunity",
			Perms:    "manage:system",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Roles",
			Label:    "system.roles.navigation",
			Slug:     "system-roles",
			Type:     "sidebar",
			Path:     "/system/roles",
			Icon:     "IconUsersGroup",
			Perms:    "manage:system",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Permissions",
			Label:    "system.permissions.navigation",
			Slug:     "system-permissions",
			Type:     "sidebar",
			Path:     "/system/permissions",
			Icon:     "IconLockAccess",
			Perms:    "manage:system",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Policies",
			Label:    "system.policies.navigation",
			Slug:     "system-policies",
			Type:     "sidebar",
			Path:     "/system/policies",
			Icon:     "IconShieldCheck",
			Perms:    "manage:system",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},
		{
			Name:     "Activities",
			Label:    "system.activities.navigation",
			Slug:     "system-activities",
			Type:     "sidebar",
			Path:     "/system/activities",
			Icon:     "IconActivity",
			Perms:    "read:system",
			Order:    convert.ToPointer(95),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "system",
		},

		// Organization module sidebars
		{
			Name:     "Groups",
			Label:    "organization.groups.navigation",
			Slug:     "org-groups",
			Type:     "sidebar",
			Path:     "/org/groups",
			Icon:     "IconBuilding",
			Perms:    "read:organization",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "organization",
		},

		// CMS module sidebars
		{
			Name:     "Topics",
			Label:    "cms.topics.navigation",
			Slug:     "cms-topics",
			Type:     "sidebar",
			Path:     "/cms/topics",
			Icon:     "IconArticle",
			Perms:    "read:cms",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "cms",
		},
		{
			Name:     "Taxonomies",
			Label:    "cms.taxonomies.navigation",
			Slug:     "cms-taxonomies",
			Type:     "sidebar",
			Path:     "/cms/taxonomies",
			Icon:     "IconTags",
			Perms:    "manage:cms",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "cms",
		},
		{
			Name:     "Channels",
			Label:    "cms.channels.navigation",
			Slug:     "cms-channels",
			Type:     "sidebar",
			Path:     "/cms/channels",
			Icon:     "IconHash",
			Perms:    "manage:cms",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "cms",
		},
		{
			Name:     "Media",
			Label:    "cms.media.navigation",
			Slug:     "cms-media",
			Type:     "sidebar",
			Path:     "/cms/media",
			Icon:     "IconPhoto",
			Perms:    "manage:cms",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "cms",
		},
		{
			Name:     "Distributions",
			Label:    "cms.distributions.navigation",
			Slug:     "cms-distributions",
			Type:     "sidebar",
			Path:     "/cms/distributions",
			Icon:     "IconShare",
			Perms:    "manage:cms",
			Order:    convert.ToPointer(95),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "cms",
		},

		// Plugins module sidebars
		{
			Name:     "Counters",
			Label:    "plugins.counters.navigation",
			Slug:     "plug-counters",
			Type:     "sidebar",
			Path:     "/plug/counters",
			Icon:     "IconNumbers",
			Perms:    "manage:plugins",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "plugins",
		},

		// Content module sidebars
		{
			Name:     "Topic",
			Label:    "content.topic.navigation",
			Slug:     "content-topic",
			Type:     "sidebar",
			Path:     "/content/topic",
			Icon:     "IconArticle",
			Perms:    "read:content",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "Taxonomy",
			Label:    "content.taxonomy.navigation",
			Type:     "sidebar",
			Path:     "/content/taxonomy",
			Icon:     "IconColumns",
			Perms:    "manage:taxonomy",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "Comment",
			Label:    "content.comment.navigation",
			Slug:     "content-comment",
			Type:     "sidebar",
			Path:     "/content/comment",
			Icon:     "IconMessage",
			Perms:    "read:comment",
			Order:    convert.ToPointer(96),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "Approval",
			Label:    "content.approval.navigation",
			Type:     "sidebar",
			Path:     "/content/approval",
			Icon:     "IconChecklist",
			Perms:    "manage:approval",
			Order:    convert.ToPointer(95),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "Trash",
			Label:    "content.trash.navigation",
			Slug:     "content-trash",
			Type:     "sidebar",
			Path:     "/content/trash",
			Icon:     "IconTrash",
			Perms:    "manage:content",
			Order:    convert.ToPointer(91),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "Component",
			Label:    "content.component.navigation",
			Slug:     "content-component",
			Type:     "sidebar",
			Path:     "/content/component",
			Icon:     "IconComponents",
			Perms:    "manage:content",
			Order:    convert.ToPointer(93),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "divide",
			Type:     "sidebar",
			Path:     "-",
			Order:    convert.ToPointer(97),
			Hidden:   convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "divide",
			Type:     "sidebar",
			Path:     "-",
			Order:    convert.ToPointer(94),
			Hidden:   convert.ToPointer(false),
			ParentID: "content",
		},
		{
			Name:     "divide",
			Type:     "sidebar",
			Path:     "-",
			Order:    convert.ToPointer(92),
			Hidden:   convert.ToPointer(false),
			ParentID: "content",
		},

		// Builder module sidebars
		{
			Name:     "Form",
			Label:    "builder.form.navigation",
			Slug:     "builder-form",
			Type:     "sidebar",
			Path:     "/builder/form",
			Icon:     "IconAtom",
			Perms:    "manage:builder",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "builder",
		},
		{
			Name:     "Feature",
			Label:    "builder.feature.navigation",
			Slug:     "builder-feature",
			Type:     "sidebar",
			Path:     "/builder/feature",
			Icon:     "IconApps",
			Perms:    "manage:builder",
			Order:    convert.ToPointer(1),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "builder",
		},

		// Example module sidebars (preserved, no permissions)
		{
			Name:     "Card",
			Label:    "example.card.navigation",
			Slug:     "example-card",
			Type:     "sidebar",
			Path:     "/example/card",
			Icon:     "IconCards",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
		{
			Name:     "List 1",
			Label:    "example.list1.navigation",
			Slug:     "example-list-1",
			Type:     "sidebar",
			Path:     "/example/list-1",
			Icon:     "IconTable",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
		{
			Name:     "List 2",
			Label:    "example.list2.navigation",
			Slug:     "example-list-2",
			Type:     "sidebar",
			Path:     "/example/list-2",
			Icon:     "IconTableAlias",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
		{
			Name:     "Analyze",
			Label:    "example.analyze.navigation",
			Slug:     "example-analyze",
			Type:     "sidebar",
			Path:     "/example/analyze",
			Icon:     "IconDeviceAnalytics",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
		{
			Name:     "Masonry",
			Label:    "example.masonry.navigation",
			Slug:     "example-masonry",
			Type:     "sidebar",
			Path:     "/example/masonry",
			Icon:     "IconLayoutBoard",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
		{
			Name:     "UI Elements",
			Label:    "example.ui.navigation",
			Slug:     "example-ui",
			Type:     "sidebar",
			Path:     "/example/ui/elements",
			Icon:     "IconBrandSupernova",
			Order:    convert.ToPointer(98),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
			ParentID: "example",
		},
	},
	Submenus: []structs.MenuBody{
		// Card submenus (preserved)
		{
			Name:     "Model",
			Label:    "example.card.model.navigation",
			Slug:     "submenu-model-group",
			Type:     "submenu",
			Path:     "-",
			Order:    convert.ToPointer(490),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "User",
			Label:    "example.card.model.user.navigation",
			Slug:     "submenu-model-user",
			Type:     "submenu",
			Path:     "/example/card/user",
			Order:    convert.ToPointer(460),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Role",
			Label:    "example.card.model.role.navigation",
			Slug:     "submenu-model-role",
			Type:     "submenu",
			Path:     "/example/card/role",
			Order:    convert.ToPointer(470),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Permission",
			Label:    "example.card.model.permission.navigation",
			Slug:     "submenu-model-permission",
			Type:     "submenu",
			Path:     "/example/card/permission",
			Order:    convert.ToPointer(480),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Component",
			Label:    "example.card.component.navigation",
			Slug:     "submenu-component-group",
			Type:     "submenu",
			Path:     "-",
			Order:    convert.ToPointer(390),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Element",
			Label:    "example.card.component.element.navigation",
			Slug:     "submenu-component-element",
			Type:     "submenu",
			Path:     "/example/card/element",
			Order:    convert.ToPointer(350),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Form",
			Label:    "example.card.component.form.navigation",
			Slug:     "submenu-component-form",
			Type:     "submenu",
			Path:     "/example/card/form",
			Order:    convert.ToPointer(360),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Layout",
			Label:    "example.card.component.layout.navigation",
			Slug:     "submenu-component-layout",
			Type:     "submenu",
			Path:     "/example/card/layout",
			Order:    convert.ToPointer(370),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Template",
			Label:    "example.card.component.template.navigation",
			Slug:     "submenu-component-template",
			Type:     "submenu",
			Path:     "/example/card/template",
			Order:    convert.ToPointer(380),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Efficiency",
			Label:    "example.card.efficiency.navigation",
			Slug:     "submenu-efficiency-group",
			Type:     "submenu",
			Path:     "-",
			Order:    convert.ToPointer(290),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Workflow",
			Label:    "example.card.efficiency.workflow.navigation",
			Slug:     "submenu-efficiency-workflow",
			Type:     "submenu",
			Path:     "/example/card/workflow",
			Order:    convert.ToPointer(250),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Task",
			Label:    "example.card.efficiency.task.navigation",
			Slug:     "submenu-efficiency-task",
			Type:     "submenu",
			Path:     "/example/card/task",
			Order:    convert.ToPointer(260),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Report",
			Label:    "example.card.efficiency.report.navigation",
			Slug:     "submenu-efficiency-report",
			Type:     "submenu",
			Path:     "/example/card/report",
			Order:    convert.ToPointer(270),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		{
			Name:     "Log",
			Label:    "example.card.efficiency.log.navigation",
			Slug:     "submenu-efficiency-log",
			Type:     "submenu",
			Path:     "/example/card/log",
			Order:    convert.ToPointer(280),
			Hidden:   convert.ToPointer(false),
			ParentID: "example-card",
		},
		// System settings submenu
		{
			Name:     "System",
			Label:    "system.basic.setting.navigation",
			Slug:     "submenu-system-setting",
			Type:     "submenu",
			Path:     "/system/basic",
			Perms:    "manage:system",
			Order:    convert.ToPointer(470),
			Hidden:   convert.ToPointer(false),
			ParentID: "system-basic",
		},
		{
			Name:     "User List",
			Label:    "system.user.list.navigation",
			Slug:     "submenu-user-list",
			Type:     "submenu",
			Path:     "/system/user/list",
			Perms:    "read:user",
			Order:    convert.ToPointer(450),
			Hidden:   convert.ToPointer(false),
			ParentID: "system-user",
		},
		{
			Name:     "User Create",
			Label:    "system.user.create.navigation",
			Slug:     "submenu-user-create",
			Type:     "submenu",
			Path:     "/system/user/create",
			Perms:    "create:user",
			Order:    convert.ToPointer(440),
			Hidden:   convert.ToPointer(false),
			ParentID: "system-user",
		},
	},
	Accounts: []structs.MenuBody{
		{
			Name:     "Profile",
			Label:    "dropdowns.account.profile.label",
			Slug:     "account-profile",
			Type:     "account",
			Path:     "/account/profile",
			Icon:     "IconUser",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "Settings",
			Label:    "dropdowns.account.settings.label",
			Slug:     "account-settings",
			Type:     "account",
			Path:     "/account/settings",
			Icon:     "IconSettings",
			Perms:    "manage:account",
			Order:    convert.ToPointer(90),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "Logout",
			Label:    "dropdowns.account.logout.label",
			Slug:     "account-logout",
			Type:     "account",
			Path:     "/logout",
			Icon:     "IconLogout",
			Order:    convert.ToPointer(0),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
	},
	Tenants: []structs.MenuBody{
		{
			Name:   "Tenant",
			Slug:   "tenant-dropdown-menu-label",
			Type:   "tenant",
			Path:   "-",
			Order:  convert.ToPointer(100),
			Hidden: convert.ToPointer(false),
		},
		{
			Name:     "Switch Tenant",
			Label:    "dropdowns.tenant.switch.label",
			Slug:     "tenant-switch",
			Type:     "tenant",
			Icon:     "IconSwitch",
			Order:    convert.ToPointer(99),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
		{
			Name:     "Manage Tenant",
			Label:    "dropdowns.tenant.manage.label",
			Slug:     "tenant-manage",
			Type:     "tenant",
			Path:     "/system/tenant",
			Icon:     "IconBuildingCommunity",
			Perms:    "manage:tenant",
			Order:    convert.ToPointer(90),
			Hidden:   convert.ToPointer(false),
			Disabled: convert.ToPointer(false),
		},
	},
}

// MenuPermissionMapping defines which permissions are required for each menu item
var MenuPermissionMapping = map[string]string{
	// Header menus
	"dashboard":    "read:dashboard",
	"system":       "read:system",
	"content":      "read:content",
	"tbp":          "manage:tbp",
	"realtime":     "read:realtime",
	"resources":    "read:resource",
	"payment":      "read:payment",
	"workflow":     "read:workflow",
	"iam":          "manage:iam",
	"organization": "read:organization",
	"cms":          "read:cms",
	"plugins":      "manage:plugins",
	"builder":      "manage:builder",
	// example has no permission requirement

	// System module sidebars
	"system-tenant":     "manage:tenant",
	"system-group":      "read:group",
	"system-user":       "read:user",
	"system-role":       "manage:role",
	"system-permission": "manage:permission",
	"system-menus":      "manage:menu",
	"system-dictionary": "read:dictionary",
	"system-basic":      "manage:system",

	// TBP module sidebars
	"tbp-endpoints":    "manage:tbp",
	"tbp-routes":       "manage:tbp",
	"tbp-transformers": "manage:tbp",

	// Realtime module sidebars
	"rt-notifications": "read:realtime",
	"rt-channels":      "manage:realtime",
	"rt-events":        "read:realtime",
	"rt-websocket":     "manage:realtime",

	// Resources module sidebars
	"res-files":      "read:resource",
	"res-search":     "read:resource",
	"res-categories": "manage:resource",
	"res-quotas":     "manage:resource",

	// Payment module sidebars
	"pay-orders":        "read:payment",
	"pay-products":      "manage:payment",
	"pay-subscriptions": "manage:payment",
	"pay-channels":      "manage:payment",
	"pay-logs":          "read:payment",

	// Workflow module sidebars
	"flow-processes":   "read:workflow",
	"flow-tasks":       "read:workflow",
	"flow-templates":   "manage:workflow",
	"flow-rules":       "manage:workflow",
	"flow-delegations": "manage:workflow",
	"flow-histories":   "read:workflow",

	// System module sidebars
	"system-tenants":     "manage:system",
	"system-roles":       "manage:system",
	"system-permissions": "manage:system",
	"system-policies":    "manage:system",
	"system-activities":  "read:system",

	// Organization module sidebars
	"org-groups": "read:organization",

	// CMS module sidebars
	"cms-topics":        "read:cms",
	"cms-taxonomies":    "manage:cms",
	"cms-channels":      "manage:cms",
	"cms-media":         "manage:cms",
	"cms-distributions": "manage:cms",

	// Plugins module sidebars
	"plug-counters": "manage:plugins",

	// Content module sidebars
	"content-topic":     "read:content",
	"content-comment":   "read:comment",
	"content-trash":     "manage:content",
	"content-component": "manage:content",

	// Builder module sidebars
	"builder-form":    "manage:builder",
	"builder-feature": "manage:builder",

	// Account menus
	"account-settings": "manage:account",
	// account-profile and account-logout have no permission requirement

	// Tenant menus
	"tenant-manage": "manage:tenant",
	// tenant-switch has no permission requirement

	// Submenus
	"submenu-system-setting": "manage:system",
	"submenu-user-list":      "read:user",
	"submenu-user-create":    "create:user",
}

// ValidateMenuPermissions validates that menu permissions align with defined permissions
func ValidateMenuPermissions(definedPermissions []string) map[string][]string {
	issues := make(map[string][]string)

	// Convert defined permissions to map for quick lookup
	permMap := make(map[string]bool)
	for _, perm := range definedPermissions {
		permMap[perm] = true
	}

	// Check each menu permission
	for menuSlug, requiredPerm := range MenuPermissionMapping {
		if requiredPerm == "" {
			continue // No permission required
		}

		// Convert menu permission format to permission name format
		// e.g., "read:dashboard" -> "Dashboard Access"
		if !permMap[requiredPerm] {
			if issues[menuSlug] == nil {
				issues[menuSlug] = make([]string, 0)
			}
			issues[menuSlug] = append(issues[menuSlug], fmt.Sprintf("Required permission '%s' not found in defined permissions", requiredPerm))
		}
	}

	return issues
}
