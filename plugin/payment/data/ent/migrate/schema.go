// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NcsePayChannelColumns holds the columns for the "ncse_pay_channel" table.
	NcsePayChannelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "provider", Type: field.TypeString, Comment: "Payment provider (stripe, paypal, alipay, wechatpay, etc.)"},
		{Name: "status", Type: field.TypeString, Comment: "Payment channel status (active, disabled, testing)", Default: "active"},
		{Name: "is_default", Type: field.TypeBool, Comment: "Whether this is the default channel for the provider", Default: false},
		{Name: "supported_types", Type: field.TypeJSON, Comment: "Supported payment types (one_time, subscription, recurring)"},
		{Name: "config", Type: field.TypeJSON, Comment: "Provider-specific configuration"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Comment: "Tenant ID if multi-tenant support is enabled"},
	}
	// NcsePayChannelTable holds the schema information for the "ncse_pay_channel" table.
	NcsePayChannelTable = &schema.Table{
		Name:       "ncse_pay_channel",
		Columns:    NcsePayChannelColumns,
		PrimaryKey: []*schema.Column{NcsePayChannelColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentchannel_id",
				Unique:  true,
				Columns: []*schema.Column{NcsePayChannelColumns[0]},
			},
			{
				Name:    "paymentchannel_provider",
				Unique:  false,
				Columns: []*schema.Column{NcsePayChannelColumns[8]},
			},
			{
				Name:    "paymentchannel_status",
				Unique:  false,
				Columns: []*schema.Column{NcsePayChannelColumns[9]},
			},
			{
				Name:    "paymentchannel_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayChannelColumns[13]},
			},
			{
				Name:    "paymentchannel_provider_is_default",
				Unique:  false,
				Columns: []*schema.Column{NcsePayChannelColumns[8], NcsePayChannelColumns[10]},
			},
		},
	}
	// NcsePayLogColumns holds the columns for the "ncse_pay_log" table.
	NcsePayLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "channel_id", Type: field.TypeString, Comment: "Payment channel ID"},
		{Name: "type", Type: field.TypeString, Comment: "Log type (create, update, verify, callback, notify, refund, error)"},
		{Name: "status_before", Type: field.TypeString, Nullable: true, Comment: "Payment status before the action"},
		{Name: "status_after", Type: field.TypeString, Nullable: true, Comment: "Payment status after the action"},
		{Name: "request_data", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Request data in JSON format"},
		{Name: "response_data", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Response data in JSON format"},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "IP address"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "User agent"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Comment: "User ID"},
		{Name: "error", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Error message if any"},
		{Name: "order_id", Type: field.TypeString, Size: 16, Comment: "Payment order ID"},
	}
	// NcsePayLogTable holds the schema information for the "ncse_pay_log" table.
	NcsePayLogTable = &schema.Table{
		Name:       "ncse_pay_log",
		Columns:    NcsePayLogColumns,
		PrimaryKey: []*schema.Column{NcsePayLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ncse_pay_log_ncse_pay_order_logs",
				Columns:    []*schema.Column{NcsePayLogColumns[14]},
				RefColumns: []*schema.Column{NcsePayOrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "paymentlog_id",
				Unique:  true,
				Columns: []*schema.Column{NcsePayLogColumns[0]},
			},
			{
				Name:    "paymentlog_order_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayLogColumns[14]},
			},
			{
				Name:    "paymentlog_channel_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayLogColumns[4]},
			},
			{
				Name:    "paymentlog_type",
				Unique:  false,
				Columns: []*schema.Column{NcsePayLogColumns[5]},
			},
			{
				Name:    "paymentlog_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayLogColumns[12]},
			},
		},
	}
	// NcsePayOrderColumns holds the columns for the "ncse_pay_order" table.
	NcsePayOrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "order_number", Type: field.TypeString, Unique: true, Comment: "Unique order number"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "Payment amount"},
		{Name: "currency", Type: field.TypeString, Comment: "Currency code (USD, EUR, GBP, etc.)", Default: "USD"},
		{Name: "status", Type: field.TypeString, Comment: "Payment status (pending, completed, failed, refunded, cancelled)", Default: "pending"},
		{Name: "type", Type: field.TypeString, Comment: "Payment type (one_time, subscription, recurring)", Default: "one_time"},
		{Name: "channel_id", Type: field.TypeString, Comment: "Payment channel ID"},
		{Name: "user_id", Type: field.TypeString, Comment: "User ID"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Comment: "Tenant ID"},
		{Name: "product_id", Type: field.TypeString, Nullable: true, Comment: "PaymentProduct ID if associated with a product"},
		{Name: "subscription_id", Type: field.TypeString, Nullable: true, Comment: "PaymentSubscription ID if associated with a subscription"},
		{Name: "expires_at", Type: field.TypeTime, Comment: "Expiration time for the payment"},
		{Name: "paid_at", Type: field.TypeTime, Nullable: true, Comment: "Time when the payment was completed"},
		{Name: "provider_ref", Type: field.TypeString, Nullable: true, Comment: "Reference ID from the payment provider"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "Payment description"},
	}
	// NcsePayOrderTable holds the schema information for the "ncse_pay_order" table.
	NcsePayOrderTable = &schema.Table{
		Name:       "ncse_pay_order",
		Columns:    NcsePayOrderColumns,
		PrimaryKey: []*schema.Column{NcsePayOrderColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentorder_id",
				Unique:  true,
				Columns: []*schema.Column{NcsePayOrderColumns[0]},
			},
			{
				Name:    "paymentorder_order_number",
				Unique:  true,
				Columns: []*schema.Column{NcsePayOrderColumns[6]},
			},
			{
				Name:    "paymentorder_status",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[9]},
			},
			{
				Name:    "paymentorder_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[12]},
			},
			{
				Name:    "paymentorder_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[13]},
			},
			{
				Name:    "paymentorder_channel_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[11]},
			},
			{
				Name:    "paymentorder_product_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[14]},
			},
			{
				Name:    "paymentorder_subscription_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayOrderColumns[15]},
			},
		},
	}
	// NcsePayProductColumns holds the columns for the "ncse_pay_product" table.
	NcsePayProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "status", Type: field.TypeString, Comment: "PaymentProduct status (active, disabled, draft)", Default: "active"},
		{Name: "pricing_type", Type: field.TypeString, Comment: "Pricing type (one_time, recurring, usage_based, tiered_usage)", Default: "one_time"},
		{Name: "price", Type: field.TypeFloat64, Comment: "Base price amount"},
		{Name: "currency", Type: field.TypeString, Comment: "Currency code (USD, EUR, GBP, etc.)", Default: "USD"},
		{Name: "billing_interval", Type: field.TypeString, Nullable: true, Comment: "Billing interval for recurring payments (daily, weekly, monthly, yearly)"},
		{Name: "trial_days", Type: field.TypeInt, Comment: "Number of trial days for recurring subscriptions", Default: 0},
		{Name: "features", Type: field.TypeJSON, Comment: "List of features included in the product"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Comment: "Tenant ID"},
	}
	// NcsePayProductTable holds the schema information for the "ncse_pay_product" table.
	NcsePayProductTable = &schema.Table{
		Name:       "ncse_pay_product",
		Columns:    NcsePayProductColumns,
		PrimaryKey: []*schema.Column{NcsePayProductColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentproduct_id",
				Unique:  true,
				Columns: []*schema.Column{NcsePayProductColumns[0]},
			},
			{
				Name:    "paymentproduct_status",
				Unique:  false,
				Columns: []*schema.Column{NcsePayProductColumns[8]},
			},
			{
				Name:    "paymentproduct_pricing_type",
				Unique:  false,
				Columns: []*schema.Column{NcsePayProductColumns[9]},
			},
			{
				Name:    "paymentproduct_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePayProductColumns[15]},
			},
		},
	}
	// NcsePaySubscriptionColumns holds the columns for the "ncse_pay_subscription" table.
	NcsePaySubscriptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "status", Type: field.TypeString, Comment: "PaymentSubscription status (active, trialing, cancelled, expired, past_due)", Default: "active"},
		{Name: "user_id", Type: field.TypeString, Comment: "User ID"},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true, Comment: "Tenant ID"},
		{Name: "channel_id", Type: field.TypeString, Comment: "Payment channel ID"},
		{Name: "current_period_start", Type: field.TypeTime, Comment: "Start of the current billing period"},
		{Name: "current_period_end", Type: field.TypeTime, Comment: "End of the current billing period"},
		{Name: "cancel_at", Type: field.TypeTime, Nullable: true, Comment: "When to cancel the subscription"},
		{Name: "cancelled_at", Type: field.TypeTime, Nullable: true, Comment: "When the subscription was cancelled"},
		{Name: "trial_start", Type: field.TypeTime, Nullable: true, Comment: "When the trial started"},
		{Name: "trial_end", Type: field.TypeTime, Nullable: true, Comment: "When the trial ends"},
		{Name: "provider_ref", Type: field.TypeString, Nullable: true, Comment: "Reference ID from the payment provider"},
		{Name: "product_id", Type: field.TypeString, Size: 16, Comment: "PaymentProduct ID"},
	}
	// NcsePaySubscriptionTable holds the schema information for the "ncse_pay_subscription" table.
	NcsePaySubscriptionTable = &schema.Table{
		Name:       "ncse_pay_subscription",
		Columns:    NcsePaySubscriptionColumns,
		PrimaryKey: []*schema.Column{NcsePaySubscriptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ncse_pay_subscription_ncse_pay_product_subscriptions",
				Columns:    []*schema.Column{NcsePaySubscriptionColumns[17]},
				RefColumns: []*schema.Column{NcsePayProductColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "paymentsubscription_id",
				Unique:  true,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[0]},
			},
			{
				Name:    "paymentsubscription_status",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[6]},
			},
			{
				Name:    "paymentsubscription_user_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[7]},
			},
			{
				Name:    "paymentsubscription_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[8]},
			},
			{
				Name:    "paymentsubscription_product_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[17]},
			},
			{
				Name:    "paymentsubscription_channel_id",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[9]},
			},
			{
				Name:    "paymentsubscription_current_period_end",
				Unique:  false,
				Columns: []*schema.Column{NcsePaySubscriptionColumns[11]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NcsePayChannelTable,
		NcsePayLogTable,
		NcsePayOrderTable,
		NcsePayProductTable,
		NcsePaySubscriptionTable,
	}
)

func init() {
	NcsePayChannelTable.Annotation = &entsql.Annotation{
		Table: "ncse_pay_channel",
	}
	NcsePayLogTable.ForeignKeys[0].RefTable = NcsePayOrderTable
	NcsePayLogTable.Annotation = &entsql.Annotation{
		Table: "ncse_pay_log",
	}
	NcsePayOrderTable.Annotation = &entsql.Annotation{
		Table: "ncse_pay_order",
	}
	NcsePayProductTable.Annotation = &entsql.Annotation{
		Table: "ncse_pay_product",
	}
	NcsePaySubscriptionTable.ForeignKeys[0].RefTable = NcsePayProductTable
	NcsePaySubscriptionTable.Annotation = &entsql.Annotation{
		Table: "ncse_pay_subscription",
	}
}
