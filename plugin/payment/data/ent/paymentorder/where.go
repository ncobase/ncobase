// Code generated by ent, DO NOT EDIT.

package paymentorder

import (
	"ncobase/payment/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldID, id))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// OrderNumber applies equality check predicate on the "order_number" field. It's identical to OrderNumberEQ.
func OrderNumber(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldOrderNumber, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldAmount, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCurrency, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldStatus, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldType, v))
}

// ChannelID applies equality check predicate on the "channel_id" field. It's identical to ChannelIDEQ.
func ChannelID(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldChannelID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUserID, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldTenantID, v))
}

// ProductID applies equality check predicate on the "product_id" field. It's identical to ProductIDEQ.
func ProductID(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldProductID, v))
}

// SubscriptionID applies equality check predicate on the "subscription_id" field. It's identical to SubscriptionIDEQ.
func SubscriptionID(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldSubscriptionID, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldExpiresAt, v))
}

// PaidAt applies equality check predicate on the "paid_at" field. It's identical to PaidAtEQ.
func PaidAt(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldPaidAt, v))
}

// ProviderRef applies equality check predicate on the "provider_ref" field. It's identical to ProviderRefEQ.
func ProviderRef(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldProviderRef, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldDescription, v))
}

// ExtrasIsNil applies the IsNil predicate on the "extras" field.
func ExtrasIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldExtras))
}

// ExtrasNotNil applies the NotNil predicate on the "extras" field.
func ExtrasNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldExtras))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldUpdatedAt))
}

// OrderNumberEQ applies the EQ predicate on the "order_number" field.
func OrderNumberEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldOrderNumber, v))
}

// OrderNumberNEQ applies the NEQ predicate on the "order_number" field.
func OrderNumberNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldOrderNumber, v))
}

// OrderNumberIn applies the In predicate on the "order_number" field.
func OrderNumberIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldOrderNumber, vs...))
}

// OrderNumberNotIn applies the NotIn predicate on the "order_number" field.
func OrderNumberNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldOrderNumber, vs...))
}

// OrderNumberGT applies the GT predicate on the "order_number" field.
func OrderNumberGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldOrderNumber, v))
}

// OrderNumberGTE applies the GTE predicate on the "order_number" field.
func OrderNumberGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldOrderNumber, v))
}

// OrderNumberLT applies the LT predicate on the "order_number" field.
func OrderNumberLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldOrderNumber, v))
}

// OrderNumberLTE applies the LTE predicate on the "order_number" field.
func OrderNumberLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldOrderNumber, v))
}

// OrderNumberContains applies the Contains predicate on the "order_number" field.
func OrderNumberContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldOrderNumber, v))
}

// OrderNumberHasPrefix applies the HasPrefix predicate on the "order_number" field.
func OrderNumberHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldOrderNumber, v))
}

// OrderNumberHasSuffix applies the HasSuffix predicate on the "order_number" field.
func OrderNumberHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldOrderNumber, v))
}

// OrderNumberEqualFold applies the EqualFold predicate on the "order_number" field.
func OrderNumberEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldOrderNumber, v))
}

// OrderNumberContainsFold applies the ContainsFold predicate on the "order_number" field.
func OrderNumberContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldOrderNumber, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v float64) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldAmount, v))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldCurrency, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldStatus, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldType, v))
}

// ChannelIDEQ applies the EQ predicate on the "channel_id" field.
func ChannelIDEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldChannelID, v))
}

// ChannelIDNEQ applies the NEQ predicate on the "channel_id" field.
func ChannelIDNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldChannelID, v))
}

// ChannelIDIn applies the In predicate on the "channel_id" field.
func ChannelIDIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldChannelID, vs...))
}

// ChannelIDNotIn applies the NotIn predicate on the "channel_id" field.
func ChannelIDNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldChannelID, vs...))
}

// ChannelIDGT applies the GT predicate on the "channel_id" field.
func ChannelIDGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldChannelID, v))
}

// ChannelIDGTE applies the GTE predicate on the "channel_id" field.
func ChannelIDGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldChannelID, v))
}

// ChannelIDLT applies the LT predicate on the "channel_id" field.
func ChannelIDLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldChannelID, v))
}

// ChannelIDLTE applies the LTE predicate on the "channel_id" field.
func ChannelIDLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldChannelID, v))
}

// ChannelIDContains applies the Contains predicate on the "channel_id" field.
func ChannelIDContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldChannelID, v))
}

// ChannelIDHasPrefix applies the HasPrefix predicate on the "channel_id" field.
func ChannelIDHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldChannelID, v))
}

// ChannelIDHasSuffix applies the HasSuffix predicate on the "channel_id" field.
func ChannelIDHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldChannelID, v))
}

// ChannelIDEqualFold applies the EqualFold predicate on the "channel_id" field.
func ChannelIDEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldChannelID, v))
}

// ChannelIDContainsFold applies the ContainsFold predicate on the "channel_id" field.
func ChannelIDContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldChannelID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldUserID, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldTenantID))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldTenantID, v))
}

// ProductIDEQ applies the EQ predicate on the "product_id" field.
func ProductIDEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldProductID, v))
}

// ProductIDNEQ applies the NEQ predicate on the "product_id" field.
func ProductIDNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldProductID, v))
}

// ProductIDIn applies the In predicate on the "product_id" field.
func ProductIDIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldProductID, vs...))
}

// ProductIDNotIn applies the NotIn predicate on the "product_id" field.
func ProductIDNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldProductID, vs...))
}

// ProductIDGT applies the GT predicate on the "product_id" field.
func ProductIDGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldProductID, v))
}

// ProductIDGTE applies the GTE predicate on the "product_id" field.
func ProductIDGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldProductID, v))
}

// ProductIDLT applies the LT predicate on the "product_id" field.
func ProductIDLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldProductID, v))
}

// ProductIDLTE applies the LTE predicate on the "product_id" field.
func ProductIDLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldProductID, v))
}

// ProductIDContains applies the Contains predicate on the "product_id" field.
func ProductIDContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldProductID, v))
}

// ProductIDHasPrefix applies the HasPrefix predicate on the "product_id" field.
func ProductIDHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldProductID, v))
}

// ProductIDHasSuffix applies the HasSuffix predicate on the "product_id" field.
func ProductIDHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldProductID, v))
}

// ProductIDIsNil applies the IsNil predicate on the "product_id" field.
func ProductIDIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldProductID))
}

// ProductIDNotNil applies the NotNil predicate on the "product_id" field.
func ProductIDNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldProductID))
}

// ProductIDEqualFold applies the EqualFold predicate on the "product_id" field.
func ProductIDEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldProductID, v))
}

// ProductIDContainsFold applies the ContainsFold predicate on the "product_id" field.
func ProductIDContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldProductID, v))
}

// SubscriptionIDEQ applies the EQ predicate on the "subscription_id" field.
func SubscriptionIDEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldSubscriptionID, v))
}

// SubscriptionIDNEQ applies the NEQ predicate on the "subscription_id" field.
func SubscriptionIDNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldSubscriptionID, v))
}

// SubscriptionIDIn applies the In predicate on the "subscription_id" field.
func SubscriptionIDIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldSubscriptionID, vs...))
}

// SubscriptionIDNotIn applies the NotIn predicate on the "subscription_id" field.
func SubscriptionIDNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldSubscriptionID, vs...))
}

// SubscriptionIDGT applies the GT predicate on the "subscription_id" field.
func SubscriptionIDGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldSubscriptionID, v))
}

// SubscriptionIDGTE applies the GTE predicate on the "subscription_id" field.
func SubscriptionIDGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldSubscriptionID, v))
}

// SubscriptionIDLT applies the LT predicate on the "subscription_id" field.
func SubscriptionIDLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldSubscriptionID, v))
}

// SubscriptionIDLTE applies the LTE predicate on the "subscription_id" field.
func SubscriptionIDLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldSubscriptionID, v))
}

// SubscriptionIDContains applies the Contains predicate on the "subscription_id" field.
func SubscriptionIDContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldSubscriptionID, v))
}

// SubscriptionIDHasPrefix applies the HasPrefix predicate on the "subscription_id" field.
func SubscriptionIDHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldSubscriptionID, v))
}

// SubscriptionIDHasSuffix applies the HasSuffix predicate on the "subscription_id" field.
func SubscriptionIDHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldSubscriptionID, v))
}

// SubscriptionIDIsNil applies the IsNil predicate on the "subscription_id" field.
func SubscriptionIDIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldSubscriptionID))
}

// SubscriptionIDNotNil applies the NotNil predicate on the "subscription_id" field.
func SubscriptionIDNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldSubscriptionID))
}

// SubscriptionIDEqualFold applies the EqualFold predicate on the "subscription_id" field.
func SubscriptionIDEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldSubscriptionID, v))
}

// SubscriptionIDContainsFold applies the ContainsFold predicate on the "subscription_id" field.
func SubscriptionIDContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldSubscriptionID, v))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldExpiresAt, v))
}

// PaidAtEQ applies the EQ predicate on the "paid_at" field.
func PaidAtEQ(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldPaidAt, v))
}

// PaidAtNEQ applies the NEQ predicate on the "paid_at" field.
func PaidAtNEQ(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldPaidAt, v))
}

// PaidAtIn applies the In predicate on the "paid_at" field.
func PaidAtIn(vs ...time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldPaidAt, vs...))
}

// PaidAtNotIn applies the NotIn predicate on the "paid_at" field.
func PaidAtNotIn(vs ...time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldPaidAt, vs...))
}

// PaidAtGT applies the GT predicate on the "paid_at" field.
func PaidAtGT(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldPaidAt, v))
}

// PaidAtGTE applies the GTE predicate on the "paid_at" field.
func PaidAtGTE(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldPaidAt, v))
}

// PaidAtLT applies the LT predicate on the "paid_at" field.
func PaidAtLT(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldPaidAt, v))
}

// PaidAtLTE applies the LTE predicate on the "paid_at" field.
func PaidAtLTE(v time.Time) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldPaidAt, v))
}

// PaidAtIsNil applies the IsNil predicate on the "paid_at" field.
func PaidAtIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldPaidAt))
}

// PaidAtNotNil applies the NotNil predicate on the "paid_at" field.
func PaidAtNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldPaidAt))
}

// ProviderRefEQ applies the EQ predicate on the "provider_ref" field.
func ProviderRefEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldProviderRef, v))
}

// ProviderRefNEQ applies the NEQ predicate on the "provider_ref" field.
func ProviderRefNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldProviderRef, v))
}

// ProviderRefIn applies the In predicate on the "provider_ref" field.
func ProviderRefIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldProviderRef, vs...))
}

// ProviderRefNotIn applies the NotIn predicate on the "provider_ref" field.
func ProviderRefNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldProviderRef, vs...))
}

// ProviderRefGT applies the GT predicate on the "provider_ref" field.
func ProviderRefGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldProviderRef, v))
}

// ProviderRefGTE applies the GTE predicate on the "provider_ref" field.
func ProviderRefGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldProviderRef, v))
}

// ProviderRefLT applies the LT predicate on the "provider_ref" field.
func ProviderRefLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldProviderRef, v))
}

// ProviderRefLTE applies the LTE predicate on the "provider_ref" field.
func ProviderRefLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldProviderRef, v))
}

// ProviderRefContains applies the Contains predicate on the "provider_ref" field.
func ProviderRefContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldProviderRef, v))
}

// ProviderRefHasPrefix applies the HasPrefix predicate on the "provider_ref" field.
func ProviderRefHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldProviderRef, v))
}

// ProviderRefHasSuffix applies the HasSuffix predicate on the "provider_ref" field.
func ProviderRefHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldProviderRef, v))
}

// ProviderRefIsNil applies the IsNil predicate on the "provider_ref" field.
func ProviderRefIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldProviderRef))
}

// ProviderRefNotNil applies the NotNil predicate on the "provider_ref" field.
func ProviderRefNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldProviderRef))
}

// ProviderRefEqualFold applies the EqualFold predicate on the "provider_ref" field.
func ProviderRefEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldProviderRef, v))
}

// ProviderRefContainsFold applies the ContainsFold predicate on the "provider_ref" field.
func ProviderRefContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldProviderRef, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.FieldContainsFold(FieldDescription, v))
}

// HasLogs applies the HasEdge predicate on the "logs" edge.
func HasLogs() predicate.PaymentOrder {
	return predicate.PaymentOrder(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, LogsTable, LogsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLogsWith applies the HasEdge predicate on the "logs" edge with a given conditions (other predicates).
func HasLogsWith(preds ...predicate.PaymentLog) predicate.PaymentOrder {
	return predicate.PaymentOrder(func(s *sql.Selector) {
		step := newLogsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PaymentOrder) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PaymentOrder) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PaymentOrder) predicate.PaymentOrder {
	return predicate.PaymentOrder(sql.NotPredicates(p))
}
