// Code generated by ent, DO NOT EDIT.

package logs

import (
	"ncobase/proxy/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldUpdatedAt, v))
}

// EndpointID applies equality check predicate on the "endpoint_id" field. It's identical to EndpointIDEQ.
func EndpointID(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldEndpointID, v))
}

// RouteID applies equality check predicate on the "route_id" field. It's identical to RouteIDEQ.
func RouteID(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRouteID, v))
}

// RequestMethod applies equality check predicate on the "request_method" field. It's identical to RequestMethodEQ.
func RequestMethod(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestPath applies equality check predicate on the "request_path" field. It's identical to RequestPathEQ.
func RequestPath(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestPath, v))
}

// RequestHeaders applies equality check predicate on the "request_headers" field. It's identical to RequestHeadersEQ.
func RequestHeaders(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestHeaders, v))
}

// RequestBody applies equality check predicate on the "request_body" field. It's identical to RequestBodyEQ.
func RequestBody(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestBody, v))
}

// StatusCode applies equality check predicate on the "status_code" field. It's identical to StatusCodeEQ.
func StatusCode(v int) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldStatusCode, v))
}

// ResponseHeaders applies equality check predicate on the "response_headers" field. It's identical to ResponseHeadersEQ.
func ResponseHeaders(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldResponseHeaders, v))
}

// ResponseBody applies equality check predicate on the "response_body" field. It's identical to ResponseBodyEQ.
func ResponseBody(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldResponseBody, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v int) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldDuration, v))
}

// Error applies equality check predicate on the "error" field. It's identical to ErrorEQ.
func Error(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldError, v))
}

// ClientIP applies equality check predicate on the "client_ip" field. It's identical to ClientIPEQ.
func ClientIP(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldClientIP, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldUserID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldUpdatedAt))
}

// EndpointIDEQ applies the EQ predicate on the "endpoint_id" field.
func EndpointIDEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldEndpointID, v))
}

// EndpointIDNEQ applies the NEQ predicate on the "endpoint_id" field.
func EndpointIDNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldEndpointID, v))
}

// EndpointIDIn applies the In predicate on the "endpoint_id" field.
func EndpointIDIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldEndpointID, vs...))
}

// EndpointIDNotIn applies the NotIn predicate on the "endpoint_id" field.
func EndpointIDNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldEndpointID, vs...))
}

// EndpointIDGT applies the GT predicate on the "endpoint_id" field.
func EndpointIDGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldEndpointID, v))
}

// EndpointIDGTE applies the GTE predicate on the "endpoint_id" field.
func EndpointIDGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldEndpointID, v))
}

// EndpointIDLT applies the LT predicate on the "endpoint_id" field.
func EndpointIDLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldEndpointID, v))
}

// EndpointIDLTE applies the LTE predicate on the "endpoint_id" field.
func EndpointIDLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldEndpointID, v))
}

// EndpointIDContains applies the Contains predicate on the "endpoint_id" field.
func EndpointIDContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldEndpointID, v))
}

// EndpointIDHasPrefix applies the HasPrefix predicate on the "endpoint_id" field.
func EndpointIDHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldEndpointID, v))
}

// EndpointIDHasSuffix applies the HasSuffix predicate on the "endpoint_id" field.
func EndpointIDHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldEndpointID, v))
}

// EndpointIDEqualFold applies the EqualFold predicate on the "endpoint_id" field.
func EndpointIDEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldEndpointID, v))
}

// EndpointIDContainsFold applies the ContainsFold predicate on the "endpoint_id" field.
func EndpointIDContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldEndpointID, v))
}

// RouteIDEQ applies the EQ predicate on the "route_id" field.
func RouteIDEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRouteID, v))
}

// RouteIDNEQ applies the NEQ predicate on the "route_id" field.
func RouteIDNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldRouteID, v))
}

// RouteIDIn applies the In predicate on the "route_id" field.
func RouteIDIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldRouteID, vs...))
}

// RouteIDNotIn applies the NotIn predicate on the "route_id" field.
func RouteIDNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldRouteID, vs...))
}

// RouteIDGT applies the GT predicate on the "route_id" field.
func RouteIDGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldRouteID, v))
}

// RouteIDGTE applies the GTE predicate on the "route_id" field.
func RouteIDGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldRouteID, v))
}

// RouteIDLT applies the LT predicate on the "route_id" field.
func RouteIDLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldRouteID, v))
}

// RouteIDLTE applies the LTE predicate on the "route_id" field.
func RouteIDLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldRouteID, v))
}

// RouteIDContains applies the Contains predicate on the "route_id" field.
func RouteIDContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldRouteID, v))
}

// RouteIDHasPrefix applies the HasPrefix predicate on the "route_id" field.
func RouteIDHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldRouteID, v))
}

// RouteIDHasSuffix applies the HasSuffix predicate on the "route_id" field.
func RouteIDHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldRouteID, v))
}

// RouteIDEqualFold applies the EqualFold predicate on the "route_id" field.
func RouteIDEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldRouteID, v))
}

// RouteIDContainsFold applies the ContainsFold predicate on the "route_id" field.
func RouteIDContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldRouteID, v))
}

// RequestMethodEQ applies the EQ predicate on the "request_method" field.
func RequestMethodEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestMethodNEQ applies the NEQ predicate on the "request_method" field.
func RequestMethodNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldRequestMethod, v))
}

// RequestMethodIn applies the In predicate on the "request_method" field.
func RequestMethodIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldRequestMethod, vs...))
}

// RequestMethodNotIn applies the NotIn predicate on the "request_method" field.
func RequestMethodNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldRequestMethod, vs...))
}

// RequestMethodGT applies the GT predicate on the "request_method" field.
func RequestMethodGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldRequestMethod, v))
}

// RequestMethodGTE applies the GTE predicate on the "request_method" field.
func RequestMethodGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldRequestMethod, v))
}

// RequestMethodLT applies the LT predicate on the "request_method" field.
func RequestMethodLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldRequestMethod, v))
}

// RequestMethodLTE applies the LTE predicate on the "request_method" field.
func RequestMethodLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldRequestMethod, v))
}

// RequestMethodContains applies the Contains predicate on the "request_method" field.
func RequestMethodContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldRequestMethod, v))
}

// RequestMethodHasPrefix applies the HasPrefix predicate on the "request_method" field.
func RequestMethodHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldRequestMethod, v))
}

// RequestMethodHasSuffix applies the HasSuffix predicate on the "request_method" field.
func RequestMethodHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldRequestMethod, v))
}

// RequestMethodEqualFold applies the EqualFold predicate on the "request_method" field.
func RequestMethodEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldRequestMethod, v))
}

// RequestMethodContainsFold applies the ContainsFold predicate on the "request_method" field.
func RequestMethodContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldRequestMethod, v))
}

// RequestPathEQ applies the EQ predicate on the "request_path" field.
func RequestPathEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestPath, v))
}

// RequestPathNEQ applies the NEQ predicate on the "request_path" field.
func RequestPathNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldRequestPath, v))
}

// RequestPathIn applies the In predicate on the "request_path" field.
func RequestPathIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldRequestPath, vs...))
}

// RequestPathNotIn applies the NotIn predicate on the "request_path" field.
func RequestPathNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldRequestPath, vs...))
}

// RequestPathGT applies the GT predicate on the "request_path" field.
func RequestPathGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldRequestPath, v))
}

// RequestPathGTE applies the GTE predicate on the "request_path" field.
func RequestPathGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldRequestPath, v))
}

// RequestPathLT applies the LT predicate on the "request_path" field.
func RequestPathLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldRequestPath, v))
}

// RequestPathLTE applies the LTE predicate on the "request_path" field.
func RequestPathLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldRequestPath, v))
}

// RequestPathContains applies the Contains predicate on the "request_path" field.
func RequestPathContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldRequestPath, v))
}

// RequestPathHasPrefix applies the HasPrefix predicate on the "request_path" field.
func RequestPathHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldRequestPath, v))
}

// RequestPathHasSuffix applies the HasSuffix predicate on the "request_path" field.
func RequestPathHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldRequestPath, v))
}

// RequestPathEqualFold applies the EqualFold predicate on the "request_path" field.
func RequestPathEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldRequestPath, v))
}

// RequestPathContainsFold applies the ContainsFold predicate on the "request_path" field.
func RequestPathContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldRequestPath, v))
}

// RequestHeadersEQ applies the EQ predicate on the "request_headers" field.
func RequestHeadersEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestHeaders, v))
}

// RequestHeadersNEQ applies the NEQ predicate on the "request_headers" field.
func RequestHeadersNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldRequestHeaders, v))
}

// RequestHeadersIn applies the In predicate on the "request_headers" field.
func RequestHeadersIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldRequestHeaders, vs...))
}

// RequestHeadersNotIn applies the NotIn predicate on the "request_headers" field.
func RequestHeadersNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldRequestHeaders, vs...))
}

// RequestHeadersGT applies the GT predicate on the "request_headers" field.
func RequestHeadersGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldRequestHeaders, v))
}

// RequestHeadersGTE applies the GTE predicate on the "request_headers" field.
func RequestHeadersGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldRequestHeaders, v))
}

// RequestHeadersLT applies the LT predicate on the "request_headers" field.
func RequestHeadersLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldRequestHeaders, v))
}

// RequestHeadersLTE applies the LTE predicate on the "request_headers" field.
func RequestHeadersLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldRequestHeaders, v))
}

// RequestHeadersContains applies the Contains predicate on the "request_headers" field.
func RequestHeadersContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldRequestHeaders, v))
}

// RequestHeadersHasPrefix applies the HasPrefix predicate on the "request_headers" field.
func RequestHeadersHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldRequestHeaders, v))
}

// RequestHeadersHasSuffix applies the HasSuffix predicate on the "request_headers" field.
func RequestHeadersHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldRequestHeaders, v))
}

// RequestHeadersIsNil applies the IsNil predicate on the "request_headers" field.
func RequestHeadersIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldRequestHeaders))
}

// RequestHeadersNotNil applies the NotNil predicate on the "request_headers" field.
func RequestHeadersNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldRequestHeaders))
}

// RequestHeadersEqualFold applies the EqualFold predicate on the "request_headers" field.
func RequestHeadersEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldRequestHeaders, v))
}

// RequestHeadersContainsFold applies the ContainsFold predicate on the "request_headers" field.
func RequestHeadersContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldRequestHeaders, v))
}

// RequestBodyEQ applies the EQ predicate on the "request_body" field.
func RequestBodyEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldRequestBody, v))
}

// RequestBodyNEQ applies the NEQ predicate on the "request_body" field.
func RequestBodyNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldRequestBody, v))
}

// RequestBodyIn applies the In predicate on the "request_body" field.
func RequestBodyIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldRequestBody, vs...))
}

// RequestBodyNotIn applies the NotIn predicate on the "request_body" field.
func RequestBodyNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldRequestBody, vs...))
}

// RequestBodyGT applies the GT predicate on the "request_body" field.
func RequestBodyGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldRequestBody, v))
}

// RequestBodyGTE applies the GTE predicate on the "request_body" field.
func RequestBodyGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldRequestBody, v))
}

// RequestBodyLT applies the LT predicate on the "request_body" field.
func RequestBodyLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldRequestBody, v))
}

// RequestBodyLTE applies the LTE predicate on the "request_body" field.
func RequestBodyLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldRequestBody, v))
}

// RequestBodyContains applies the Contains predicate on the "request_body" field.
func RequestBodyContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldRequestBody, v))
}

// RequestBodyHasPrefix applies the HasPrefix predicate on the "request_body" field.
func RequestBodyHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldRequestBody, v))
}

// RequestBodyHasSuffix applies the HasSuffix predicate on the "request_body" field.
func RequestBodyHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldRequestBody, v))
}

// RequestBodyIsNil applies the IsNil predicate on the "request_body" field.
func RequestBodyIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldRequestBody))
}

// RequestBodyNotNil applies the NotNil predicate on the "request_body" field.
func RequestBodyNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldRequestBody))
}

// RequestBodyEqualFold applies the EqualFold predicate on the "request_body" field.
func RequestBodyEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldRequestBody, v))
}

// RequestBodyContainsFold applies the ContainsFold predicate on the "request_body" field.
func RequestBodyContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldRequestBody, v))
}

// StatusCodeEQ applies the EQ predicate on the "status_code" field.
func StatusCodeEQ(v int) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldStatusCode, v))
}

// StatusCodeNEQ applies the NEQ predicate on the "status_code" field.
func StatusCodeNEQ(v int) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldStatusCode, v))
}

// StatusCodeIn applies the In predicate on the "status_code" field.
func StatusCodeIn(vs ...int) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldStatusCode, vs...))
}

// StatusCodeNotIn applies the NotIn predicate on the "status_code" field.
func StatusCodeNotIn(vs ...int) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldStatusCode, vs...))
}

// StatusCodeGT applies the GT predicate on the "status_code" field.
func StatusCodeGT(v int) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldStatusCode, v))
}

// StatusCodeGTE applies the GTE predicate on the "status_code" field.
func StatusCodeGTE(v int) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldStatusCode, v))
}

// StatusCodeLT applies the LT predicate on the "status_code" field.
func StatusCodeLT(v int) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldStatusCode, v))
}

// StatusCodeLTE applies the LTE predicate on the "status_code" field.
func StatusCodeLTE(v int) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldStatusCode, v))
}

// ResponseHeadersEQ applies the EQ predicate on the "response_headers" field.
func ResponseHeadersEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldResponseHeaders, v))
}

// ResponseHeadersNEQ applies the NEQ predicate on the "response_headers" field.
func ResponseHeadersNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldResponseHeaders, v))
}

// ResponseHeadersIn applies the In predicate on the "response_headers" field.
func ResponseHeadersIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldResponseHeaders, vs...))
}

// ResponseHeadersNotIn applies the NotIn predicate on the "response_headers" field.
func ResponseHeadersNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldResponseHeaders, vs...))
}

// ResponseHeadersGT applies the GT predicate on the "response_headers" field.
func ResponseHeadersGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldResponseHeaders, v))
}

// ResponseHeadersGTE applies the GTE predicate on the "response_headers" field.
func ResponseHeadersGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldResponseHeaders, v))
}

// ResponseHeadersLT applies the LT predicate on the "response_headers" field.
func ResponseHeadersLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldResponseHeaders, v))
}

// ResponseHeadersLTE applies the LTE predicate on the "response_headers" field.
func ResponseHeadersLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldResponseHeaders, v))
}

// ResponseHeadersContains applies the Contains predicate on the "response_headers" field.
func ResponseHeadersContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldResponseHeaders, v))
}

// ResponseHeadersHasPrefix applies the HasPrefix predicate on the "response_headers" field.
func ResponseHeadersHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldResponseHeaders, v))
}

// ResponseHeadersHasSuffix applies the HasSuffix predicate on the "response_headers" field.
func ResponseHeadersHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldResponseHeaders, v))
}

// ResponseHeadersIsNil applies the IsNil predicate on the "response_headers" field.
func ResponseHeadersIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldResponseHeaders))
}

// ResponseHeadersNotNil applies the NotNil predicate on the "response_headers" field.
func ResponseHeadersNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldResponseHeaders))
}

// ResponseHeadersEqualFold applies the EqualFold predicate on the "response_headers" field.
func ResponseHeadersEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldResponseHeaders, v))
}

// ResponseHeadersContainsFold applies the ContainsFold predicate on the "response_headers" field.
func ResponseHeadersContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldResponseHeaders, v))
}

// ResponseBodyEQ applies the EQ predicate on the "response_body" field.
func ResponseBodyEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldResponseBody, v))
}

// ResponseBodyNEQ applies the NEQ predicate on the "response_body" field.
func ResponseBodyNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldResponseBody, v))
}

// ResponseBodyIn applies the In predicate on the "response_body" field.
func ResponseBodyIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldResponseBody, vs...))
}

// ResponseBodyNotIn applies the NotIn predicate on the "response_body" field.
func ResponseBodyNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldResponseBody, vs...))
}

// ResponseBodyGT applies the GT predicate on the "response_body" field.
func ResponseBodyGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldResponseBody, v))
}

// ResponseBodyGTE applies the GTE predicate on the "response_body" field.
func ResponseBodyGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldResponseBody, v))
}

// ResponseBodyLT applies the LT predicate on the "response_body" field.
func ResponseBodyLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldResponseBody, v))
}

// ResponseBodyLTE applies the LTE predicate on the "response_body" field.
func ResponseBodyLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldResponseBody, v))
}

// ResponseBodyContains applies the Contains predicate on the "response_body" field.
func ResponseBodyContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldResponseBody, v))
}

// ResponseBodyHasPrefix applies the HasPrefix predicate on the "response_body" field.
func ResponseBodyHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldResponseBody, v))
}

// ResponseBodyHasSuffix applies the HasSuffix predicate on the "response_body" field.
func ResponseBodyHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldResponseBody, v))
}

// ResponseBodyIsNil applies the IsNil predicate on the "response_body" field.
func ResponseBodyIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldResponseBody))
}

// ResponseBodyNotNil applies the NotNil predicate on the "response_body" field.
func ResponseBodyNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldResponseBody))
}

// ResponseBodyEqualFold applies the EqualFold predicate on the "response_body" field.
func ResponseBodyEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldResponseBody, v))
}

// ResponseBodyContainsFold applies the ContainsFold predicate on the "response_body" field.
func ResponseBodyContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldResponseBody, v))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v int) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v int) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...int) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...int) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v int) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v int) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v int) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v int) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldDuration, v))
}

// ErrorEQ applies the EQ predicate on the "error" field.
func ErrorEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldError, v))
}

// ErrorNEQ applies the NEQ predicate on the "error" field.
func ErrorNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldError, v))
}

// ErrorIn applies the In predicate on the "error" field.
func ErrorIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldError, vs...))
}

// ErrorNotIn applies the NotIn predicate on the "error" field.
func ErrorNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldError, vs...))
}

// ErrorGT applies the GT predicate on the "error" field.
func ErrorGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldError, v))
}

// ErrorGTE applies the GTE predicate on the "error" field.
func ErrorGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldError, v))
}

// ErrorLT applies the LT predicate on the "error" field.
func ErrorLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldError, v))
}

// ErrorLTE applies the LTE predicate on the "error" field.
func ErrorLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldError, v))
}

// ErrorContains applies the Contains predicate on the "error" field.
func ErrorContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldError, v))
}

// ErrorHasPrefix applies the HasPrefix predicate on the "error" field.
func ErrorHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldError, v))
}

// ErrorHasSuffix applies the HasSuffix predicate on the "error" field.
func ErrorHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldError, v))
}

// ErrorIsNil applies the IsNil predicate on the "error" field.
func ErrorIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldError))
}

// ErrorNotNil applies the NotNil predicate on the "error" field.
func ErrorNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldError))
}

// ErrorEqualFold applies the EqualFold predicate on the "error" field.
func ErrorEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldError, v))
}

// ErrorContainsFold applies the ContainsFold predicate on the "error" field.
func ErrorContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldError, v))
}

// ClientIPEQ applies the EQ predicate on the "client_ip" field.
func ClientIPEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldClientIP, v))
}

// ClientIPNEQ applies the NEQ predicate on the "client_ip" field.
func ClientIPNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldClientIP, v))
}

// ClientIPIn applies the In predicate on the "client_ip" field.
func ClientIPIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldClientIP, vs...))
}

// ClientIPNotIn applies the NotIn predicate on the "client_ip" field.
func ClientIPNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldClientIP, vs...))
}

// ClientIPGT applies the GT predicate on the "client_ip" field.
func ClientIPGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldClientIP, v))
}

// ClientIPGTE applies the GTE predicate on the "client_ip" field.
func ClientIPGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldClientIP, v))
}

// ClientIPLT applies the LT predicate on the "client_ip" field.
func ClientIPLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldClientIP, v))
}

// ClientIPLTE applies the LTE predicate on the "client_ip" field.
func ClientIPLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldClientIP, v))
}

// ClientIPContains applies the Contains predicate on the "client_ip" field.
func ClientIPContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldClientIP, v))
}

// ClientIPHasPrefix applies the HasPrefix predicate on the "client_ip" field.
func ClientIPHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldClientIP, v))
}

// ClientIPHasSuffix applies the HasSuffix predicate on the "client_ip" field.
func ClientIPHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldClientIP, v))
}

// ClientIPIsNil applies the IsNil predicate on the "client_ip" field.
func ClientIPIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldClientIP))
}

// ClientIPNotNil applies the NotNil predicate on the "client_ip" field.
func ClientIPNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldClientIP))
}

// ClientIPEqualFold applies the EqualFold predicate on the "client_ip" field.
func ClientIPEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldClientIP, v))
}

// ClientIPContainsFold applies the ContainsFold predicate on the "client_ip" field.
func ClientIPContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldClientIP, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.Logs {
	return predicate.Logs(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.Logs {
	return predicate.Logs(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.Logs {
	return predicate.Logs(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.Logs {
	return predicate.Logs(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.Logs {
	return predicate.Logs(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.Logs {
	return predicate.Logs(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.Logs {
	return predicate.Logs(sql.FieldContainsFold(FieldUserID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Logs) predicate.Logs {
	return predicate.Logs(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Logs) predicate.Logs {
	return predicate.Logs(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Logs) predicate.Logs {
	return predicate.Logs(sql.NotPredicates(p))
}
