// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NcseTbpEndpointColumns holds the columns for the "ncse_tbp_endpoint" table.
	NcseTbpEndpointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "base_url", Type: field.TypeString, Comment: "Base URL of the third-party API endpoint"},
		{Name: "protocol", Type: field.TypeString, Comment: "Protocol (HTTP, HTTPS, WS, WSS, TCP, UDP)", Default: "HTTPS"},
		{Name: "auth_type", Type: field.TypeString, Comment: "Authentication type (None, Basic, Bearer, OAuth, ApiKey)", Default: "None"},
		{Name: "auth_config", Type: field.TypeString, Nullable: true, Comment: "Authentication configuration in JSON format"},
		{Name: "timeout", Type: field.TypeInt, Comment: "Request timeout in seconds", Default: 30},
		{Name: "use_circuit_breaker", Type: field.TypeBool, Comment: "Whether to use circuit breaker for this endpoint", Default: true},
		{Name: "retry_count", Type: field.TypeInt, Comment: "Number of retry attempts", Default: 3},
		{Name: "validate_ssl", Type: field.TypeBool, Comment: "Whether to validate SSL certificates", Default: true},
		{Name: "log_requests", Type: field.TypeBool, Comment: "Whether to log request details", Default: true},
		{Name: "log_responses", Type: field.TypeBool, Comment: "Whether to log response details", Default: true},
	}
	// NcseTbpEndpointTable holds the schema information for the "ncse_tbp_endpoint" table.
	NcseTbpEndpointTable = &schema.Table{
		Name:       "ncse_tbp_endpoint",
		Columns:    NcseTbpEndpointColumns,
		PrimaryKey: []*schema.Column{NcseTbpEndpointColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "endpoint_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpEndpointColumns[0]},
			},
			{
				Name:    "endpoint_name",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpEndpointColumns[1]},
			},
		},
	}
	// NcseTbpLogColumns holds the columns for the "ncse_tbp_log" table.
	NcseTbpLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "endpoint_id", Type: field.TypeString, Comment: "ID of the associated endpoint"},
		{Name: "route_id", Type: field.TypeString, Comment: "ID of the associated route"},
		{Name: "request_method", Type: field.TypeString, Comment: "HTTP method of the request"},
		{Name: "request_path", Type: field.TypeString, Comment: "Path of the request"},
		{Name: "request_headers", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Headers of the request (JSON format)"},
		{Name: "request_body", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Body of the request"},
		{Name: "status_code", Type: field.TypeInt, Comment: "HTTP status code of the response"},
		{Name: "response_headers", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Headers of the response (JSON format)"},
		{Name: "response_body", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Body of the response"},
		{Name: "duration", Type: field.TypeInt, Comment: "Duration of the request in milliseconds"},
		{Name: "error", Type: field.TypeString, Nullable: true, Comment: "Error message if any"},
		{Name: "client_ip", Type: field.TypeString, Nullable: true, Comment: "IP address of the client"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Comment: "ID of the user who made the request"},
	}
	// NcseTbpLogTable holds the schema information for the "ncse_tbp_log" table.
	NcseTbpLogTable = &schema.Table{
		Name:       "ncse_tbp_log",
		Columns:    NcseTbpLogColumns,
		PrimaryKey: []*schema.Column{NcseTbpLogColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logs_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpLogColumns[0]},
			},
			{
				Name:    "logs_endpoint_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTbpLogColumns[3]},
			},
			{
				Name:    "logs_route_id",
				Unique:  false,
				Columns: []*schema.Column{NcseTbpLogColumns[4]},
			},
			{
				Name:    "logs_created_at",
				Unique:  false,
				Columns: []*schema.Column{NcseTbpLogColumns[1]},
			},
		},
	}
	// NcseTbpRouteColumns holds the columns for the "ncse_tbp_route" table.
	NcseTbpRouteColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "endpoint_id", Type: field.TypeString, Comment: "ID of the associated endpoint"},
		{Name: "path_pattern", Type: field.TypeString, Comment: "Path pattern for this route (e.g., /api/users/:id)"},
		{Name: "target_path", Type: field.TypeString, Comment: "Target path on the remote API"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method (GET, POST, PUT, DELETE, etc.)", Default: "GET"},
		{Name: "input_transformer_id", Type: field.TypeString, Nullable: true, Comment: "ID of the transformer to apply to incoming requests"},
		{Name: "output_transformer_id", Type: field.TypeString, Nullable: true, Comment: "ID of the transformer to apply to outgoing responses"},
		{Name: "cache_enabled", Type: field.TypeBool, Comment: "Whether to cache responses", Default: false},
		{Name: "cache_ttl", Type: field.TypeInt, Comment: "Time to live for cached responses in seconds", Default: 300},
		{Name: "rate_limit", Type: field.TypeString, Nullable: true, Comment: "Rate limit expression (e.g., 100/minute)"},
		{Name: "strip_auth_header", Type: field.TypeBool, Comment: "Whether to strip authentication header when forwarding", Default: false},
	}
	// NcseTbpRouteTable holds the schema information for the "ncse_tbp_route" table.
	NcseTbpRouteTable = &schema.Table{
		Name:       "ncse_tbp_route",
		Columns:    NcseTbpRouteColumns,
		PrimaryKey: []*schema.Column{NcseTbpRouteColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "route_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpRouteColumns[0]},
			},
			{
				Name:    "route_endpoint_id_path_pattern_method",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpRouteColumns[9], NcseTbpRouteColumns[10], NcseTbpRouteColumns[12]},
			},
		},
	}
	// NcseTbpTransformerColumns holds the columns for the "ncse_tbp_transformer" table.
	NcseTbpTransformerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "description"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "is disabled", Default: false},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "type", Type: field.TypeString, Comment: "Transformer type (template, script, mapping)"},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Comment: "Transformer content (template, script or mapping definition)"},
		{Name: "content_type", Type: field.TypeString, Comment: "Content type (text/javascript, application/json, text/template)", Default: "application/json"},
	}
	// NcseTbpTransformerTable holds the schema information for the "ncse_tbp_transformer" table.
	NcseTbpTransformerTable = &schema.Table{
		Name:       "ncse_tbp_transformer",
		Columns:    NcseTbpTransformerColumns,
		PrimaryKey: []*schema.Column{NcseTbpTransformerColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "transformer_id",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpTransformerColumns[0]},
			},
			{
				Name:    "transformer_name",
				Unique:  true,
				Columns: []*schema.Column{NcseTbpTransformerColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NcseTbpEndpointTable,
		NcseTbpLogTable,
		NcseTbpRouteTable,
		NcseTbpTransformerTable,
	}
)

func init() {
	NcseTbpEndpointTable.Annotation = &entsql.Annotation{
		Table: "ncse_tbp_endpoint",
	}
	NcseTbpLogTable.Annotation = &entsql.Annotation{
		Table: "ncse_tbp_log",
	}
	NcseTbpRouteTable.Annotation = &entsql.Annotation{
		Table: "ncse_tbp_route",
	}
	NcseTbpTransformerTable.Annotation = &entsql.Annotation{
		Table: "ncse_tbp_transformer",
	}
}
