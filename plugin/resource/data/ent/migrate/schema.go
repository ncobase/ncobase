// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NcseResFileColumns holds the columns for the "ncse_res_file" table.
	NcseResFileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 16, Comment: "primary key"},
		{Name: "name", Type: field.TypeString, Unique: true, Nullable: true, Comment: "name"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "path"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type"},
		{Name: "size", Type: field.TypeInt, Comment: "size in bytes", Default: 0},
		{Name: "storage", Type: field.TypeString, Nullable: true, Comment: "storage type"},
		{Name: "bucket", Type: field.TypeString, Nullable: true, Comment: "bucket"},
		{Name: "endpoint", Type: field.TypeString, Nullable: true, Comment: "endpoint"},
		{Name: "owner_id", Type: field.TypeString, Nullable: true, Comment: "owner id"},
		{Name: "extras", Type: field.TypeJSON, Nullable: true, Comment: "Extend properties"},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Comment: "id of the creator"},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Comment: "id of the last updater"},
		{Name: "created_at", Type: field.TypeInt64, Nullable: true, Comment: "created at"},
		{Name: "updated_at", Type: field.TypeInt64, Nullable: true, Comment: "updated at"},
		{Name: "original_name", Type: field.TypeString, Nullable: true, Comment: "Original filename before processing"},
		{Name: "access_level", Type: field.TypeString, Comment: "Access level: public, private, shared", Default: "private"},
		{Name: "expires_at", Type: field.TypeInt64, Nullable: true, Comment: "Expiration timestamp"},
		{Name: "tags", Type: field.TypeJSON, Nullable: true, Comment: "File tags for categorization"},
		{Name: "is_public", Type: field.TypeBool, Comment: "Public access flag", Default: false},
		{Name: "category", Type: field.TypeString, Comment: "File category (image, document, video, etc.)", Default: "other"},
		{Name: "hash", Type: field.TypeString, Nullable: true, Comment: "File content hash for deduplication"},
		{Name: "processing_result", Type: field.TypeJSON, Nullable: true, Comment: "Processing operation results"},
	}
	// NcseResFileTable holds the schema information for the "ncse_res_file" table.
	NcseResFileTable = &schema.Table{
		Name:       "ncse_res_file",
		Columns:    NcseResFileColumns,
		PrimaryKey: []*schema.Column{NcseResFileColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "file_id",
				Unique:  true,
				Columns: []*schema.Column{NcseResFileColumns[0]},
			},
			{
				Name:    "file_name",
				Unique:  true,
				Columns: []*schema.Column{NcseResFileColumns[1]},
			},
			{
				Name:    "file_owner_id",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8]},
			},
			{
				Name:    "file_owner_id_name",
				Unique:  true,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[1]},
			},
			{
				Name:    "file_id_created_at",
				Unique:  true,
				Columns: []*schema.Column{NcseResFileColumns[0], NcseResFileColumns[12]},
			},
			{
				Name:    "file_owner_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[12]},
			},
			{
				Name:    "file_category",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[19]},
			},
			{
				Name:    "file_is_public",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[18]},
			},
			{
				Name:    "file_access_level",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[15]},
			},
			{
				Name:    "file_storage",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[5]},
			},
			{
				Name:    "file_type",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[3]},
			},
			{
				Name:    "file_hash",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[20]},
			},
			{
				Name:    "file_owner_id_category",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[19]},
			},
			{
				Name:    "file_owner_id_is_public",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[18]},
			},
			{
				Name:    "file_owner_id_access_level",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[15]},
			},
			{
				Name:    "file_owner_id_type",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[3]},
			},
			{
				Name:    "file_created_by_created_at",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[10], NcseResFileColumns[12]},
			},
			{
				Name:    "file_name",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[1]},
			},
			{
				Name:    "file_original_name",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[14]},
			},
			{
				Name:    "file_path",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[2]},
			},
			{
				Name:    "file_expires_at",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[16]},
			},
			{
				Name:    "file_created_at_expires_at",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[12], NcseResFileColumns[16]},
			},
			{
				Name:    "file_owner_id_size",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[8], NcseResFileColumns[4]},
			},
			{
				Name:    "file_size",
				Unique:  false,
				Columns: []*schema.Column{NcseResFileColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NcseResFileTable,
	}
)

func init() {
	NcseResFileTable.Annotation = &entsql.Annotation{
		Table: "ncse_res_file",
	}
}
